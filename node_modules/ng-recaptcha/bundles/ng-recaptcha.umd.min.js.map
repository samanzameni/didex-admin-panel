{"version":3,"sources":["../../node_modules/tslib/tslib.es6.js","ng://ng-recaptcha/recaptcha/recaptcha-loader.service.ts","ng://ng-recaptcha/recaptcha/recaptcha-settings.ts","ng://ng-recaptcha/recaptcha/recaptcha.component.ts","ng://ng-recaptcha/recaptcha/recaptcha-common.module.ts","ng://ng-recaptcha/recaptcha/recaptcha.module.ts","ng://ng-recaptcha/recaptcha/recaptcha-v3.service.ts","ng://ng-recaptcha/recaptcha/recaptcha-v3.module.ts","ng://ng-recaptcha/recaptcha/recaptcha-value-accessor.directive.ts","ng://ng-recaptcha/recaptcha/recaptcha-forms.module.ts"],"names":["__decorate","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","RECAPTCHA_LANGUAGE","InjectionToken","RECAPTCHA_BASE_URL","RECAPTCHA_NONCE","loadScript","renderMode","onLoaded","urlParams","url","nonce","window","ng2recaptchaloaded","grecaptcha","script","document","createElement","innerHTML","baseUrl","src","async","defer","head","appendChild","RecaptchaLoaderService","platformId","language","this","init","ready","isPlatformBrowser","RecaptchaLoaderService_1","asObservable","of","prototype","subject_1","BehaviorSubject","next","Injectable","tslib_1.__param","Inject","PLATFORM_ID","Optional","RECAPTCHA_SETTINGS","nextId","RecaptchaComponent","elementRef","loader","zone","settings","id","resolved","EventEmitter","siteKey","theme","type","size","badge","ngAfterViewInit","_this","subscription","subscribe","render","Function","renderRecaptcha","ngOnDestroy","grecaptchaReset","unsubscribe","execute","widget","executeRequested","reset","getResponse","emit","expired","captchaResponseCallback","response","runOutsideAngular","nativeElement","callback","run","expired-callback","sitekey","tabindex","tabIndex","tslib_1.__decorate","Input","HostBinding","Output","Component","exportAs","selector","template","ElementRef","NgZone","RecaptchaCommonModule","NgModule","declarations","exports","RecaptchaModule","forRoot","RecaptchaModule_1","imports","providers","RECAPTCHA_V3_SITE_KEY","ReCaptchaV3Service","onLoadComplete","actionBacklog","forEach","_a","_b","o","n","m","Symbol","iterator","e","call","ar","done","push","value","error","__read","action","subject","executeActionWithSubject","undefined","isBrowser","onExecuteSubject","Subject","onExecuteObservable","then","token","complete","String","RecaptchaV3Module","RecaptchaValueAccessorDirective","host","writeValue","registerOnChange","fn","onChange","registerOnTouched","onTouched","onResolve","$event","HostListener","RecaptchaValueAccessorDirective_1","Directive","multi","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","RecaptchaFormsModule","FormsModule"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { isPlatformBrowser } from '@angular/common';\nimport {\n  Inject,\n  Injectable,\n  InjectionToken,\n  Optional,\n  PLATFORM_ID,\n} from '@angular/core';\nimport { BehaviorSubject, Observable, of } from 'rxjs';\n\nexport const RECAPTCHA_LANGUAGE = new InjectionToken<string>('recaptcha-language');\nexport const RECAPTCHA_BASE_URL = new InjectionToken<string>('recaptcha-base-url');\nexport const RECAPTCHA_NONCE = new InjectionToken<string>('recaptcha-nonce-tag');\n\ndeclare global {\n  interface Window {\n    ng2recaptchaloaded: () => void;\n  }\n}\n\nexport function loadScript(\n  renderMode: 'explicit' | string,\n  onLoaded: (grecaptcha: ReCaptchaV2.ReCaptcha) => void,\n  urlParams: string,\n  url?: string,\n  nonce?: string,\n) {\n  window.ng2recaptchaloaded = () => {\n    onLoaded(grecaptcha);\n  };\n  const script = document.createElement('script');\n  script.innerHTML = '';\n  const baseUrl = url || 'https://www.google.com/recaptcha/api.js';\n\n  script.src = `${baseUrl}?render=${renderMode}&onload=ng2recaptchaloaded${urlParams}`;\n  if (nonce) {\n    // tslint:disable-next-line:no-any Remove \"any\" cast once we upgrade Angular to 7 and TypeScript along with it\n    (script as any).nonce = nonce;\n  }\n  script.async = true;\n  script.defer = true;\n  document.head.appendChild(script);\n}\n\n@Injectable()\nexport class RecaptchaLoaderService {\n  /**\n   * @internal\n   * @nocollapse\n   */\n  private static ready: BehaviorSubject<ReCaptchaV2.ReCaptcha> = null;\n\n  public ready: Observable<ReCaptchaV2.ReCaptcha>;\n\n  /** @internal */\n  private language: string;\n  /** @internal */\n  private baseUrl: string;\n  /** @internal */\n  private nonce: string;\n\n  constructor(\n    // tslint:disable-next-line:no-any\n    @Inject(PLATFORM_ID) private readonly platformId: any,\n    @Optional() @Inject(RECAPTCHA_LANGUAGE) language?: string,\n    @Optional() @Inject(RECAPTCHA_BASE_URL) baseUrl?: string,\n    @Optional() @Inject(RECAPTCHA_NONCE) nonce?: string,\n  ) {\n    this.language = language;\n    this.baseUrl = baseUrl;\n    this.nonce = nonce;\n    this.init();\n    this.ready = isPlatformBrowser(this.platformId) ? RecaptchaLoaderService.ready.asObservable() : of();\n  }\n\n  /** @internal */\n  private init() {\n    if (RecaptchaLoaderService.ready) {\n      return;\n    }\n    if (isPlatformBrowser(this.platformId)) {\n      const subject = new BehaviorSubject<ReCaptchaV2.ReCaptcha>(null);\n      RecaptchaLoaderService.ready = subject;\n      const langParam = this.language ? '&hl=' + this.language : '';\n      loadScript('explicit', (grecaptcha) => subject.next(grecaptcha), langParam, this.baseUrl, this.nonce);\n    }\n  }\n}\n","import { InjectionToken } from '@angular/core';\n\nexport const RECAPTCHA_SETTINGS = new InjectionToken<RecaptchaSettings>('recaptcha-settings');\n\nexport interface RecaptchaSettings {\n  siteKey?: string;\n  theme?: ReCaptchaV2.Theme;\n  type?: ReCaptchaV2.Type;\n  size?: ReCaptchaV2.Size;\n  badge?: ReCaptchaV2.Badge;\n}\n","import {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  Inject,\n  Input,\n  NgZone,\n  OnDestroy,\n  Optional,\n  Output,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { RecaptchaLoaderService } from './recaptcha-loader.service';\nimport { RECAPTCHA_SETTINGS, RecaptchaSettings } from './recaptcha-settings';\n\nlet nextId = 0;\n\n@Component({\n  exportAs: 'reCaptcha',\n  selector: 're-captcha',\n  template: ``,\n})\nexport class RecaptchaComponent implements AfterViewInit, OnDestroy {\n  @Input()\n  @HostBinding('attr.id')\n  public id = `ngrecaptcha-${nextId++}`;\n\n  @Input() public siteKey: string;\n  @Input() public theme: ReCaptchaV2.Theme;\n  @Input() public type: ReCaptchaV2.Type;\n  @Input() public size: ReCaptchaV2.Size;\n  @Input() public tabIndex: number;\n  @Input() public badge: ReCaptchaV2.Badge;\n\n  @Output() public resolved = new EventEmitter<string>();\n\n  /** @internal */\n  private subscription: Subscription;\n  /** @internal */\n  private widget: number;\n  /** @internal */\n  private grecaptcha: ReCaptchaV2.ReCaptcha;\n  /** @internal */\n  private executeRequested: boolean;\n\n  constructor(\n    private elementRef: ElementRef,\n    private loader: RecaptchaLoaderService,\n    private zone: NgZone,\n    @Optional() @Inject(RECAPTCHA_SETTINGS) settings?: RecaptchaSettings,\n  ) {\n    if (settings) {\n      this.siteKey = settings.siteKey;\n      this.theme = settings.theme;\n      this.type = settings.type;\n      this.size = settings.size;\n      this.badge = settings.badge;\n    }\n  }\n\n  public ngAfterViewInit() {\n    this.subscription = this.loader.ready.subscribe((grecaptcha: ReCaptchaV2.ReCaptcha) => {\n      if (grecaptcha != null && grecaptcha.render instanceof Function) {\n        this.grecaptcha = grecaptcha;\n        this.renderRecaptcha();\n      }\n    });\n  }\n\n  public ngOnDestroy() {\n    // reset the captcha to ensure it does not leave anything behind\n    // after the component is no longer needed\n    this.grecaptchaReset();\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n\n  /**\n   * Executes the invisible recaptcha.\n   * Does nothing if component's size is not set to \"invisible\".\n   */\n  public execute(): void {\n    if (this.size !== 'invisible') {\n      return;\n    }\n\n    if (this.widget != null) {\n      this.grecaptcha.execute(this.widget);\n    } else {\n      // delay execution of recaptcha until it actually renders\n      this.executeRequested = true;\n    }\n  }\n\n  public reset() {\n    if (this.widget != null) {\n      if (this.grecaptcha.getResponse(this.widget)) {\n        // Only emit an event in case if something would actually change.\n        // That way we do not trigger \"touching\" of the control if someone does a \"reset\"\n        // on a non-resolved captcha.\n        this.resolved.emit(null);\n      }\n\n      this.grecaptchaReset();\n    }\n  }\n\n  /** @internal */\n  private expired() {\n    this.resolved.emit(null);\n  }\n\n  /** @internal */\n  private captchaResponseCallback(response: string) {\n    this.resolved.emit(response);\n  }\n\n  /** @internal */\n  private grecaptchaReset() {\n    if (this.widget != null) {\n      this.zone.runOutsideAngular(() => this.grecaptcha.reset(this.widget));\n    }\n  }\n\n  /** @internal */\n  private renderRecaptcha() {\n    this.widget = this.grecaptcha.render(this.elementRef.nativeElement, {\n      badge: this.badge,\n      callback: (response: string) => {\n        this.zone.run(() => this.captchaResponseCallback(response));\n      },\n      'expired-callback': () => {\n        this.zone.run(() => this.expired());\n      },\n      sitekey: this.siteKey,\n      size: this.size,\n      tabindex: this.tabIndex,\n      theme: this.theme,\n      type: this.type,\n    });\n\n    if (this.executeRequested === true) {\n      this.executeRequested = false;\n      this.execute();\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { RecaptchaComponent } from './recaptcha.component';\n\n@NgModule({\n  declarations: [\n    RecaptchaComponent,\n  ],\n  exports: [\n    RecaptchaComponent,\n  ],\n})\nexport class RecaptchaCommonModule {\n}\n","import { NgModule } from '@angular/core';\n\nimport { RecaptchaCommonModule } from './recaptcha-common.module';\nimport { RecaptchaLoaderService } from './recaptcha-loader.service';\nimport { RecaptchaComponent } from './recaptcha.component';\n\n@NgModule({\n  exports: [\n    RecaptchaComponent,\n  ],\n  imports: [\n    RecaptchaCommonModule,\n  ],\n  providers: [\n    RecaptchaLoaderService,\n  ],\n})\nexport class RecaptchaModule {\n  // We need this to maintain backwards-compatibility with v4. Removing this will be a breaking change\n  public static forRoot() {\n    return RecaptchaModule;\n  }\n}\n","import { isPlatformBrowser } from '@angular/common';\nimport { Inject, Injectable, InjectionToken, NgZone, Optional, PLATFORM_ID } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\nimport { loadScript, RECAPTCHA_BASE_URL, RECAPTCHA_NONCE } from './recaptcha-loader.service';\n\nexport const RECAPTCHA_V3_SITE_KEY = new InjectionToken<string>('recaptcha-v3-site-key');\n\nexport interface OnExecuteData {\n  /**\n   * The name of the action that has been executed.\n   */\n  action: string;\n  /**\n   * The token that reCAPTCHA v3 provided when executing the action.\n   */\n  token: string;\n}\n\ntype ActionBacklogEntry = [string, Subject<string>];\n\n/**\n * The main service for working with reCAPTCHA v3 APIs.\n *\n * Use the `execute` method for executing a single action, and\n * `onExecute` observable for listening to all actions at once.\n */\n@Injectable()\nexport class ReCaptchaV3Service {\n  /** @internal */\n  private readonly isBrowser: boolean;\n  /** @internal */\n  private readonly siteKey: string;\n  /** @internal */\n  private readonly zone: NgZone;\n  /** @internal */\n  private actionBacklog: ActionBacklogEntry[] | undefined;\n  /** @internal */\n  private nonce: string;\n  /** @internal */\n  private baseUrl: string;\n  /** @internal */\n  private grecaptcha: ReCaptchaV2.ReCaptcha;\n\n  /** @internal */\n  private onExecuteSubject: Subject<OnExecuteData>;\n  /** @internal */\n  private onExecuteObservable: Observable<OnExecuteData>;\n\n  constructor(\n    zone: NgZone,\n    @Inject(RECAPTCHA_V3_SITE_KEY) siteKey: string,\n    // tslint:disable-next-line:no-any\n    @Inject(PLATFORM_ID) platformId: any,\n    @Optional() @Inject(RECAPTCHA_BASE_URL) baseUrl?: string,\n    @Optional() @Inject(RECAPTCHA_NONCE) nonce?: string,\n  ) {\n    this.zone = zone;\n    this.isBrowser = isPlatformBrowser(platformId);\n    this.siteKey = siteKey;\n    this.nonce = nonce;\n    this.baseUrl = baseUrl;\n\n    this.init();\n  }\n\n  public get onExecute(): Observable<OnExecuteData> {\n    if (!this.onExecuteSubject) {\n      this.onExecuteSubject = new Subject<OnExecuteData>();\n      this.onExecuteObservable = this.onExecuteSubject.asObservable();\n    }\n\n    return this.onExecuteObservable;\n  }\n\n  /**\n   * Executes the provided `action` with reCAPTCHA v3 API.\n   * Use the emitted token value for verification purposes on the backend.\n   *\n   * For more information about reCAPTCHA v3 actions and tokens refer to the official documentation at\n   * https://developers.google.com/recaptcha/docs/v3.\n   *\n   * @param {string} action the action to execute\n   * @returns {Observable<string>} an `Observable` that will emit the reCAPTCHA v3 string `token` value whenever ready.\n   * The returned `Observable` completes immediately after emitting a value.\n   */\n  public execute(action: string): Observable<string> {\n    const subject = new Subject<string>();\n    if (this.isBrowser) {\n      if (!this.grecaptcha) {\n        // todo: add to array of later executions\n        if (!this.actionBacklog) {\n          this.actionBacklog = [];\n        }\n\n        this.actionBacklog.push([action, subject]);\n      } else {\n        this.executeActionWithSubject(action, subject);\n      }\n    }\n\n    return subject.asObservable();\n  }\n\n  /** @internal */\n  private executeActionWithSubject(action: string, subject: Subject<string>): void {\n    this.zone.runOutsideAngular(() => {\n      // tslint:disable-next-line:no-any\n      (this.grecaptcha.execute as any)(\n        this.siteKey,\n        { action },\n      ).then((token: string) => {\n        this.zone.run(() => {\n          subject.next(token);\n          subject.complete();\n          if (this.onExecuteSubject) {\n            this.onExecuteSubject.next({ action, token });\n          }\n        });\n      });\n    });\n  }\n\n  /** @internal */\n  private init() {\n    if (this.isBrowser) {\n      if ('grecaptcha' in window) {\n        this.grecaptcha = grecaptcha;\n      } else {\n        loadScript(this.siteKey, this.onLoadComplete, '', this.baseUrl, this.nonce);\n      }\n    }\n  }\n\n  /** @internal */\n  private onLoadComplete = (grecaptcha: ReCaptchaV2.ReCaptcha) => {\n    this.grecaptcha = grecaptcha;\n    if (this.actionBacklog && this.actionBacklog.length > 0) {\n      this.actionBacklog.forEach(([action, subject]) => this.executeActionWithSubject(action, subject));\n      this.actionBacklog = undefined;\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { ReCaptchaV3Service } from './recaptcha-v3.service';\n\n@NgModule({\n  providers: [\n    ReCaptchaV3Service,\n  ],\n})\nexport class RecaptchaV3Module {\n}\n","import {\n  Directive,\n  forwardRef,\n  HostListener,\n} from '@angular/core';\nimport {\n  ControlValueAccessor,\n  NG_VALUE_ACCESSOR,\n} from '@angular/forms';\n\nimport { RecaptchaComponent } from './recaptcha.component';\n\n@Directive({\n  providers: [\n    {\n      multi: true,\n      provide: NG_VALUE_ACCESSOR,\n      // tslint:disable-next-line:no-forward-ref\n      useExisting: forwardRef(() => RecaptchaValueAccessorDirective),\n    },\n  ],\n  // tslint:disable-next-line:directive-selector\n  selector: 're-captcha[formControlName],re-captcha[formControl],re-captcha[ngModel]',\n})\nexport class RecaptchaValueAccessorDirective implements ControlValueAccessor {\n  /** @internal */\n  private onChange: (value: string) => void;\n\n  /** @internal */\n  private onTouched: () => void;\n\n  constructor(private host: RecaptchaComponent) { }\n\n  public writeValue(value: string): void {\n    if (!value) {\n      this.host.reset();\n    }\n  }\n\n  public registerOnChange(fn: (value: string) => void): void { this.onChange = fn; }\n  public registerOnTouched(fn: () => void): void { this.onTouched = fn; }\n\n  @HostListener('resolved', ['$event']) public onResolve($event: string) {\n    if (this.onChange) {\n      this.onChange($event);\n    }\n    if (this.onTouched) {\n      this.onTouched();\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { RecaptchaCommonModule } from './recaptcha-common.module';\nimport { RecaptchaValueAccessorDirective } from './recaptcha-value-accessor.directive';\n\n@NgModule({\n  declarations: [\n    RecaptchaValueAccessorDirective,\n  ],\n  exports: [RecaptchaValueAccessorDirective],\n  imports: [FormsModule, RecaptchaCommonModule],\n})\nexport class RecaptchaFormsModule {\n}\n"]}