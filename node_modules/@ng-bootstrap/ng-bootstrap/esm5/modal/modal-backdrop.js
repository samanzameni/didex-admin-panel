/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, ViewEncapsulation } from '@angular/core';
import * as ɵngcc0 from '@angular/core';

const _c0 = [2, "z-index", "1050"];
var NgbModalBackdrop = /** @class */ (function () {
    function NgbModalBackdrop() {
    }
    NgbModalBackdrop.propDecorators = {
        backdropClass: [{ type: Input }]
    };
NgbModalBackdrop.ngComponentDef = ɵngcc0.ɵɵdefineComponent({ type: NgbModalBackdrop, selectors: [["ngb-modal-backdrop"]], factory: function NgbModalBackdrop_Factory(t) { return new (t || NgbModalBackdrop)(); }, hostBindings: function NgbModalBackdrop_HostBindings(rf, ctx, elIndex) { if (rf & 1) {
        ɵngcc0.ɵɵallocHostVars(1);
        ɵngcc0.ɵɵelementHostAttrs(_c0);
        ɵngcc0.ɵɵstyling();
    } if (rf & 2) {
        ɵngcc0.ɵɵclassMap("modal-backdrop fade show" + (ctx.backdropClass ? " " + ctx.backdropClass : ""));
        ɵngcc0.ɵɵstylingApply();
    } }, inputs: { backdropClass: "backdropClass" }, consts: 0, vars: 0, template: function NgbModalBackdrop_Template(rf, ctx) { }, encapsulation: 2 });
/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(NgbModalBackdrop, [{
        type: Component,
        args: [{
                selector: 'ngb-modal-backdrop',
                encapsulation: ViewEncapsulation.None,
                template: '',
                host: { '[class]': '"modal-backdrop fade show" + (backdropClass ? " " + backdropClass : "")', 'style': 'z-index: 1050' }
            }]
    }], function () { return []; }, { backdropClass: [{
            type: Input
        }] });
    return NgbModalBackdrop;
}());
export { NgbModalBackdrop };
if (false) {
    /** @type {?} */
    NgbModalBackdrop.prototype.backdropClass;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImQ6L0FuZ3VsYXIgUHJvamVjdC9EaWRleC9kaWRleC1hZG1pbi1wYW5lbC9ub2RlX21vZHVsZXMvQG5nLWJvb3RzdHJhcC9uZy1ib290c3RyYXAvZXNtNS9tb2RhbC9tb2RhbC1iYWNrZHJvcC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7QUFLQTs7S0FFSyxBQVFDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O2NBR0EiLCJmaWxlIjoibW9kYWwtYmFja2Ryb3AuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQGZpbGVvdmVydmlldyBhZGRlZCBieSB0c2lja2xlXHJcbiAqIEBzdXBwcmVzcyB7Y2hlY2tUeXBlcyxjb25zdGFudFByb3BlcnR5LGV4dHJhUmVxdWlyZSxtaXNzaW5nT3ZlcnJpZGUsbWlzc2luZ1JldHVybix1bnVzZWRQcml2YXRlTWVtYmVycyx1c2VsZXNzQ29kZX0gY2hlY2tlZCBieSB0c2NcclxuICovXHJcbmltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIFZpZXdFbmNhcHN1bGF0aW9uIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbnZhciBOZ2JNb2RhbEJhY2tkcm9wID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xyXG4gICAgZnVuY3Rpb24gTmdiTW9kYWxCYWNrZHJvcCgpIHtcclxuICAgIH1cclxuICAgIE5nYk1vZGFsQmFja2Ryb3AuZGVjb3JhdG9ycyA9IFtcclxuICAgICAgICB7IHR5cGU6IENvbXBvbmVudCwgYXJnczogW3tcclxuICAgICAgICAgICAgICAgICAgICBzZWxlY3RvcjogJ25nYi1tb2RhbC1iYWNrZHJvcCcsXHJcbiAgICAgICAgICAgICAgICAgICAgZW5jYXBzdWxhdGlvbjogVmlld0VuY2Fwc3VsYXRpb24uTm9uZSxcclxuICAgICAgICAgICAgICAgICAgICB0ZW1wbGF0ZTogJycsXHJcbiAgICAgICAgICAgICAgICAgICAgaG9zdDogeyAnW2NsYXNzXSc6ICdcIm1vZGFsLWJhY2tkcm9wIGZhZGUgc2hvd1wiICsgKGJhY2tkcm9wQ2xhc3MgPyBcIiBcIiArIGJhY2tkcm9wQ2xhc3MgOiBcIlwiKScsICdzdHlsZSc6ICd6LWluZGV4OiAxMDUwJyB9XHJcbiAgICAgICAgICAgICAgICB9XSB9XHJcbiAgICBdO1xyXG4gICAgTmdiTW9kYWxCYWNrZHJvcC5wcm9wRGVjb3JhdG9ycyA9IHtcclxuICAgICAgICBiYWNrZHJvcENsYXNzOiBbeyB0eXBlOiBJbnB1dCB9XVxyXG4gICAgfTtcclxuICAgIHJldHVybiBOZ2JNb2RhbEJhY2tkcm9wO1xyXG59KCkpO1xyXG5leHBvcnQgeyBOZ2JNb2RhbEJhY2tkcm9wIH07XHJcbmlmIChmYWxzZSkge1xyXG4gICAgLyoqIEB0eXBlIHs/fSAqL1xyXG4gICAgTmdiTW9kYWxCYWNrZHJvcC5wcm90b3R5cGUuYmFja2Ryb3BDbGFzcztcclxufVxyIl19