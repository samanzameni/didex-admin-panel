/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
/**
 * A configuration service for the [`NgbPopover`](#/components/popover/api#NgbPopover) component.
 *
 * You can inject this service, typically in your root component, and customize the values of its properties in
 * order to provide default values for all the popovers used in the application.
 */
import * as ɵngcc0 from '@angular/core';
var NgbPopoverConfig = /** @class */ (function () {
    function NgbPopoverConfig() {
        this.autoClose = true;
        this.placement = 'auto';
        this.triggers = 'click';
        this.disablePopover = false;
        this.openDelay = 0;
        this.closeDelay = 0;
    }
    /** @nocollapse */ NgbPopoverConfig.ngInjectableDef = i0.ɵɵdefineInjectable({ factory: function NgbPopoverConfig_Factory() { return new NgbPopoverConfig(); }, token: NgbPopoverConfig, providedIn: "root" });
NgbPopoverConfig.ngInjectableDef = ɵngcc0.ɵɵdefineInjectable({ token: NgbPopoverConfig, factory: function NgbPopoverConfig_Factory(t) { return new (t || NgbPopoverConfig)(); }, providedIn: 'root' });
/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(NgbPopoverConfig, [{
        type: Injectable,
        args: [{ providedIn: 'root' }]
    }], function () { return []; }, { autoClose: [], placement: [], triggers: [], disablePopover: [], openDelay: [], closeDelay: [] });
    return NgbPopoverConfig;
}());
export { NgbPopoverConfig };
if (false) {
    /** @type {?} */
    NgbPopoverConfig.prototype.autoClose;
    /** @type {?} */
    NgbPopoverConfig.prototype.placement;
    /** @type {?} */
    NgbPopoverConfig.prototype.triggers;
    /** @type {?} */
    NgbPopoverConfig.prototype.container;
    /** @type {?} */
    NgbPopoverConfig.prototype.disablePopover;
    /** @type {?} */
    NgbPopoverConfig.prototype.popoverClass;
    /** @type {?} */
    NgbPopoverConfig.prototype.openDelay;
    /** @type {?} */
    NgbPopoverConfig.prototype.closeDelay;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImQ6L0FuZ3VsYXIgUHJvamVjdC9EaWRleC9kaWRleC1hZG1pbi1wYW5lbC9ub2RlX21vZHVsZXMvQG5nLWJvb3RzdHJhcC9uZy1ib290c3RyYXAvZXNtNS9wb3BvdmVyL3BvcG92ZXItY29uZmlnLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7O0FBWUE7Ozs7Ozs7O0tBUUssQUFHQzs7Ozs7O3VJQUM0TSIsImZpbGUiOiJwb3BvdmVyLWNvbmZpZy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBAZmlsZW92ZXJ2aWV3IGFkZGVkIGJ5IHRzaWNrbGVcclxuICogQHN1cHByZXNzIHtjaGVja1R5cGVzLGNvbnN0YW50UHJvcGVydHksZXh0cmFSZXF1aXJlLG1pc3NpbmdPdmVycmlkZSxtaXNzaW5nUmV0dXJuLHVudXNlZFByaXZhdGVNZW1iZXJzLHVzZWxlc3NDb2RlfSBjaGVja2VkIGJ5IHRzY1xyXG4gKi9cclxuaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgKiBhcyBpMCBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xyXG4vKipcclxuICogQSBjb25maWd1cmF0aW9uIHNlcnZpY2UgZm9yIHRoZSBbYE5nYlBvcG92ZXJgXSgjL2NvbXBvbmVudHMvcG9wb3Zlci9hcGkjTmdiUG9wb3ZlcikgY29tcG9uZW50LlxyXG4gKlxyXG4gKiBZb3UgY2FuIGluamVjdCB0aGlzIHNlcnZpY2UsIHR5cGljYWxseSBpbiB5b3VyIHJvb3QgY29tcG9uZW50LCBhbmQgY3VzdG9taXplIHRoZSB2YWx1ZXMgb2YgaXRzIHByb3BlcnRpZXMgaW5cclxuICogb3JkZXIgdG8gcHJvdmlkZSBkZWZhdWx0IHZhbHVlcyBmb3IgYWxsIHRoZSBwb3BvdmVycyB1c2VkIGluIHRoZSBhcHBsaWNhdGlvbi5cclxuICovXHJcbnZhciBOZ2JQb3BvdmVyQ29uZmlnID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xyXG4gICAgZnVuY3Rpb24gTmdiUG9wb3ZlckNvbmZpZygpIHtcclxuICAgICAgICB0aGlzLmF1dG9DbG9zZSA9IHRydWU7XHJcbiAgICAgICAgdGhpcy5wbGFjZW1lbnQgPSAnYXV0byc7XHJcbiAgICAgICAgdGhpcy50cmlnZ2VycyA9ICdjbGljayc7XHJcbiAgICAgICAgdGhpcy5kaXNhYmxlUG9wb3ZlciA9IGZhbHNlO1xyXG4gICAgICAgIHRoaXMub3BlbkRlbGF5ID0gMDtcclxuICAgICAgICB0aGlzLmNsb3NlRGVsYXkgPSAwO1xyXG4gICAgfVxyXG4gICAgTmdiUG9wb3ZlckNvbmZpZy5kZWNvcmF0b3JzID0gW1xyXG4gICAgICAgIHsgdHlwZTogSW5qZWN0YWJsZSwgYXJnczogW3sgcHJvdmlkZWRJbjogJ3Jvb3QnIH0sXSB9XHJcbiAgICBdO1xyXG4gICAgLyoqIEBub2NvbGxhcHNlICovIE5nYlBvcG92ZXJDb25maWcubmdJbmplY3RhYmxlRGVmID0gaTAuybXJtWRlZmluZUluamVjdGFibGUoeyBmYWN0b3J5OiBmdW5jdGlvbiBOZ2JQb3BvdmVyQ29uZmlnX0ZhY3RvcnkoKSB7IHJldHVybiBuZXcgTmdiUG9wb3ZlckNvbmZpZygpOyB9LCB0b2tlbjogTmdiUG9wb3ZlckNvbmZpZywgcHJvdmlkZWRJbjogXCJyb290XCIgfSk7XHJcbiAgICByZXR1cm4gTmdiUG9wb3ZlckNvbmZpZztcclxufSgpKTtcclxuZXhwb3J0IHsgTmdiUG9wb3ZlckNvbmZpZyB9O1xyXG5pZiAoZmFsc2UpIHtcclxuICAgIC8qKiBAdHlwZSB7P30gKi9cclxuICAgIE5nYlBvcG92ZXJDb25maWcucHJvdG90eXBlLmF1dG9DbG9zZTtcclxuICAgIC8qKiBAdHlwZSB7P30gKi9cclxuICAgIE5nYlBvcG92ZXJDb25maWcucHJvdG90eXBlLnBsYWNlbWVudDtcclxuICAgIC8qKiBAdHlwZSB7P30gKi9cclxuICAgIE5nYlBvcG92ZXJDb25maWcucHJvdG90eXBlLnRyaWdnZXJzO1xyXG4gICAgLyoqIEB0eXBlIHs/fSAqL1xyXG4gICAgTmdiUG9wb3ZlckNvbmZpZy5wcm90b3R5cGUuY29udGFpbmVyO1xyXG4gICAgLyoqIEB0eXBlIHs/fSAqL1xyXG4gICAgTmdiUG9wb3ZlckNvbmZpZy5wcm90b3R5cGUuZGlzYWJsZVBvcG92ZXI7XHJcbiAgICAvKiogQHR5cGUgez99ICovXHJcbiAgICBOZ2JQb3BvdmVyQ29uZmlnLnByb3RvdHlwZS5wb3BvdmVyQ2xhc3M7XHJcbiAgICAvKiogQHR5cGUgez99ICovXHJcbiAgICBOZ2JQb3BvdmVyQ29uZmlnLnByb3RvdHlwZS5vcGVuRGVsYXk7XHJcbiAgICAvKiogQHR5cGUgez99ICovXHJcbiAgICBOZ2JQb3BvdmVyQ29uZmlnLnByb3RvdHlwZS5jbG9zZURlbGF5O1xyXG59XHIiXX0=