/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Directive } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
var NgbButtonLabel = /** @class */ (function () {
    function NgbButtonLabel() {
    }
NgbButtonLabel.ngDirectiveDef = ɵngcc0.ɵɵdefineDirective({ type: NgbButtonLabel, selectors: [["", "ngbButtonLabel", ""]], factory: function NgbButtonLabel_Factory(t) { return new (t || NgbButtonLabel)(); }, hostBindings: function NgbButtonLabel_HostBindings(rf, ctx, elIndex) { if (rf & 1) {
        ɵngcc0.ɵɵallocHostVars(4);
        ɵngcc0.ɵɵstyling();
    } if (rf & 2) {
        ɵngcc0.ɵɵclassProp("btn", true);
        ɵngcc0.ɵɵclassProp("active", ctx.active);
        ɵngcc0.ɵɵclassProp("disabled", ctx.disabled);
        ɵngcc0.ɵɵclassProp("focus", ctx.focused);
        ɵngcc0.ɵɵstylingApply();
    } } });
/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(NgbButtonLabel, [{
        type: Directive,
        args: [{
                selector: '[ngbButtonLabel]',
                host: { '[class.btn]': 'true', '[class.active]': 'active', '[class.disabled]': 'disabled', '[class.focus]': 'focused' }
            }]
    }], function () { return []; }, null);
    return NgbButtonLabel;
}());
export { NgbButtonLabel };
if (false) {
    /** @type {?} */
    NgbButtonLabel.prototype.active;
    /** @type {?} */
    NgbButtonLabel.prototype.disabled;
    /** @type {?} */
    NgbButtonLabel.prototype.focused;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImQ6L0FuZ3VsYXIgUHJvamVjdC9EaWRleC9kaWRleC1hZG1pbi1wYW5lbC9ub2RlX21vZHVsZXMvQG5nLWJvb3RzdHJhcC9uZy1ib290c3RyYXAvZXNtNS9idXR0b25zL2xhYmVsLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7QUFLQTs7S0FFSzs7Ozs7Ozs7Ozs7Ozs7Ozs7MENBTUMiLCJmaWxlIjoibGFiZWwuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQGZpbGVvdmVydmlldyBhZGRlZCBieSB0c2lja2xlXHJcbiAqIEBzdXBwcmVzcyB7Y2hlY2tUeXBlcyxjb25zdGFudFByb3BlcnR5LGV4dHJhUmVxdWlyZSxtaXNzaW5nT3ZlcnJpZGUsbWlzc2luZ1JldHVybix1bnVzZWRQcml2YXRlTWVtYmVycyx1c2VsZXNzQ29kZX0gY2hlY2tlZCBieSB0c2NcclxuICovXHJcbmltcG9ydCB7IERpcmVjdGl2ZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG52YXIgTmdiQnV0dG9uTGFiZWwgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XHJcbiAgICBmdW5jdGlvbiBOZ2JCdXR0b25MYWJlbCgpIHtcclxuICAgIH1cclxuICAgIE5nYkJ1dHRvbkxhYmVsLmRlY29yYXRvcnMgPSBbXHJcbiAgICAgICAgeyB0eXBlOiBEaXJlY3RpdmUsIGFyZ3M6IFt7XHJcbiAgICAgICAgICAgICAgICAgICAgc2VsZWN0b3I6ICdbbmdiQnV0dG9uTGFiZWxdJyxcclxuICAgICAgICAgICAgICAgICAgICBob3N0OiB7ICdbY2xhc3MuYnRuXSc6ICd0cnVlJywgJ1tjbGFzcy5hY3RpdmVdJzogJ2FjdGl2ZScsICdbY2xhc3MuZGlzYWJsZWRdJzogJ2Rpc2FibGVkJywgJ1tjbGFzcy5mb2N1c10nOiAnZm9jdXNlZCcgfVxyXG4gICAgICAgICAgICAgICAgfSxdIH1cclxuICAgIF07XHJcbiAgICByZXR1cm4gTmdiQnV0dG9uTGFiZWw7XHJcbn0oKSk7XHJcbmV4cG9ydCB7IE5nYkJ1dHRvbkxhYmVsIH07XHJcbmlmIChmYWxzZSkge1xyXG4gICAgLyoqIEB0eXBlIHs/fSAqL1xyXG4gICAgTmdiQnV0dG9uTGFiZWwucHJvdG90eXBlLmFjdGl2ZTtcclxuICAgIC8qKiBAdHlwZSB7P30gKi9cclxuICAgIE5nYkJ1dHRvbkxhYmVsLnByb3RvdHlwZS5kaXNhYmxlZDtcclxuICAgIC8qKiBAdHlwZSB7P30gKi9cclxuICAgIE5nYkJ1dHRvbkxhYmVsLnByb3RvdHlwZS5mb2N1c2VkO1xyXG59XHIiXX0=