/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
/**
 * A configuration service for the [`NgbTooltip`](#/components/tooltip/api#NgbTooltip) component.
 *
 * You can inject this service, typically in your root component, and customize the values of its properties in
 * order to provide default values for all the tooltips used in the application.
 */
import * as ɵngcc0 from '@angular/core';
var NgbTooltipConfig = /** @class */ (function () {
    function NgbTooltipConfig() {
        this.autoClose = true;
        this.placement = 'auto';
        this.triggers = 'hover focus';
        this.disableTooltip = false;
        this.openDelay = 0;
        this.closeDelay = 0;
    }
    /** @nocollapse */ NgbTooltipConfig.ngInjectableDef = i0.ɵɵdefineInjectable({ factory: function NgbTooltipConfig_Factory() { return new NgbTooltipConfig(); }, token: NgbTooltipConfig, providedIn: "root" });
NgbTooltipConfig.ngInjectableDef = ɵngcc0.ɵɵdefineInjectable({ token: NgbTooltipConfig, factory: function NgbTooltipConfig_Factory(t) { return new (t || NgbTooltipConfig)(); }, providedIn: 'root' });
/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(NgbTooltipConfig, [{
        type: Injectable,
        args: [{ providedIn: 'root' }]
    }], function () { return []; }, { autoClose: [], placement: [], triggers: [], disableTooltip: [], openDelay: [], closeDelay: [] });
    return NgbTooltipConfig;
}());
export { NgbTooltipConfig };
if (false) {
    /** @type {?} */
    NgbTooltipConfig.prototype.autoClose;
    /** @type {?} */
    NgbTooltipConfig.prototype.placement;
    /** @type {?} */
    NgbTooltipConfig.prototype.triggers;
    /** @type {?} */
    NgbTooltipConfig.prototype.container;
    /** @type {?} */
    NgbTooltipConfig.prototype.disableTooltip;
    /** @type {?} */
    NgbTooltipConfig.prototype.tooltipClass;
    /** @type {?} */
    NgbTooltipConfig.prototype.openDelay;
    /** @type {?} */
    NgbTooltipConfig.prototype.closeDelay;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImQ6L0FuZ3VsYXIgUHJvamVjdC9EaWRleC9kaWRleC1hZG1pbi1wYW5lbC9ub2RlX21vZHVsZXMvQG5nLWJvb3RzdHJhcC9uZy1ib290c3RyYXAvZXNtNS90b29sdGlwL3Rvb2x0aXAtY29uZmlnLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7O0FBWUE7Ozs7Ozs7O0tBUUssQUFHQzs7Ozs7O3VJQUM0TSIsImZpbGUiOiJ0b29sdGlwLWNvbmZpZy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBAZmlsZW92ZXJ2aWV3IGFkZGVkIGJ5IHRzaWNrbGVcclxuICogQHN1cHByZXNzIHtjaGVja1R5cGVzLGNvbnN0YW50UHJvcGVydHksZXh0cmFSZXF1aXJlLG1pc3NpbmdPdmVycmlkZSxtaXNzaW5nUmV0dXJuLHVudXNlZFByaXZhdGVNZW1iZXJzLHVzZWxlc3NDb2RlfSBjaGVja2VkIGJ5IHRzY1xyXG4gKi9cclxuaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgKiBhcyBpMCBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xyXG4vKipcclxuICogQSBjb25maWd1cmF0aW9uIHNlcnZpY2UgZm9yIHRoZSBbYE5nYlRvb2x0aXBgXSgjL2NvbXBvbmVudHMvdG9vbHRpcC9hcGkjTmdiVG9vbHRpcCkgY29tcG9uZW50LlxyXG4gKlxyXG4gKiBZb3UgY2FuIGluamVjdCB0aGlzIHNlcnZpY2UsIHR5cGljYWxseSBpbiB5b3VyIHJvb3QgY29tcG9uZW50LCBhbmQgY3VzdG9taXplIHRoZSB2YWx1ZXMgb2YgaXRzIHByb3BlcnRpZXMgaW5cclxuICogb3JkZXIgdG8gcHJvdmlkZSBkZWZhdWx0IHZhbHVlcyBmb3IgYWxsIHRoZSB0b29sdGlwcyB1c2VkIGluIHRoZSBhcHBsaWNhdGlvbi5cclxuICovXHJcbnZhciBOZ2JUb29sdGlwQ29uZmlnID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xyXG4gICAgZnVuY3Rpb24gTmdiVG9vbHRpcENvbmZpZygpIHtcclxuICAgICAgICB0aGlzLmF1dG9DbG9zZSA9IHRydWU7XHJcbiAgICAgICAgdGhpcy5wbGFjZW1lbnQgPSAnYXV0byc7XHJcbiAgICAgICAgdGhpcy50cmlnZ2VycyA9ICdob3ZlciBmb2N1cyc7XHJcbiAgICAgICAgdGhpcy5kaXNhYmxlVG9vbHRpcCA9IGZhbHNlO1xyXG4gICAgICAgIHRoaXMub3BlbkRlbGF5ID0gMDtcclxuICAgICAgICB0aGlzLmNsb3NlRGVsYXkgPSAwO1xyXG4gICAgfVxyXG4gICAgTmdiVG9vbHRpcENvbmZpZy5kZWNvcmF0b3JzID0gW1xyXG4gICAgICAgIHsgdHlwZTogSW5qZWN0YWJsZSwgYXJnczogW3sgcHJvdmlkZWRJbjogJ3Jvb3QnIH0sXSB9XHJcbiAgICBdO1xyXG4gICAgLyoqIEBub2NvbGxhcHNlICovIE5nYlRvb2x0aXBDb25maWcubmdJbmplY3RhYmxlRGVmID0gaTAuybXJtWRlZmluZUluamVjdGFibGUoeyBmYWN0b3J5OiBmdW5jdGlvbiBOZ2JUb29sdGlwQ29uZmlnX0ZhY3RvcnkoKSB7IHJldHVybiBuZXcgTmdiVG9vbHRpcENvbmZpZygpOyB9LCB0b2tlbjogTmdiVG9vbHRpcENvbmZpZywgcHJvdmlkZWRJbjogXCJyb290XCIgfSk7XHJcbiAgICByZXR1cm4gTmdiVG9vbHRpcENvbmZpZztcclxufSgpKTtcclxuZXhwb3J0IHsgTmdiVG9vbHRpcENvbmZpZyB9O1xyXG5pZiAoZmFsc2UpIHtcclxuICAgIC8qKiBAdHlwZSB7P30gKi9cclxuICAgIE5nYlRvb2x0aXBDb25maWcucHJvdG90eXBlLmF1dG9DbG9zZTtcclxuICAgIC8qKiBAdHlwZSB7P30gKi9cclxuICAgIE5nYlRvb2x0aXBDb25maWcucHJvdG90eXBlLnBsYWNlbWVudDtcclxuICAgIC8qKiBAdHlwZSB7P30gKi9cclxuICAgIE5nYlRvb2x0aXBDb25maWcucHJvdG90eXBlLnRyaWdnZXJzO1xyXG4gICAgLyoqIEB0eXBlIHs/fSAqL1xyXG4gICAgTmdiVG9vbHRpcENvbmZpZy5wcm90b3R5cGUuY29udGFpbmVyO1xyXG4gICAgLyoqIEB0eXBlIHs/fSAqL1xyXG4gICAgTmdiVG9vbHRpcENvbmZpZy5wcm90b3R5cGUuZGlzYWJsZVRvb2x0aXA7XHJcbiAgICAvKiogQHR5cGUgez99ICovXHJcbiAgICBOZ2JUb29sdGlwQ29uZmlnLnByb3RvdHlwZS50b29sdGlwQ2xhc3M7XHJcbiAgICAvKiogQHR5cGUgez99ICovXHJcbiAgICBOZ2JUb29sdGlwQ29uZmlnLnByb3RvdHlwZS5vcGVuRGVsYXk7XHJcbiAgICAvKiogQHR5cGUgez99ICovXHJcbiAgICBOZ2JUb29sdGlwQ29uZmlnLnByb3RvdHlwZS5jbG9zZURlbGF5O1xyXG59XHIiXX0=