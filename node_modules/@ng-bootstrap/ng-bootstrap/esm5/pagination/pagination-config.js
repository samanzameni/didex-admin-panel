/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
/**
 * A configuration service for the [`NgbPagination`](#/components/pagination/api#NgbPagination) component.
 *
 * You can inject this service, typically in your root component, and customize the values of its properties in
 * order to provide default values for all the paginations used in the application.
 */
import * as ɵngcc0 from '@angular/core';
var NgbPaginationConfig = /** @class */ (function () {
    function NgbPaginationConfig() {
        this.disabled = false;
        this.boundaryLinks = false;
        this.directionLinks = true;
        this.ellipses = true;
        this.maxSize = 0;
        this.pageSize = 10;
        this.rotate = false;
    }
    /** @nocollapse */ NgbPaginationConfig.ngInjectableDef = i0.ɵɵdefineInjectable({ factory: function NgbPaginationConfig_Factory() { return new NgbPaginationConfig(); }, token: NgbPaginationConfig, providedIn: "root" });
NgbPaginationConfig.ngInjectableDef = ɵngcc0.ɵɵdefineInjectable({ token: NgbPaginationConfig, factory: function NgbPaginationConfig_Factory(t) { return new (t || NgbPaginationConfig)(); }, providedIn: 'root' });
/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(NgbPaginationConfig, [{
        type: Injectable,
        args: [{ providedIn: 'root' }]
    }], function () { return []; }, { disabled: [], boundaryLinks: [], directionLinks: [], ellipses: [], maxSize: [], pageSize: [], rotate: [] });
    return NgbPaginationConfig;
}());
export { NgbPaginationConfig };
if (false) {
    /** @type {?} */
    NgbPaginationConfig.prototype.disabled;
    /** @type {?} */
    NgbPaginationConfig.prototype.boundaryLinks;
    /** @type {?} */
    NgbPaginationConfig.prototype.directionLinks;
    /** @type {?} */
    NgbPaginationConfig.prototype.ellipses;
    /** @type {?} */
    NgbPaginationConfig.prototype.maxSize;
    /** @type {?} */
    NgbPaginationConfig.prototype.pageSize;
    /** @type {?} */
    NgbPaginationConfig.prototype.rotate;
    /** @type {?} */
    NgbPaginationConfig.prototype.size;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImQ6L0FuZ3VsYXIgUHJvamVjdC9EaWRleC9kaWRleC1hZG1pbi1wYW5lbC9ub2RlX21vZHVsZXMvQG5nLWJvb3RzdHJhcC9uZy1ib290c3RyYXAvZXNtNS9wYWdpbmF0aW9uL3BhZ2luYXRpb24tY29uZmlnLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7O0FBWUE7Ozs7Ozs7OztLQVNLLEFBR0M7Ozs7OztrSkFDd04iLCJmaWxlIjoicGFnaW5hdGlvbi1jb25maWcuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQGZpbGVvdmVydmlldyBhZGRlZCBieSB0c2lja2xlXHJcbiAqIEBzdXBwcmVzcyB7Y2hlY2tUeXBlcyxjb25zdGFudFByb3BlcnR5LGV4dHJhUmVxdWlyZSxtaXNzaW5nT3ZlcnJpZGUsbWlzc2luZ1JldHVybix1bnVzZWRQcml2YXRlTWVtYmVycyx1c2VsZXNzQ29kZX0gY2hlY2tlZCBieSB0c2NcclxuICovXHJcbmltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0ICogYXMgaTAgZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcclxuLyoqXHJcbiAqIEEgY29uZmlndXJhdGlvbiBzZXJ2aWNlIGZvciB0aGUgW2BOZ2JQYWdpbmF0aW9uYF0oIy9jb21wb25lbnRzL3BhZ2luYXRpb24vYXBpI05nYlBhZ2luYXRpb24pIGNvbXBvbmVudC5cclxuICpcclxuICogWW91IGNhbiBpbmplY3QgdGhpcyBzZXJ2aWNlLCB0eXBpY2FsbHkgaW4geW91ciByb290IGNvbXBvbmVudCwgYW5kIGN1c3RvbWl6ZSB0aGUgdmFsdWVzIG9mIGl0cyBwcm9wZXJ0aWVzIGluXHJcbiAqIG9yZGVyIHRvIHByb3ZpZGUgZGVmYXVsdCB2YWx1ZXMgZm9yIGFsbCB0aGUgcGFnaW5hdGlvbnMgdXNlZCBpbiB0aGUgYXBwbGljYXRpb24uXHJcbiAqL1xyXG52YXIgTmdiUGFnaW5hdGlvbkNvbmZpZyA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcclxuICAgIGZ1bmN0aW9uIE5nYlBhZ2luYXRpb25Db25maWcoKSB7XHJcbiAgICAgICAgdGhpcy5kaXNhYmxlZCA9IGZhbHNlO1xyXG4gICAgICAgIHRoaXMuYm91bmRhcnlMaW5rcyA9IGZhbHNlO1xyXG4gICAgICAgIHRoaXMuZGlyZWN0aW9uTGlua3MgPSB0cnVlO1xyXG4gICAgICAgIHRoaXMuZWxsaXBzZXMgPSB0cnVlO1xyXG4gICAgICAgIHRoaXMubWF4U2l6ZSA9IDA7XHJcbiAgICAgICAgdGhpcy5wYWdlU2l6ZSA9IDEwO1xyXG4gICAgICAgIHRoaXMucm90YXRlID0gZmFsc2U7XHJcbiAgICB9XHJcbiAgICBOZ2JQYWdpbmF0aW9uQ29uZmlnLmRlY29yYXRvcnMgPSBbXHJcbiAgICAgICAgeyB0eXBlOiBJbmplY3RhYmxlLCBhcmdzOiBbeyBwcm92aWRlZEluOiAncm9vdCcgfSxdIH1cclxuICAgIF07XHJcbiAgICAvKiogQG5vY29sbGFwc2UgKi8gTmdiUGFnaW5hdGlvbkNvbmZpZy5uZ0luamVjdGFibGVEZWYgPSBpMC7Jtcm1ZGVmaW5lSW5qZWN0YWJsZSh7IGZhY3Rvcnk6IGZ1bmN0aW9uIE5nYlBhZ2luYXRpb25Db25maWdfRmFjdG9yeSgpIHsgcmV0dXJuIG5ldyBOZ2JQYWdpbmF0aW9uQ29uZmlnKCk7IH0sIHRva2VuOiBOZ2JQYWdpbmF0aW9uQ29uZmlnLCBwcm92aWRlZEluOiBcInJvb3RcIiB9KTtcclxuICAgIHJldHVybiBOZ2JQYWdpbmF0aW9uQ29uZmlnO1xyXG59KCkpO1xyXG5leHBvcnQgeyBOZ2JQYWdpbmF0aW9uQ29uZmlnIH07XHJcbmlmIChmYWxzZSkge1xyXG4gICAgLyoqIEB0eXBlIHs/fSAqL1xyXG4gICAgTmdiUGFnaW5hdGlvbkNvbmZpZy5wcm90b3R5cGUuZGlzYWJsZWQ7XHJcbiAgICAvKiogQHR5cGUgez99ICovXHJcbiAgICBOZ2JQYWdpbmF0aW9uQ29uZmlnLnByb3RvdHlwZS5ib3VuZGFyeUxpbmtzO1xyXG4gICAgLyoqIEB0eXBlIHs/fSAqL1xyXG4gICAgTmdiUGFnaW5hdGlvbkNvbmZpZy5wcm90b3R5cGUuZGlyZWN0aW9uTGlua3M7XHJcbiAgICAvKiogQHR5cGUgez99ICovXHJcbiAgICBOZ2JQYWdpbmF0aW9uQ29uZmlnLnByb3RvdHlwZS5lbGxpcHNlcztcclxuICAgIC8qKiBAdHlwZSB7P30gKi9cclxuICAgIE5nYlBhZ2luYXRpb25Db25maWcucHJvdG90eXBlLm1heFNpemU7XHJcbiAgICAvKiogQHR5cGUgez99ICovXHJcbiAgICBOZ2JQYWdpbmF0aW9uQ29uZmlnLnByb3RvdHlwZS5wYWdlU2l6ZTtcclxuICAgIC8qKiBAdHlwZSB7P30gKi9cclxuICAgIE5nYlBhZ2luYXRpb25Db25maWcucHJvdG90eXBlLnJvdGF0ZTtcclxuICAgIC8qKiBAdHlwZSB7P30gKi9cclxuICAgIE5nYlBhZ2luYXRpb25Db25maWcucHJvdG90eXBlLnNpemU7XHJcbn1cciJdfQ==