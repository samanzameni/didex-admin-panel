/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { NgbNav, NgbNavContent, NgbNavItem, NgbNavLink } from './nav';
import { NgbNavOutlet } from './nav-outlet';
import * as ɵngcc0 from '@angular/core';
export { NgbNav, NgbNavContent, NgbNavItem, NgbNavLink } from './nav';
export { NgbNavOutlet } from './nav-outlet';
export { NgbNavConfig } from './nav-config';
/** @type {?} */
var NGB_NAV_DIRECTIVES = [NgbNavContent, NgbNav, NgbNavItem, NgbNavLink, NgbNavOutlet];
var NgbNavModule = /** @class */ (function () {
    function NgbNavModule() {
    }
NgbNavModule.ngModuleDef = ɵngcc0.ɵɵdefineNgModule({ type: NgbNavModule });
/*@__PURE__*/ ɵngcc0.ɵɵsetNgModuleScope(NgbNavModule, { declarations: function () { return [NgbNavContent, NgbNav, NgbNavItem, NgbNavLink, NgbNavOutlet]; }, imports: function () { return [CommonModule]; }, exports: function () { return [NgbNavContent, NgbNav, NgbNavItem, NgbNavLink, NgbNavOutlet]; } });
/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(NgbNavModule, [{
        type: NgModule,
        args: [{ declarations: NGB_NAV_DIRECTIVES, exports: NGB_NAV_DIRECTIVES, imports: [CommonModule] }]
    }], function () { return []; }, null);
NgbNavModule.ngInjectorDef = ɵngcc0.ɵɵdefineInjector({ factory: function NgbNavModule_Factory(t) { return new (t || NgbNavModule)(); }, imports: [[CommonModule]] });
    return NgbNavModule;
}());
export { NgbNavModule };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImQ6L0FuZ3VsYXIgUHJvamVjdC9EaWRleC9kaWRleC1hZG1pbi1wYW5lbC9ub2RlX21vZHVsZXMvQG5nLWJvb3RzdHJhcC9uZy1ib290c3RyYXAvZXNtNS9uYXYvbmF2Lm1vZHVsZS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7O0FBUUE7Ozs7Ozs7S0FPSzs7Ozs7OztxS0FHQyIsImZpbGUiOiJuYXYubW9kdWxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIEBmaWxlb3ZlcnZpZXcgYWRkZWQgYnkgdHNpY2tsZVxyXG4gKiBAc3VwcHJlc3Mge2NoZWNrVHlwZXMsY29uc3RhbnRQcm9wZXJ0eSxleHRyYVJlcXVpcmUsbWlzc2luZ092ZXJyaWRlLG1pc3NpbmdSZXR1cm4sdW51c2VkUHJpdmF0ZU1lbWJlcnMsdXNlbGVzc0NvZGV9IGNoZWNrZWQgYnkgdHNjXHJcbiAqL1xyXG5pbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xyXG5pbXBvcnQgeyBOZ2JOYXYsIE5nYk5hdkNvbnRlbnQsIE5nYk5hdkl0ZW0sIE5nYk5hdkxpbmsgfSBmcm9tICcuL25hdic7XHJcbmltcG9ydCB7IE5nYk5hdk91dGxldCB9IGZyb20gJy4vbmF2LW91dGxldCc7XHJcbmV4cG9ydCB7IE5nYk5hdiwgTmdiTmF2Q29udGVudCwgTmdiTmF2SXRlbSwgTmdiTmF2TGluayB9IGZyb20gJy4vbmF2JztcclxuZXhwb3J0IHsgTmdiTmF2T3V0bGV0IH0gZnJvbSAnLi9uYXYtb3V0bGV0JztcclxuZXhwb3J0IHsgTmdiTmF2Q29uZmlnIH0gZnJvbSAnLi9uYXYtY29uZmlnJztcclxuLyoqIEB0eXBlIHs/fSAqL1xyXG52YXIgTkdCX05BVl9ESVJFQ1RJVkVTID0gW05nYk5hdkNvbnRlbnQsIE5nYk5hdiwgTmdiTmF2SXRlbSwgTmdiTmF2TGluaywgTmdiTmF2T3V0bGV0XTtcclxudmFyIE5nYk5hdk1vZHVsZSA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcclxuICAgIGZ1bmN0aW9uIE5nYk5hdk1vZHVsZSgpIHtcclxuICAgIH1cclxuICAgIE5nYk5hdk1vZHVsZS5kZWNvcmF0b3JzID0gW1xyXG4gICAgICAgIHsgdHlwZTogTmdNb2R1bGUsIGFyZ3M6IFt7IGRlY2xhcmF0aW9uczogTkdCX05BVl9ESVJFQ1RJVkVTLCBleHBvcnRzOiBOR0JfTkFWX0RJUkVDVElWRVMsIGltcG9ydHM6IFtDb21tb25Nb2R1bGVdIH0sXSB9XHJcbiAgICBdO1xyXG4gICAgcmV0dXJuIE5nYk5hdk1vZHVsZTtcclxufSgpKTtcclxuZXhwb3J0IHsgTmdiTmF2TW9kdWxlIH07XHIiXX0=