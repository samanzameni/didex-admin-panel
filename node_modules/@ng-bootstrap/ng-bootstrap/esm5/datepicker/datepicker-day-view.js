/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';
import { NgbDate } from './ngb-date';
import { NgbDatepickerI18n } from './datepicker-i18n';
import * as ɵngcc0 from '@angular/core';

const _c0 = [1, "btn-light"];
const _c1 = ["ngbDatepickerDayView", ""];
var NgbDatepickerDayView = /** @class */ (function () {
    function NgbDatepickerDayView(i18n) {
        this.i18n = i18n;
    }
    /**
     * @return {?}
     */
    NgbDatepickerDayView.prototype.isMuted = /**
     * @return {?}
     */
    function () { return !this.selected && (this.date.month !== this.currentMonth || this.disabled); };
    /** @nocollapse */
    NgbDatepickerDayView.ctorParameters = function () { return [
        { type: NgbDatepickerI18n }
    ]; };
    NgbDatepickerDayView.propDecorators = {
        currentMonth: [{ type: Input }],
        date: [{ type: Input }],
        disabled: [{ type: Input }],
        focused: [{ type: Input }],
        selected: [{ type: Input }]
    };
NgbDatepickerDayView.ngComponentDef = ɵngcc0.ɵɵdefineComponent({ type: NgbDatepickerDayView, selectors: [["", "ngbDatepickerDayView", ""]], factory: function NgbDatepickerDayView_Factory(t) { return new (t || NgbDatepickerDayView)(ɵngcc0.ɵɵdirectiveInject(NgbDatepickerI18n)); }, hostBindings: function NgbDatepickerDayView_HostBindings(rf, ctx, elIndex) { if (rf & 1) {
        ɵngcc0.ɵɵallocHostVars(5);
        ɵngcc0.ɵɵelementHostAttrs(_c0);
        ɵngcc0.ɵɵstyling();
    } if (rf & 2) {
        ɵngcc0.ɵɵclassProp("bg-primary", ctx.selected);
        ɵngcc0.ɵɵclassProp("text-white", ctx.selected);
        ɵngcc0.ɵɵclassProp("text-muted", ctx.isMuted());
        ɵngcc0.ɵɵclassProp("outside", ctx.isMuted());
        ɵngcc0.ɵɵclassProp("active", ctx.focused);
        ɵngcc0.ɵɵstylingApply();
    } }, inputs: { currentMonth: "currentMonth", date: "date", disabled: "disabled", focused: "focused", selected: "selected" }, attrs: _c1, consts: 1, vars: 1, template: function NgbDatepickerDayView_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtext(0);
    } if (rf & 2) {
        ɵngcc0.ɵɵtextInterpolate(ctx.i18n.getDayNumerals(ctx.date));
    } }, styles: ["[ngbDatepickerDayView]{text-align:center;width:2rem;height:2rem;line-height:2rem;border-radius:.25rem;background:0 0}[ngbDatepickerDayView].outside{opacity:.5}"], encapsulation: 2, changeDetection: 0 });
/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(NgbDatepickerDayView, [{
        type: Component,
        args: [{
                selector: '[ngbDatepickerDayView]',
                changeDetection: ChangeDetectionStrategy.OnPush,
                encapsulation: ViewEncapsulation.None,
                host: {
                    'class': 'btn-light',
                    '[class.bg-primary]': 'selected',
                    '[class.text-white]': 'selected',
                    '[class.text-muted]': 'isMuted()',
                    '[class.outside]': 'isMuted()',
                    '[class.active]': 'focused'
                },
                template: "{{ i18n.getDayNumerals(date) }}",
                styles: ["[ngbDatepickerDayView]{text-align:center;width:2rem;height:2rem;line-height:2rem;border-radius:.25rem;background:0 0}[ngbDatepickerDayView].outside{opacity:.5}"]
            }]
    }], function () { return [{ type: NgbDatepickerI18n }]; }, { i18n: [], isMuted: [], currentMonth: [{
            type: Input
        }], date: [{
            type: Input
        }], disabled: [{
            type: Input
        }], focused: [{
            type: Input
        }], selected: [{
            type: Input
        }] });
    return NgbDatepickerDayView;
}());
export { NgbDatepickerDayView };
if (false) {
    /** @type {?} */
    NgbDatepickerDayView.prototype.currentMonth;
    /** @type {?} */
    NgbDatepickerDayView.prototype.date;
    /** @type {?} */
    NgbDatepickerDayView.prototype.disabled;
    /** @type {?} */
    NgbDatepickerDayView.prototype.focused;
    /** @type {?} */
    NgbDatepickerDayView.prototype.selected;
    /** @type {?} */
    NgbDatepickerDayView.prototype.i18n;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImQ6L0FuZ3VsYXIgUHJvamVjdC9EaWRleC9kaWRleC1hZG1pbi1wYW5lbC9ub2RlX21vZHVsZXMvQG5nLWJvb3RzdHJhcC9uZy1ib290c3RyYXAvZXNtNS9kYXRlcGlja2VyL2RhdGVwaWNrZXItZGF5LXZpZXcuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7O0FBT0E7Ozs7Ozs7Ozs7dUdBVXVHLEFBaUJqRzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztjQVdBIiwiZmlsZSI6ImRhdGVwaWNrZXItZGF5LXZpZXcuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQGZpbGVvdmVydmlldyBhZGRlZCBieSB0c2lja2xlXHJcbiAqIEBzdXBwcmVzcyB7Y2hlY2tUeXBlcyxjb25zdGFudFByb3BlcnR5LGV4dHJhUmVxdWlyZSxtaXNzaW5nT3ZlcnJpZGUsbWlzc2luZ1JldHVybix1bnVzZWRQcml2YXRlTWVtYmVycyx1c2VsZXNzQ29kZX0gY2hlY2tlZCBieSB0c2NcclxuICovXHJcbmltcG9ydCB7IENoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDb21wb25lbnQsIElucHV0LCBWaWV3RW5jYXBzdWxhdGlvbiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBOZ2JEYXRlIH0gZnJvbSAnLi9uZ2ItZGF0ZSc7XHJcbmltcG9ydCB7IE5nYkRhdGVwaWNrZXJJMThuIH0gZnJvbSAnLi9kYXRlcGlja2VyLWkxOG4nO1xyXG52YXIgTmdiRGF0ZXBpY2tlckRheVZpZXcgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XHJcbiAgICBmdW5jdGlvbiBOZ2JEYXRlcGlja2VyRGF5VmlldyhpMThuKSB7XHJcbiAgICAgICAgdGhpcy5pMThuID0gaTE4bjtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogQHJldHVybiB7P31cclxuICAgICAqL1xyXG4gICAgTmdiRGF0ZXBpY2tlckRheVZpZXcucHJvdG90eXBlLmlzTXV0ZWQgPSAvKipcclxuICAgICAqIEByZXR1cm4gez99XHJcbiAgICAgKi9cclxuICAgIGZ1bmN0aW9uICgpIHsgcmV0dXJuICF0aGlzLnNlbGVjdGVkICYmICh0aGlzLmRhdGUubW9udGggIT09IHRoaXMuY3VycmVudE1vbnRoIHx8IHRoaXMuZGlzYWJsZWQpOyB9O1xyXG4gICAgTmdiRGF0ZXBpY2tlckRheVZpZXcuZGVjb3JhdG9ycyA9IFtcclxuICAgICAgICB7IHR5cGU6IENvbXBvbmVudCwgYXJnczogW3tcclxuICAgICAgICAgICAgICAgICAgICBzZWxlY3RvcjogJ1tuZ2JEYXRlcGlja2VyRGF5Vmlld10nLFxyXG4gICAgICAgICAgICAgICAgICAgIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxyXG4gICAgICAgICAgICAgICAgICAgIGVuY2Fwc3VsYXRpb246IFZpZXdFbmNhcHN1bGF0aW9uLk5vbmUsXHJcbiAgICAgICAgICAgICAgICAgICAgaG9zdDoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAnY2xhc3MnOiAnYnRuLWxpZ2h0JyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgJ1tjbGFzcy5iZy1wcmltYXJ5XSc6ICdzZWxlY3RlZCcsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICdbY2xhc3MudGV4dC13aGl0ZV0nOiAnc2VsZWN0ZWQnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAnW2NsYXNzLnRleHQtbXV0ZWRdJzogJ2lzTXV0ZWQoKScsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICdbY2xhc3Mub3V0c2lkZV0nOiAnaXNNdXRlZCgpJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgJ1tjbGFzcy5hY3RpdmVdJzogJ2ZvY3VzZWQnXHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICB0ZW1wbGF0ZTogXCJ7eyBpMThuLmdldERheU51bWVyYWxzKGRhdGUpIH19XCIsXHJcbiAgICAgICAgICAgICAgICAgICAgc3R5bGVzOiBbXCJbbmdiRGF0ZXBpY2tlckRheVZpZXdde3RleHQtYWxpZ246Y2VudGVyO3dpZHRoOjJyZW07aGVpZ2h0OjJyZW07bGluZS1oZWlnaHQ6MnJlbTtib3JkZXItcmFkaXVzOi4yNXJlbTtiYWNrZ3JvdW5kOjAgMH1bbmdiRGF0ZXBpY2tlckRheVZpZXddLm91dHNpZGV7b3BhY2l0eTouNX1cIl1cclxuICAgICAgICAgICAgICAgIH1dIH1cclxuICAgIF07XHJcbiAgICAvKiogQG5vY29sbGFwc2UgKi9cclxuICAgIE5nYkRhdGVwaWNrZXJEYXlWaWV3LmN0b3JQYXJhbWV0ZXJzID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gW1xyXG4gICAgICAgIHsgdHlwZTogTmdiRGF0ZXBpY2tlckkxOG4gfVxyXG4gICAgXTsgfTtcclxuICAgIE5nYkRhdGVwaWNrZXJEYXlWaWV3LnByb3BEZWNvcmF0b3JzID0ge1xyXG4gICAgICAgIGN1cnJlbnRNb250aDogW3sgdHlwZTogSW5wdXQgfV0sXHJcbiAgICAgICAgZGF0ZTogW3sgdHlwZTogSW5wdXQgfV0sXHJcbiAgICAgICAgZGlzYWJsZWQ6IFt7IHR5cGU6IElucHV0IH1dLFxyXG4gICAgICAgIGZvY3VzZWQ6IFt7IHR5cGU6IElucHV0IH1dLFxyXG4gICAgICAgIHNlbGVjdGVkOiBbeyB0eXBlOiBJbnB1dCB9XVxyXG4gICAgfTtcclxuICAgIHJldHVybiBOZ2JEYXRlcGlja2VyRGF5VmlldztcclxufSgpKTtcclxuZXhwb3J0IHsgTmdiRGF0ZXBpY2tlckRheVZpZXcgfTtcclxuaWYgKGZhbHNlKSB7XHJcbiAgICAvKiogQHR5cGUgez99ICovXHJcbiAgICBOZ2JEYXRlcGlja2VyRGF5Vmlldy5wcm90b3R5cGUuY3VycmVudE1vbnRoO1xyXG4gICAgLyoqIEB0eXBlIHs/fSAqL1xyXG4gICAgTmdiRGF0ZXBpY2tlckRheVZpZXcucHJvdG90eXBlLmRhdGU7XHJcbiAgICAvKiogQHR5cGUgez99ICovXHJcbiAgICBOZ2JEYXRlcGlja2VyRGF5Vmlldy5wcm90b3R5cGUuZGlzYWJsZWQ7XHJcbiAgICAvKiogQHR5cGUgez99ICovXHJcbiAgICBOZ2JEYXRlcGlja2VyRGF5Vmlldy5wcm90b3R5cGUuZm9jdXNlZDtcclxuICAgIC8qKiBAdHlwZSB7P30gKi9cclxuICAgIE5nYkRhdGVwaWNrZXJEYXlWaWV3LnByb3RvdHlwZS5zZWxlY3RlZDtcclxuICAgIC8qKiBAdHlwZSB7P30gKi9cclxuICAgIE5nYkRhdGVwaWNrZXJEYXlWaWV3LnByb3RvdHlwZS5pMThuO1xyXG59XHIiXX0=