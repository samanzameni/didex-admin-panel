/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { NGB_CAROUSEL_DIRECTIVES } from './carousel';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './carousel';
export { NgbCarousel, NgbSlide, NgbSlideEventDirection, NgbSlideEventSource } from './carousel';
export { NgbCarouselConfig } from './carousel-config';
export class NgbCarouselModule {
}
NgbCarouselModule.ngModuleDef = ɵngcc0.ɵɵdefineNgModule({ type: NgbCarouselModule });
/*@__PURE__*/ ɵngcc0.ɵɵsetNgModuleScope(NgbCarouselModule, { declarations: function () { return [ɵngcc1.NgbCarousel, ɵngcc1.NgbSlide]; }, imports: function () { return [CommonModule]; }, exports: function () { return [ɵngcc1.NgbCarousel, ɵngcc1.NgbSlide]; } });
/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(NgbCarouselModule, [{
        type: NgModule,
        args: [{ declarations: NGB_CAROUSEL_DIRECTIVES, exports: NGB_CAROUSEL_DIRECTIVES, imports: [CommonModule] }]
    }], null, null);
NgbCarouselModule.ngInjectorDef = ɵngcc0.ɵɵdefineInjector({ factory: function NgbCarouselModule_Factory(t) { return new (t || NgbCarouselModule)(); }, imports: [[CommonModule]] });
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImQ6L0FuZ3VsYXIgUHJvamVjdC9EaWRleC9kaWRleC1hZG1pbi1wYW5lbC9ub2RlX21vZHVsZXMvQG5nLWJvb3RzdHJhcC9uZy1ib290c3RyYXAvZXNtMjAxNS9jYXJvdXNlbC9jYXJvdXNlbC5tb2R1bGUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7OztBQU9BOzs7Ozs7Ozs7O0NBR0MsbUxBR0MiLCJmaWxlIjoiY2Fyb3VzZWwubW9kdWxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIEBmaWxlb3ZlcnZpZXcgYWRkZWQgYnkgdHNpY2tsZVxyXG4gKiBAc3VwcHJlc3Mge2NoZWNrVHlwZXMsY29uc3RhbnRQcm9wZXJ0eSxleHRyYVJlcXVpcmUsbWlzc2luZ092ZXJyaWRlLG1pc3NpbmdSZXR1cm4sdW51c2VkUHJpdmF0ZU1lbWJlcnMsdXNlbGVzc0NvZGV9IGNoZWNrZWQgYnkgdHNjXHJcbiAqL1xyXG5pbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xyXG5pbXBvcnQgeyBOR0JfQ0FST1VTRUxfRElSRUNUSVZFUyB9IGZyb20gJy4vY2Fyb3VzZWwnO1xyXG5leHBvcnQgeyBOZ2JDYXJvdXNlbCwgTmdiU2xpZGUsIE5nYlNsaWRlRXZlbnREaXJlY3Rpb24sIE5nYlNsaWRlRXZlbnRTb3VyY2UgfSBmcm9tICcuL2Nhcm91c2VsJztcclxuZXhwb3J0IHsgTmdiQ2Fyb3VzZWxDb25maWcgfSBmcm9tICcuL2Nhcm91c2VsLWNvbmZpZyc7XHJcbmV4cG9ydCBjbGFzcyBOZ2JDYXJvdXNlbE1vZHVsZSB7XHJcbn1cclxuTmdiQ2Fyb3VzZWxNb2R1bGUuZGVjb3JhdG9ycyA9IFtcclxuICAgIHsgdHlwZTogTmdNb2R1bGUsIGFyZ3M6IFt7IGRlY2xhcmF0aW9uczogTkdCX0NBUk9VU0VMX0RJUkVDVElWRVMsIGV4cG9ydHM6IE5HQl9DQVJPVVNFTF9ESVJFQ1RJVkVTLCBpbXBvcnRzOiBbQ29tbW9uTW9kdWxlXSB9LF0gfVxyXG5dO1xyIl19