/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
/**
 * A configuration service for the [`NgbDatepicker`](#/components/datepicker/api#NgbDatepicker) component.
 *
 * You can inject this service, typically in your root component, and customize the values of its properties in
 * order to provide default values for all the datepickers used in the application.
 */
import * as ɵngcc0 from '@angular/core';
export class NgbDatepickerConfig {
    constructor() {
        this.displayMonths = 1;
        this.firstDayOfWeek = 1;
        this.navigation = 'select';
        this.outsideDays = 'visible';
        this.showWeekdays = true;
        this.showWeekNumbers = false;
    }
}
NgbDatepickerConfig.ngInjectableDef = ɵngcc0.ɵɵdefineInjectable({ token: NgbDatepickerConfig, factory: function NgbDatepickerConfig_Factory(t) { return new (t || NgbDatepickerConfig)(); }, providedIn: 'root' });
/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(NgbDatepickerConfig, [{
        type: Injectable,
        args: [{ providedIn: 'root' }]
    }], function () { return []; }, { constructor: [], displayMonths: [], firstDayOfWeek: [], navigation: [], outsideDays: [], showWeekdays: [], showWeekNumbers: [] });
/** @nocollapse */ NgbDatepickerConfig.ngInjectableDef = i0.ɵɵdefineInjectable({ factory: function NgbDatepickerConfig_Factory() { return new NgbDatepickerConfig(); }, token: NgbDatepickerConfig, providedIn: "root" });
if (false) {
    /** @type {?} */
    NgbDatepickerConfig.prototype.dayTemplate;
    /** @type {?} */
    NgbDatepickerConfig.prototype.dayTemplateData;
    /** @type {?} */
    NgbDatepickerConfig.prototype.footerTemplate;
    /** @type {?} */
    NgbDatepickerConfig.prototype.displayMonths;
    /** @type {?} */
    NgbDatepickerConfig.prototype.firstDayOfWeek;
    /** @type {?} */
    NgbDatepickerConfig.prototype.markDisabled;
    /** @type {?} */
    NgbDatepickerConfig.prototype.minDate;
    /** @type {?} */
    NgbDatepickerConfig.prototype.maxDate;
    /** @type {?} */
    NgbDatepickerConfig.prototype.navigation;
    /** @type {?} */
    NgbDatepickerConfig.prototype.outsideDays;
    /** @type {?} */
    NgbDatepickerConfig.prototype.showWeekdays;
    /** @type {?} */
    NgbDatepickerConfig.prototype.showWeekNumbers;
    /** @type {?} */
    NgbDatepickerConfig.prototype.startDate;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImQ6L0FuZ3VsYXIgUHJvamVjdC9EaWRleC9kaWRleC1hZG1pbi1wYW5lbC9ub2RlX21vZHVsZXMvQG5nLWJvb3RzdHJhcC9uZy1ib290c3RyYXAvZXNtMjAxNS9kYXRlcGlja2VyL2RhdGVwaWNrZXItY29uZmlnLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7O0FBWUE7Ozs7Ozs7Ozs7Ozs7O0NBU0MsdUtBR0MiLCJmaWxlIjoiZGF0ZXBpY2tlci1jb25maWcuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQGZpbGVvdmVydmlldyBhZGRlZCBieSB0c2lja2xlXHJcbiAqIEBzdXBwcmVzcyB7Y2hlY2tUeXBlcyxjb25zdGFudFByb3BlcnR5LGV4dHJhUmVxdWlyZSxtaXNzaW5nT3ZlcnJpZGUsbWlzc2luZ1JldHVybix1bnVzZWRQcml2YXRlTWVtYmVycyx1c2VsZXNzQ29kZX0gY2hlY2tlZCBieSB0c2NcclxuICovXHJcbmltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0ICogYXMgaTAgZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcclxuLyoqXHJcbiAqIEEgY29uZmlndXJhdGlvbiBzZXJ2aWNlIGZvciB0aGUgW2BOZ2JEYXRlcGlja2VyYF0oIy9jb21wb25lbnRzL2RhdGVwaWNrZXIvYXBpI05nYkRhdGVwaWNrZXIpIGNvbXBvbmVudC5cclxuICpcclxuICogWW91IGNhbiBpbmplY3QgdGhpcyBzZXJ2aWNlLCB0eXBpY2FsbHkgaW4geW91ciByb290IGNvbXBvbmVudCwgYW5kIGN1c3RvbWl6ZSB0aGUgdmFsdWVzIG9mIGl0cyBwcm9wZXJ0aWVzIGluXHJcbiAqIG9yZGVyIHRvIHByb3ZpZGUgZGVmYXVsdCB2YWx1ZXMgZm9yIGFsbCB0aGUgZGF0ZXBpY2tlcnMgdXNlZCBpbiB0aGUgYXBwbGljYXRpb24uXHJcbiAqL1xyXG5leHBvcnQgY2xhc3MgTmdiRGF0ZXBpY2tlckNvbmZpZyB7XHJcbiAgICBjb25zdHJ1Y3RvcigpIHtcclxuICAgICAgICB0aGlzLmRpc3BsYXlNb250aHMgPSAxO1xyXG4gICAgICAgIHRoaXMuZmlyc3REYXlPZldlZWsgPSAxO1xyXG4gICAgICAgIHRoaXMubmF2aWdhdGlvbiA9ICdzZWxlY3QnO1xyXG4gICAgICAgIHRoaXMub3V0c2lkZURheXMgPSAndmlzaWJsZSc7XHJcbiAgICAgICAgdGhpcy5zaG93V2Vla2RheXMgPSB0cnVlO1xyXG4gICAgICAgIHRoaXMuc2hvd1dlZWtOdW1iZXJzID0gZmFsc2U7XHJcbiAgICB9XHJcbn1cclxuTmdiRGF0ZXBpY2tlckNvbmZpZy5kZWNvcmF0b3JzID0gW1xyXG4gICAgeyB0eXBlOiBJbmplY3RhYmxlLCBhcmdzOiBbeyBwcm92aWRlZEluOiAncm9vdCcgfSxdIH1cclxuXTtcclxuLyoqIEBub2NvbGxhcHNlICovIE5nYkRhdGVwaWNrZXJDb25maWcubmdJbmplY3RhYmxlRGVmID0gaTAuybXJtWRlZmluZUluamVjdGFibGUoeyBmYWN0b3J5OiBmdW5jdGlvbiBOZ2JEYXRlcGlja2VyQ29uZmlnX0ZhY3RvcnkoKSB7IHJldHVybiBuZXcgTmdiRGF0ZXBpY2tlckNvbmZpZygpOyB9LCB0b2tlbjogTmdiRGF0ZXBpY2tlckNvbmZpZywgcHJvdmlkZWRJbjogXCJyb290XCIgfSk7XHJcbmlmIChmYWxzZSkge1xyXG4gICAgLyoqIEB0eXBlIHs/fSAqL1xyXG4gICAgTmdiRGF0ZXBpY2tlckNvbmZpZy5wcm90b3R5cGUuZGF5VGVtcGxhdGU7XHJcbiAgICAvKiogQHR5cGUgez99ICovXHJcbiAgICBOZ2JEYXRlcGlja2VyQ29uZmlnLnByb3RvdHlwZS5kYXlUZW1wbGF0ZURhdGE7XHJcbiAgICAvKiogQHR5cGUgez99ICovXHJcbiAgICBOZ2JEYXRlcGlja2VyQ29uZmlnLnByb3RvdHlwZS5mb290ZXJUZW1wbGF0ZTtcclxuICAgIC8qKiBAdHlwZSB7P30gKi9cclxuICAgIE5nYkRhdGVwaWNrZXJDb25maWcucHJvdG90eXBlLmRpc3BsYXlNb250aHM7XHJcbiAgICAvKiogQHR5cGUgez99ICovXHJcbiAgICBOZ2JEYXRlcGlja2VyQ29uZmlnLnByb3RvdHlwZS5maXJzdERheU9mV2VlaztcclxuICAgIC8qKiBAdHlwZSB7P30gKi9cclxuICAgIE5nYkRhdGVwaWNrZXJDb25maWcucHJvdG90eXBlLm1hcmtEaXNhYmxlZDtcclxuICAgIC8qKiBAdHlwZSB7P30gKi9cclxuICAgIE5nYkRhdGVwaWNrZXJDb25maWcucHJvdG90eXBlLm1pbkRhdGU7XHJcbiAgICAvKiogQHR5cGUgez99ICovXHJcbiAgICBOZ2JEYXRlcGlja2VyQ29uZmlnLnByb3RvdHlwZS5tYXhEYXRlO1xyXG4gICAgLyoqIEB0eXBlIHs/fSAqL1xyXG4gICAgTmdiRGF0ZXBpY2tlckNvbmZpZy5wcm90b3R5cGUubmF2aWdhdGlvbjtcclxuICAgIC8qKiBAdHlwZSB7P30gKi9cclxuICAgIE5nYkRhdGVwaWNrZXJDb25maWcucHJvdG90eXBlLm91dHNpZGVEYXlzO1xyXG4gICAgLyoqIEB0eXBlIHs/fSAqL1xyXG4gICAgTmdiRGF0ZXBpY2tlckNvbmZpZy5wcm90b3R5cGUuc2hvd1dlZWtkYXlzO1xyXG4gICAgLyoqIEB0eXBlIHs/fSAqL1xyXG4gICAgTmdiRGF0ZXBpY2tlckNvbmZpZy5wcm90b3R5cGUuc2hvd1dlZWtOdW1iZXJzO1xyXG4gICAgLyoqIEB0eXBlIHs/fSAqL1xyXG4gICAgTmdiRGF0ZXBpY2tlckNvbmZpZy5wcm90b3R5cGUuc3RhcnREYXRlO1xyXG59XHIiXX0=