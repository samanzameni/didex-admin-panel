{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://@ng-bootstrap/ng-bootstrap/util/util.ts","ng://@ng-bootstrap/ng-bootstrap/accordion/accordion-config.ts","ng://@ng-bootstrap/ng-bootstrap/accordion/accordion.ts","ng://@ng-bootstrap/ng-bootstrap/accordion/accordion.module.ts","ng://@ng-bootstrap/ng-bootstrap/alert/alert-config.ts","ng://@ng-bootstrap/ng-bootstrap/alert/alert.ts","ng://@ng-bootstrap/ng-bootstrap/alert/alert.module.ts","ng://@ng-bootstrap/ng-bootstrap/buttons/label.ts","ng://@ng-bootstrap/ng-bootstrap/buttons/checkbox.ts","ng://@ng-bootstrap/ng-bootstrap/buttons/radio.ts","ng://@ng-bootstrap/ng-bootstrap/buttons/buttons.module.ts","ng://@ng-bootstrap/ng-bootstrap/carousel/carousel-config.ts","ng://@ng-bootstrap/ng-bootstrap/carousel/carousel.ts","ng://@ng-bootstrap/ng-bootstrap/carousel/carousel.module.ts","ng://@ng-bootstrap/ng-bootstrap/collapse/collapse.ts","ng://@ng-bootstrap/ng-bootstrap/collapse/collapse.module.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/ngb-date.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/ngb-calendar.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker-tools.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker-i18n.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker-service.ts","ng://@ng-bootstrap/ng-bootstrap/util/key.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker-keyboard-service.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker-view-model.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker-config.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/adapters/ngb-date-adapter.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker-month-view.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker-navigation.ts","ng://@ng-bootstrap/ng-bootstrap/util/autoclose.ts","ng://@ng-bootstrap/ng-bootstrap/util/focus-trap.ts","ng://@ng-bootstrap/ng-bootstrap/util/positioning.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/ngb-date-parser-formatter.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker-input-config.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker-input.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker-day-view.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker-navigation-select.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/hijri/ngb-calendar-hijri.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/hijri/ngb-calendar-islamic-civil.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/hijri/ngb-calendar-islamic-umalqura.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/jalali/jalali.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/jalali/ngb-calendar-persian.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/hebrew/hebrew.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/hebrew/ngb-calendar-hebrew.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/hebrew/datepicker-i18n-hebrew.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/adapters/ngb-date-native-adapter.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/adapters/ngb-date-native-utc-adapter.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker.module.ts","ng://@ng-bootstrap/ng-bootstrap/dropdown/dropdown-config.ts","ng://@ng-bootstrap/ng-bootstrap/dropdown/dropdown.ts","ng://@ng-bootstrap/ng-bootstrap/dropdown/dropdown.module.ts","ng://@ng-bootstrap/ng-bootstrap/modal/modal-config.ts","ng://@ng-bootstrap/ng-bootstrap/util/popup.ts","ng://@ng-bootstrap/ng-bootstrap/util/scrollbar.ts","ng://@ng-bootstrap/ng-bootstrap/modal/modal-backdrop.ts","ng://@ng-bootstrap/ng-bootstrap/modal/modal-ref.ts","ng://@ng-bootstrap/ng-bootstrap/modal/modal-dismiss-reasons.ts","ng://@ng-bootstrap/ng-bootstrap/modal/modal-window.ts","ng://@ng-bootstrap/ng-bootstrap/modal/modal-stack.ts","ng://@ng-bootstrap/ng-bootstrap/modal/modal.ts","ng://@ng-bootstrap/ng-bootstrap/modal/modal.module.ts","ng://@ng-bootstrap/ng-bootstrap/nav/nav-config.ts","ng://@ng-bootstrap/ng-bootstrap/nav/nav.ts","ng://@ng-bootstrap/ng-bootstrap/nav/nav-outlet.ts","ng://@ng-bootstrap/ng-bootstrap/nav/nav.module.ts","ng://@ng-bootstrap/ng-bootstrap/pagination/pagination-config.ts","ng://@ng-bootstrap/ng-bootstrap/pagination/pagination.ts","ng://@ng-bootstrap/ng-bootstrap/pagination/pagination.module.ts","ng://@ng-bootstrap/ng-bootstrap/util/triggers.ts","ng://@ng-bootstrap/ng-bootstrap/popover/popover-config.ts","ng://@ng-bootstrap/ng-bootstrap/popover/popover.ts","ng://@ng-bootstrap/ng-bootstrap/popover/popover.module.ts","ng://@ng-bootstrap/ng-bootstrap/progressbar/progressbar-config.ts","ng://@ng-bootstrap/ng-bootstrap/progressbar/progressbar.ts","ng://@ng-bootstrap/ng-bootstrap/progressbar/progressbar.module.ts","ng://@ng-bootstrap/ng-bootstrap/rating/rating-config.ts","ng://@ng-bootstrap/ng-bootstrap/rating/rating.ts","ng://@ng-bootstrap/ng-bootstrap/rating/rating.module.ts","ng://@ng-bootstrap/ng-bootstrap/tabset/tabset-config.ts","ng://@ng-bootstrap/ng-bootstrap/tabset/tabset.ts","ng://@ng-bootstrap/ng-bootstrap/tabset/tabset.module.ts","ng://@ng-bootstrap/ng-bootstrap/timepicker/ngb-time.ts","ng://@ng-bootstrap/ng-bootstrap/timepicker/timepicker-config.ts","ng://@ng-bootstrap/ng-bootstrap/timepicker/ngb-time-adapter.ts","ng://@ng-bootstrap/ng-bootstrap/timepicker/timepicker-i18n.ts","ng://@ng-bootstrap/ng-bootstrap/timepicker/timepicker.ts","ng://@ng-bootstrap/ng-bootstrap/timepicker/timepicker.module.ts","ng://@ng-bootstrap/ng-bootstrap/toast/toast-config.ts","ng://@ng-bootstrap/ng-bootstrap/toast/toast.ts","ng://@ng-bootstrap/ng-bootstrap/toast/toast.module.ts","ng://@ng-bootstrap/ng-bootstrap/tooltip/tooltip-config.ts","ng://@ng-bootstrap/ng-bootstrap/tooltip/tooltip.ts","ng://@ng-bootstrap/ng-bootstrap/tooltip/tooltip.module.ts","ng://@ng-bootstrap/ng-bootstrap/typeahead/highlight.ts","ng://@ng-bootstrap/ng-bootstrap/typeahead/typeahead-window.ts","ng://@ng-bootstrap/ng-bootstrap/util/accessibility/live.ts","ng://@ng-bootstrap/ng-bootstrap/typeahead/typeahead-config.ts","ng://@ng-bootstrap/ng-bootstrap/typeahead/typeahead.ts","ng://@ng-bootstrap/ng-bootstrap/typeahead/typeahead.module.ts","ng://@ng-bootstrap/ng-bootstrap/index.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__read","o","m","Symbol","iterator","r","e","ar","next","done","push","value","error","toInteger","parseInt","toString","getValueInRange","max","min","Math","isString","isNumber","isNaN","isInteger","isFinite","floor","isDefined","padNumber","slice","hasClassName","element","className","split","indexOf","Element","closest","matches","msMatchesSelector","webkitMatchesSelector","el","document","documentElement","contains","parentElement","parentNode","nodeType","NgbAccordionConfig","closeOthers","Injectable","args","providedIn","nextId","NgbPanelHeader","templateRef","Directive","selector","TemplateRef","NgbPanelTitle","NgbPanelContent","NgbPanel","disabled","id","isOpen","ngAfterContentChecked","titleTpl","titleTpls","first","headerTpl","headerTpls","contentTpl","contentTpls","Input","ContentChildren","descendants","NgbAccordion","config","activeIds","destroyOnHide","panelChange","EventEmitter","type","closeOtherPanels","isExpanded","panelId","expand","_changeOpenState","_findPanelById","expandAll","_this","panels","forEach","panel","collapse","collapseAll","toggle","_closeOthers","_updateActiveIds","nextState","defaultPrevented_1","emit","preventDefault","find","filter","map","Component","exportAs","encapsulation","ViewEncapsulation","None","host","class","role","[attr.aria-multiselectable]","template","Output","NgbPanelToggle","accordion","defineProperty","[disabled]","[class.collapsed]","[attr.aria-expanded]","[attr.aria-controls]","(click)","decorators","Optional","Host","NGB_ACCORDION_DIRECTIVES","NgbAccordionModule","NgModule","declarations","exports","imports","CommonModule","NgbAlertConfig","dismissible","NgbAlert","_renderer","_element","close","closeHandler","ngOnChanges","changes","typeChange","firstChange","removeClass","nativeElement","previousValue","addClass","currentValue","ngOnInit","changeDetection","ChangeDetectionStrategy","OnPush","[class.alert-dismissible]","Renderer2","ElementRef","NgbAlertModule","entryComponents","NgbButtonLabel","[class.btn]","[class.active]","[class.disabled]","[class.focus]","NGB_CHECKBOX_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","NgbCheckBox","multi","_label","_cd","valueChecked","valueUnChecked","onChange","_","onTouched","isFocused","focused","onInputChange","$event","modelToPropagate","target","checked","writeValue","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","active","markForCheck","[checked]","(change)","(focus)","(blur)","providers","ChangeDetectorRef","NGB_RADIO_VALUE_ACCESSOR","NgbRadioGroup","_radios","Set","_value","name","_disabled","onRadioChange","radio","onRadioValueUpdate","_updateRadiosValue","register","add","_updateRadiosDisabled","unregister","delete","updateValue","updateDisabled","NgbRadio","_group","stringValue","setProperty","_checked","ngOnDestroy","[name]","NGB_BUTTON_DIRECTIVES","NgbButtonsModule","NgbCarouselConfig","interval","wrap","keyboard","pauseOnHover","showNavigationArrows","showNavigationIndicators","NgbSlide","tplRef","NgbCarousel","_platformId","_ngZone","NgbSlideEventSource","_destroy$","Subject","_interval$","BehaviorSubject","_mouseHover$","_pauseOnHover$","_pause$","_wrap$","slide","mouseEnter","mouseLeave","ngAfterContentInit","isPlatformBrowser","runOutsideAngular","hasNextSlide$","combineLatest","pipe","slideEvent","current","startWith","activeId","slides","_a","_b","currentSlideId","slideArr","toArray","currentSlideIdx","_getSlideIdxById","distinctUntilChanged","pause","mouseHover","hasNextSlide","switchMap","timer","NEVER","takeUntil","subscribe","run","TIMER","activeSlide","_getSlideById","select","slideId","source","_cycleToSelected","_getSlideEventDirection","prev","_getPrevSlide","NgbSlideEventDirection","RIGHT","_getNextSlide","LEFT","cycle","slideIdx","direction","selectedSlide","paused","currentActiveSlideId","nextActiveSlideId","[style.display]","tabIndex","(keydown.arrowLeft)","(keydown.arrowRight)","Inject","PLATFORM_ID","NgZone","HostListener","ARROW_LEFT","ARROW_RIGHT","INDICATOR","NGB_CAROUSEL_DIRECTIVES","NgbCarouselModule","NgbCollapse","collapsed","[class.collapse]","[class.show]","NgbCollapseModule","NgbDate","year","month","day","from","date","equals","other","before","after","fromJSDate","jsDate","getFullYear","getMonth","getDate","toJSDate","Date","getTime","setFullYear","NGB_DATEPICKER_CALENDAR_FACTORY","NgbCalendarGregorian","NgbCalendar","useFactory","tslib_1.__extends","getDaysPerWeek","getMonths","getWeeksPerMonth","getNext","period","number","checkMonth","expectedMonth","setMonth","setDate","getPrev","getWeekday","getDay","getWeekNumber","week","firstDayOfWeek","time","round","getToday","isValid","isChangedDate","dateComparator","isChangedMonth","checkDateInRange","minDate","maxDate","isDateSelectable","state","markDisabled","buildMonths","calendar","i18n","force","displayMonths","months","monthsToReuse","splice","firstDate","reusedIndex","findIndex","dayTemplateData","outsideDays","calendarToday","lastDate","weeks","weekdays","daysPerWeek","firstMonthDate","dayOfWeek","getFirstViewDate","weekObject","days","newDate","nextDate","ariaLabel","getDayAriaLabel","today","contextUserData","undefined","dayObject","context","$implicit","data","currentMonth","currentYear","selected","tabindex","hidden","buildMonth","shift","NGB_DATEPICKER_18N_FACTORY","locale","NgbDatepickerI18nDefault","NgbDatepickerI18n","getDayNumerals","getWeekNumerals","weekNumber","getYearNumerals","deps","LOCALE_ID","_locale","_super","weekdaysStartingOnSunday","getLocaleDayNames","FormStyle","Standalone","TranslationWidth","Short","_weekdaysShort","index","_monthsShort","getLocaleMonthNames","Abbreviated","_monthsFull","Wide","getWeekdayShortName","weekday","getMonthShortName","getMonthFullName","formatDate","NgbDatepickerService","_calendar","_i18n","_VALIDATORS","_state","focusVisible","toValidDate","navigation","_model$","_dateSelect$","prevDisabled","nextDisabled","selectBoxes","years","selectedDate","model","set","options","patch","keys","key","reduce","obj","part","_nextState","focus","focusDate","focusSelect","emitEvent","open","defaultValue","ngbDate","newState","_updateState","_patchContexts","prevDate","startDate","Error","checkMinBeforeMax","forceRebuild","yearChanged","monthChanged","start","numbers","generateSelectBoxYears","generateSelectBoxMonths","nextMonthDisabled","Tab","Enter","Escape","Space","PageUp","PageDown","End","Home","ArrowLeft","ArrowUp","ArrowRight","ArrowDown","NgbDatepickerKeyboardService","processKey","event","datepicker","which","Key","focusedDate","shiftKey","stopPropagation","PREV","NEXT","NgbDatepickerConfig","showWeekdays","showWeekNumbers","NGB_DATEPICKER_DATE_ADAPTER_FACTORY","NgbDateStructAdapter","NgbDateAdapter","fromModel","toModel","NGB_DATEPICKER_VALUE_ACCESSOR","NgbDatepicker","_service","_keyboardService","cd","_elementRef","_ngbDateAdapter","_destroyed$","_publicState","navigate","dateSelect","input","dateSelect$","model$","oldDate","navigationPrevented","newSelectedDate","newFocusedDate","oldFocusedDate","_controlValue","onStable","asObservable","take","elementToFocus","querySelector","navigateTo","ngAfterViewInit","focusIns$","fromEvent","_monthsEl","focusOuts$","merge","relatedTarget","inputs_1","inputs","onDateSelect","onKeyDown","onNavigateDateSelect","onNavigateEvent","NavigationEvent","ViewChild","static","NgbDatepickerMonthView","doSelect","NgbDatepickerNavigation","onClickPrev","onClickNext","isContainedIn","array","some","item","matchesSelectorIfAny","wrapAsyncForMobile","navigator","userAgent","test","setTimeout","ngbAutoClose","zone","closed$","insideElements","ignoreElements","insideSelector","escapes$","tap","mouseDowns$","button","closeableClicks$","withLatestFrom","delay","race","FOCUSABLE_ELEMENTS_SELECTOR","join","getFocusableBoundaryElements","list","querySelectorAll","ngbFocusTrap","stopFocusTrap$","refocusOnClick","lastFocusedElement$","tabEvent","focusedElement","_c","last","arr","lastFocusedElement","Positioning","getAllStyles","window","getComputedStyle","getStyle","prop","isStaticPositioned","offsetParent","offsetParentEl","position","elPosition","parentOffset","width","height","top","bottom","left","right","getBoundingClientRect","offset","clientTop","clientLeft","elBcr","viewportOffset","pageYOffset","pageXOffset","elOffset","offsetHeight","offsetWidth","positionElements","hostElement","targetElement","placement","appendToBody","placementPrimary","placementSecondary","hostElPosition","targetElStyles","marginTop","parseFloat","marginBottom","marginLeft","marginRight","topPosition","leftPosition","style","transform","targetElBCR","html","windowHeight","innerHeight","clientHeight","windowWidth","innerWidth","clientWidth","placementSeparator","positionService","baseClass","placementVals","isArray","allowedPlacements","classList","addClassesToTarget","targetPlacement","primary","secondary","classes","classname","placementToRemove","remove","hasAuto","val","search","testPlacement","isInViewport","placementVals_1","tslib_1.__values","placementVals_1_1","addedClasses","NGB_DATEPICKER_PARSER_FORMATTER_FACTORY","NgbDateISOParserFormatter","NgbDateParserFormatter","parse","dateParts","trim","format","NgbInputDatepickerConfig","autoClose","restoreFocus","NgbInputDatepicker","NGB_DATEPICKER_VALIDATOR","NG_VALIDATORS","_parserFormatter","_elRef","_vcRef","_cfr","_dateAdapter","_document","_changeDetector","_cRef","_elWithFocus","closed","_onChange","_onTouched","_validatorChange","_zoneSubscription","_updatePopupPosition","instance","registerOnValidatorChange","validate","c","_fromDateStruct","requiredBefore","requiredAfter","invalid","_model","_writeModelValue","manualDateChange","updateView","inputValueChanged","_inputValue","cf","resolveComponentFactory","createComponent","_applyPopupStyling","location","_applyDatepickerInputs","_subscribeForDatepickerOutputs","changeDetectorRef","detectChanges","container","appendChild","activeElement","hostView","body","onBlur","onFocus","unsubscribe","datepickerInstance","optionName","navigateEvent","positionTarget","HTMLElement","(input)","ViewContainerRef","ComponentFactoryResolver","DOCUMENT","NgbDatepickerDayView","isMuted","[class.bg-primary]","[class.text-white]","[class.text-muted]","[class.outside]","NgbDatepickerNavigationSelect","_month","_year","changeMonth","changeYear","ngAfterViewChecked","monthSelect","yearSelect","read","NgbCalendarHijri","_setYear","_setMonth","_setDay","toGregorian","MuhDate","fromGregorian","mDays","getDaysPerMonth","isGregorianLeapYear","gDate","mod","a","NgbCalendarIslamicCivil","gYear","gMonth","gDay","julianDay","GREGORIAN_EPOCH","hYear","hMonth","ceil","hDay","getIslamicMonthStart","hDate","wjd","depoch","quadricent","dqc","cent","dcent","quad","dquad","yindex","yearday","leapadj","tjd2","GREGORIAN_FIRST_DATE","GREGORIAN_LAST_DATE","ONE_DAY","MONTH_LENGTH","NgbCalendarIslamicUmalqura","date1","date2","time1","time2","diff","daysDiff","UTC","abs","j","numOfDays","dayDiff","y","jalaliDate","jYear","jMonth","jDay","julianToGregorian","gregorianToJulian","jalCal","gy","march","div","setHours","gdate","julianDayNumber","jalaliDay","jalaliMonth","numberOfDays","jalaliYear","gregorianDay","leap","julianToJalali","setJalaliMonth","trunc","jump","breaks","breaksLength","leapJ","jp","jm","gm","gd","NgbCalendarPersian","yearValue","setJalaliYear","setJalaliDay","PARTS_PER_HOUR","PARTS_PER_DAY","PARTS_FRACTIONAL_MONTH","PARTS_PER_MONTH","BAHARAD","HEBREW_DAY_ON_JAN_1_1970","numberOfFirstDayInYear","monthsBeforeYear","fractionalMonthsBeforeYear","dayNumber","timeOfDay","isHebrewLeapYear","getDaysInGregorianMonth","getHebrewMonths","getDaysInHebrewYear","getDaysInHebrewMonth","yearLength","yearType","daysInMonth","getDayNumberInHebrewYear","numberOfDay","daysSinceHebEpoch","monthsSinceHebEpoch","firstDayOfThisYear","dayOfYear","hebrewDate","diffDays","hebrewNumerals","numerals","hArray0_9","hArray10_19","hArray20_90","hArray100_900","hArray1000_9000","mem","result","step","unshift","NgbCalendarHebrew","setHebrewMonth","setHebrewDay","WEEKDAYS","MONTHS","MONTHS_LEAP","NgbDatepickerI18nHebrew","NgbDateNativeAdapter","_fromNativeDate","_toNativeDate","NgbDateNativeUTCAdapter","getUTCFullYear","getUTCMonth","getUTCDate","setUTCFullYear","NgbDatepickerModule","FormsModule","NgbDropdownConfig","NgbNavbar","NgbDropdownItem","elementRef","NgbDropdownMenu","dropdown","[class.dropdown-menu]","[attr.x-placement]","(keydown.ArrowUp)","(keydown.ArrowDown)","(keydown.Home)","(keydown.End)","(keydown.Enter)","(keydown.Space)","NgbDropdown","NgbDropdownAnchor","anchorEl","getNativeElement","aria-haspopup","NgbDropdownToggle","ngbNavbar","_closed$","_open","openChange","display","_positionMenu","_applyPlacementClasses","_setCloseHandlers","_applyContainer","isFirstChange","anchor","_anchor","_menu","_menuElement","_resetContainer","itemElements","_getMenuElements","isEventFromItems","itemElement","isEventFromToggle","_isEventFromToggle","_isDropup","menu","menuItems","_bodyContainer","_getFirstPlacement","renderer","menuElement","dropdownElement","dropdownMenuElement","removeStyle","removeChild","bodyContainer","createElement","setStyle","dropdownClass","ContentChild","NGB_DROPDOWN_DIRECTIVES","NgbDropdownModule","NgbModalConfig","backdrop","ContentRef","nodes","viewRef","componentRef","PopupService","_type","_injector","_viewContainerRef","_componentFactoryResolver","_applicationRef","content","_windowRef","_contentRef","_getContentRef","detachView","destroy","createEmbeddedView","attachView","rootNodes","createText","noop","ScrollBar","compensate","_getWidth","_isPresent","_adjustBody","scrollbarWidth","userSetPaddingStyle","paddingRight","actualPadding","rect","measurer","NgbModalBackdrop","[class]","NgbActiveModal","dismiss","reason","NgbModalRef","_windowCmptRef","_backdropCmptRef","_beforeDismiss","dismissEvent","Promise","resolve","reject","_resolve","_reject","then","_removeModalElements","_dismiss","windowNativeEl","backdropNativeEl","BACKDROP_CLICK","ESC","NgbModalWindow","_zone","requestAnimationFrame","defaultPrevented","ModalDismissReasons","preventClose","_dialogEl","autoFocusable","firstFocusable","elWithFocus","[attr.aria-modal]","[attr.aria-labelledby]","NgbModalStack","_scrollBar","_rendererFactory","_activeWindowCmptHasChanged","_ariaHiddenValues","Map","_backdropAttributes","_modalRefs","_windowAttributes","_windowCmpts","activeWindowCmpt","_revertAriaHidden","_setAriaHidden","moduleCFR","contentInjector","containerEl","createRenderer","revertPaddingForScrollBar","removeBodyClass","activeModal","contentRef","injector","backdropCmptRef","_attachBackdrop","windowCmptRef","_attachWindowComponent","ngbModalRef","beforeDismiss","_registerModalRef","_registerWindowCmpt","_applyWindowOptions","_applyBackdropOptions","dismissAll","hasOpenModals","windowInstance","backdropInstance","_createFromTemplateRef","_createFromString","_createFromComponent","component","createTextNode","contentCmptFactory","modalContentInjector","Injector","useValue","parent","componentNativeEl","scrollable","children","sibling","nodeName","getAttribute","setAttribute","removeAttribute","clear","unregisterModalRef","ngbWindowCmpt","onDestroy","ApplicationRef","RendererFactory2","NgbModal","_moduleCFR","_modalStack","_config","combinedOptions","NgbModalModule","NgbNavConfig","orientation","roles","isValidNavId","navCounter","NgbNavContent","NgbNavItem","nav","_nav","domId","_id","isPanelInDom","[class.nav-item]","NgbNav","activeIdChange","navChange","click","_updateActiveId","items","emitNavChange","[class.nav]","[class.flex-column]","[attr.aria-orientation]","[attr.role]","Attribute","NgbNavLink","navItem","hasNavItemClass","Node","COMMENT_NODE","[id]","[class.nav-link]","href","[attr.tabindex]","[attr.aria-selected]","[attr.aria-disabled]","NgbNavOutlet","[class.tab-content]","NGB_NAV_DIRECTIVES","NgbNavModule","NgbPaginationConfig","boundaryLinks","directionLinks","ellipses","maxSize","pageSize","rotate","NgbPaginationEllipsis","NgbPaginationFirst","NgbPaginationLast","NgbPaginationNext","NgbPaginationNumber","NgbPaginationPrevious","NgbPagination","pageCount","pages","page","pageChange","size","hasPrevious","hasNext","previousDisabled","selectPage","pageNumber","_updatePages","isEllipsis","_applyEllipses","end","_applyRotation","leftOffset","rightOffset","_applyPagination","_setPageInRange","newPageNo","prevPageNo","collectionSize","newPage","DIRECTIVES","NgbPaginationModule","Trigger","isManual","DEFAULT_ALIASES","hover","delayOrNoop","listenToTriggers","triggers","isOpenedFn","openFn","closeFn","openDelay","closeDelay","parsedTriggers","aliases","trimmedTriggers","trigger","triggerPair","alias","manualTriggers","parseTriggers","subscription","Observable","subscriber","listeners","toggleFn","listen","unsubscribeFn","observeTriggers","input$","pending","filteredInput$","currentlyOpen","share","delayedOpen$","delayedClose$","triggerDelay","NgbPopoverConfig","disablePopover","NgbPopoverWindow","isTitleTemplate","title","NgbPopover","componentFactoryResolver","viewContainerRef","applicationRef","shown","_ngbPopoverWindowId","popoverClass","_popupService","_isDisabled","ngbPopover","popoverTitle","_unregisterListenersFn","bind","NgbPopoverModule","NgbProgressbarConfig","animated","striped","showValue","NgbProgressbar","textType","_max","getValue","getPercentValue","NgbProgressbarModule","NgbRatingConfig","readonly","resettable","NGB_RATING_VALUE_ACCESSOR","NgbRating","_changeDetectorRef","contexts","leave","rateChange","ariaValueText","nextRate","enter","handleBlur","handleClick","update","rate","handleKeyDown","v","k","fill","reset","internalChange","newRate","_getFillValue","toFixed","nextValue","[tabindex]","aria-valuemin","[attr.aria-valuemax]","[attr.aria-valuenow]","[attr.aria-valuetext]","(keydown)","(mouseleave)","NgbRatingModule","NgbTabsetConfig","justify","NgbTabTitle","NgbTabContent","NgbTab","NgbTabset","tabChange","justifyClass","tabId","selectedTab","_getTabById","activeTab","tabs","tabsWithId","tab","NGB_TABSET_DIRECTIVES","NgbTabsetModule","NgbTime","hour","minute","second","changeHour","updateHour","NaN","changeMinute","updateMinute","changeSecond","updateSecond","checkSecs","NgbTimepickerConfig","meridian","spinners","seconds","hourStep","minuteStep","secondStep","readonlyInputs","NGB_DATEPICKER_TIME_ADAPTER_FACTORY","NgbTimeStructAdapter","NgbTimeAdapter","NGB_TIMEPICKER_I18N_FACTORY","NgbTimepickerI18nDefault","NgbTimepickerI18n","_periods","getLocaleDayPeriods","Narrow","getMorningPeriod","getAfternoonPeriod","FILTER_REGEX","NGB_TIMEPICKER_VALUE_ACCESSOR","NgbTimepicker","_ngbTimeAdapter","_hourStep","_minuteStep","_secondStep","structValue","propagateModelChange","newVal","isPM","enteredHour","toggleMeridian","formatInput","replace","formatHour","formatMinSec","touched","NgbTimepickerModule","NgbToastConfig","autohide","ariaLive","NgbToastHeader","NgbToast","contentHeaderTpl","hideOutput","_init","_clearTimeout","hide","_timeoutID","clearTimeout","[attr.aria-live]","aria-atomic","[class.toast]","NgbToastModule","NgbTooltipConfig","disableTooltip","NgbTooltipWindow","NgbTooltip","_ngbTooltipWindowId","tooltipClass","_ngbTooltip","NgbTooltipModule","NgbHighlight","highlightClass","escapedTerms","term","parts","RegExp","NgbTypeaheadWindow","activeIdx","focusFirst","formatter","selectEvent","activeChangeEvent","hasActive","results","getActive","markActive","_activeChanged","resetActive","(mousedown)","ARIA_LIVE_DELAY","InjectionToken","factory","ARIA_LIVE_DELAY_FACTORY","getLiveElement","lazyCreate","Live","_delay","say","message","textContent","setText","NgbTypeaheadConfig","editable","showHint","NGB_TYPEAHEAD_VALUE_ACCESSOR","NgbTypeahead","nextWindowId","ngZone","_live","autocomplete","selectItem","popupId","_valueChanges","_resubscribeTypeahead","isPopupOpen","results$","_inputValueBackup","ngbTypeahead","userInput$","_subscription","_subscribeToUserInput","_closePopup","_unsubscribeFromUserInput","_writeInputValue","_formatItemForInput","dismissPopup","_showHint","_selectResult","_openPopup","_selectResultClosePopup","activeDescendant","userInputLowerCase","toLowerCase","formattedVal","substr","inputFormatter","resultFormatter","resultTemplate","count","[class.open]","[autocomplete]","autocapitalize","autocorrect","aria-multiline","[attr.aria-autocomplete]","[attr.aria-activedescendant]","[attr.aria-owns]","NgbTypeaheadModule","NGB_MODULES","NgbModule"],"mappings":"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B,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,gBAWF,IAAAC,GAAA,SAAAlY,GAAA,SAAAkY,mDAuEA,OAtEgDpd,EAAAA,EAAAA,GAK9Cod,EAAAnzB,UAAAgxB,cAAA,SAAcI,OAdKgC,EAAaC,EAE1BC,EACAC,EACAC,EAWAxB,EAAO,EACPyB,GAhBaL,EAgBUhC,EAhBGiC,EAgBIN,GAd9BO,EAAQ9d,KAAKke,IAAIN,EAAMhe,cAAege,EAAM/d,WAAY+d,EAAM9d,WAC9Die,EAAQ/d,KAAKke,IAAIL,EAAMje,cAAeie,EAAMhe,WAAYge,EAAM/d,WAC9Dke,EAAOzxB,KAAK4xB,IAAIL,EAAQC,GACvBxxB,KAAKkV,MAAMuc,EAAOP,KAYvB,KAAI7B,EAAM3b,UAAYsd,GAAqBtd,WAAa,GAAK2b,EAAM3b,UAAYud,GAAoBvd,WAAa,GAuB9G,OAAOwF,EAAAjb,UAAMgxB,cAAatwB,KAAAZ,KAACsxB,GArB3B,QADI3c,EAAO,KACFnU,EAAI,EAAGA,EAAI4yB,GAAazyB,OAAQH,IAAKmU,IAC5C,IAAK,IAAImf,EAAI,EAAGA,EAAI,GAAIA,IAAK,KACvBC,GAAaX,GAAa5yB,GAAGszB,GAAK,GACtC,GAAIH,GAAYI,EAYd,OAXA7B,EAAOyB,EAAW,GACPI,IACT7B,EAAO,EACP4B,KAEEA,EAAI,KACNA,EAAI,EACJnf,KAIK,IAAID,EADHC,EADCmf,EAE0B,EAAG5B,GAExCyB,GAAsBI,IAU9BV,EAAAnzB,UAAA8wB,YAAA,SAAYoB,OACJL,EAAQK,EAAMzd,KACdqd,EAASI,EAAMxd,MAAQ,EACvBsd,EAAOE,EAAMvd,IACfyc,EAAQ,IAAI5b,KAAKud,IACjBe,EAAU9B,EAAO,EACrB,GAAIH,GArLY,MAqLYA,GApLd,KAoLkC,CAC9C,IAAK,IAAIkC,EAAI,EAAGA,EAAIlC,EAtLN,KAsL2BkC,IACvC,IAAK,IAAIjzB,EAAI,EAAGA,EAAI,GAAIA,IACtBgzB,IAAYZ,GAAaa,GAAGjzB,GAAK,GAGrC,IAASA,EAAI,EAAGA,EAAIgxB,EAAQhxB,IAC1BgzB,IAAYZ,GAAarB,EA5Lb,MA4LkC/wB,GAAK,GAErDswB,EAAM3a,QAAQsc,GAAqBzd,UAAYwe,QAE/C1C,EAAQnW,EAAAjb,UAAM8wB,YAAWpwB,KAAAZ,KAACoyB,GAE5B,OAAOd,GAOT+B,EAAAnzB,UAAAkxB,gBAAA,SAAgBY,EAAgBD,GAC9B,OAAIA,GA1MY,MA0MYA,GAzMd,MA2MJqB,GADIrB,EA3ME,MA4MYC,EAAS,GAAK,GAEnC7W,EAAAjb,UAAMkxB,gBAAexwB,KAAAZ,KAACgyB,EAAQD,wBArExCjuB,EAAAA,aAuEDuvB,EAvEA,CACgD5B,ICjJhD,SAAgBT,GAAYkD,OAyMJC,EAAeC,EAAgBC,EACjDlzB,EAxMA4T,EAAOuf,IAuMWH,EAxMGD,EAAWvf,KAwMCyf,EAxMKF,EAAWtf,MAwMAyf,EAxMOH,EAAWrf,IA0MhE0f,IADHpzB,EAAIqzB,GAAOL,IACYM,GAAI,EAAGtzB,EAAEuzB,OAAwB,IAAdN,EAAS,GAAUO,GAAIP,EAAQ,IAAMA,EAAS,GAAKC,EAAO,IAvMxG,OADAtf,EAAK6f,SAAS,EAAG,GAAI,EAAG,KACjB7f,EAQT,SAAgBmc,GAAc2D,GAE5B,OAoJF,SAAwBC,OAG+EC,EACjGC,EAAaC,EAHbR,EAAKH,GAAkBQ,GAAiBxf,cAExC4f,EAAaT,EAAK,IAAKtzB,EAAIqzB,GAAOU,GAAaC,EAAeZ,GAAkBE,EAAI,EAAGtzB,EAAEuzB,OAK7F,IADAO,EAAeH,EAAkBK,IACb,EAAG,CACrB,GAAIF,GAAgB,IAIlB,OAFAD,EAAc,EAAIL,GAAIM,EAAc,IACpCF,EAAYxD,GAAI0D,EAAc,IAAM,EAC7B,IAAIvgB,EAAQwgB,EAAYF,EAAaD,GAG5CE,GAAgB,SAIlBC,GAAc,EACdD,GAAgB,IACD,IAAX9zB,EAAEi0B,OACJH,GAAgB,GAMpB,OAHAD,EAAc,EAAIL,GAAIM,EAAc,IACpCF,EAAYxD,GAAI0D,EAAc,IAAM,EAE7B,IAAIvgB,EAAQwgB,EAAYF,EAAaD,GAjLrCM,CADGd,GAAkBM,EAAMvf,cAAeuf,EAAMtf,WAAa,EAAGsf,EAAMrf,YAS/E,SAAgB8f,GAAevgB,EAAeH,GAI5C,OAHAA,GAASA,EACTG,EAAKJ,KAAOI,EAAKJ,KAAO1S,KAAKM,OAAOqS,EAAQ,GAAK,IACjDG,EAAKH,MAAQ3S,KAAKM,QAAQqS,EAAQ,GAAK,GAAK,IAAM,IAAM,EACjDG,EAsBT,SAASwc,GAAIC,EAAWjyB,GACtB,OAAOiyB,EAAIjyB,EAAI0C,KAAKM,MAAMivB,EAAIjyB,GAGhC,SAASo1B,GAAInD,EAAWjyB,GACtB,OAAO0C,KAAKszB,MAAM/D,EAAIjyB,GAgBxB,SAASi1B,GAAOU,OAcVM,EAZAC,EACA,EAAE,GAAI,EAAG,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MACtGC,EAAeD,EAAO90B,OACtB+wB,EAAQwD,EAAa,IACvBS,GAAS,GACTC,EAAKH,EAAO,GAEhB,GAAIP,EAAaU,GAAMV,GAAcO,EAAOC,EAAe,GACzD,MAAM,IAAI/W,MAAM,uBAAyBuW,GAK3C,IAAK,IAAI10B,EAAI,EAAGA,EAAIk1B,EAAcl1B,GAAK,EAAG,KAClCq1B,EAAKJ,EAAOj1B,GAElB,GADAg1B,EAAOK,EAAKD,EACRV,EAAaW,EACf,MAEFF,EAAQA,EAAwB,EAAhBhB,GAAIa,EAAM,IAAUb,GAAIpD,GAAIiE,EAAM,IAAK,GACvDI,EAAKC,MAEHp1B,EAAIy0B,EAAaU,EAIrBD,EAAQA,EAAqB,EAAbhB,GAAIl0B,EAAG,IAAUk0B,GAAIpD,GAAI9wB,EAAG,IAAM,EAAG,GAC/B,IAAlB8wB,GAAIiE,EAAM,KAAaA,EAAO/0B,GAAM,IACtCk1B,GAAS,OAOLjB,EAAQ,GAAKiB,GAHLhB,GAAIjD,EAAO,GAAKiD,GAA4B,GAAvBA,GAAIjD,EAAO,KAAO,GAAQ,GAAK,KAM9D8D,EAAO/0B,EAAI,IACbA,EAAIA,EAAI+0B,EAA2B,GAApBb,GAAIa,EAAO,EAAG,SAE3BJ,EAAO7D,GAAIA,GAAI9wB,EAAI,EAAG,IAAM,EAAG,GAKnC,OAJc,IAAV20B,IACFA,EAAO,GAGF,CAACA,KAAMA,EAAMX,GAAI/C,EAAOgD,MAAOA,GAaxC,SAASJ,GAAkBQ,OACrBhB,EAAI,EAAIgB,EAAkB,UAC9BhB,EAAIA,EAA+D,EAA3Da,GAAmD,EAA/CA,GAAI,EAAIG,EAAkB,UAAW,QAAa,GAAS,SACjEt0B,EAA2B,EAAvBm0B,GAAIpD,GAAIuC,EAAG,MAAO,GAAS,IAC/BlC,EAAO+C,GAAIpD,GAAI/wB,EAAG,KAAM,GAAK,EAC7BmxB,EAASJ,GAAIoD,GAAIn0B,EAAG,KAAM,IAAM,EAChCkxB,EAAQiD,GAAIb,EAAG,MAAQ,OAASa,GAAI,EAAIhD,EAAQ,GAEtD,OAAO,IAAIjc,KAAKgc,EAAOC,EAAS,EAAGC,GAUrC,SAAS2C,GAAkBE,EAAYqB,EAAYC,OAC7Cz2B,EAAIq1B,GAAqC,MAAhCF,EAAKE,GAAImB,EAAK,EAAG,GAAK,QAAgB,GAAKnB,GAAI,IAAMpD,GAAIuE,EAAK,EAAG,IAAM,EAAG,GAAKC,EAAK,SAEjG,OADAz2B,EAAIA,EAAIq1B,GAA6C,EAAzCA,GAAIF,EAAK,OAASE,GAAImB,EAAK,EAAG,GAAI,KAAU,GAAK,IA2D/D,SAAS1E,GAAgBxc,EAAeD,GACtC,OAAIC,GAAS,EACJ,GAELA,GAAS,GACJ,GAEiB,IAAtB4f,GAAO7f,GAAMygB,KACR,GAEF,sBC1NT,SAAAY,mDA0DA,OAzDwC/f,EAAAA,EAAAA,GACtC+f,EAAA91B,UAAAgW,eAAA,WAAmB,OAAO,GAE1B8f,EAAA91B,UAAAiW,UAAA,WAAc,MAAO,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,KAEzD6f,EAAA91B,UAAAkW,iBAAA,WAAqB,OAAO,GAE5B4f,EAAA91B,UAAAmW,QAAA,SAAQtB,EAAeuB,EAAyBC,GAG9C,YAHqB,IAAAD,IAAAA,EAAA,UAAyB,IAAAC,IAAAA,EAAA,GAC9CxB,EAAO,IAAIL,EAAQK,EAAKJ,KAAMI,EAAKH,MAAOG,EAAKF,KAEvCyB,GACN,IAAK,IAIH,OAHAvB,EDGR,SAA8BA,EAAekhB,GAE3C,OADAlhB,EAAKJ,MAAQshB,EACNlhB,ECLMmhB,CAAcnhB,EAAMA,EAAKJ,KAAO4B,IAClC3B,MAAQ,EACbG,EAAKF,IAAM,EACJE,EACT,IAAK,IAGH,OAFAA,EAAOugB,GAAevgB,EAAMA,EAAKH,MAAQ2B,IACpC1B,IAAM,EACJE,EACT,IAAK,IACH,ODMR,SAA6BA,EAAeF,OACtCsc,EAAQC,GAAgBrc,EAAKH,MAAOG,EAAKJ,MAC7C,GAAIE,GAAO,EACT,KAAOA,GAAO,GAGZA,GADAsc,EAAQC,IADRrc,EAAOugB,GAAevgB,EAAMA,EAAKH,MAAQ,IACZA,MAAOG,EAAKJ,WAGtC,GAAIE,EAAMsc,EACf,KAAOtc,EAAMsc,GACXtc,GAAOsc,EAEPA,EAAQC,IADRrc,EAAOugB,GAAevgB,EAAMA,EAAKH,MAAQ,IACZA,MAAOG,EAAKJ,MAI7C,OADAI,EAAKF,IAAMA,EACJE,ECtBMohB,CAAaphB,EAAMA,EAAKF,IAAM0B,GACvC,QACE,OAAOxB,IAIbihB,EAAA91B,UAAA0W,QAAA,SAAQ7B,EAAeuB,EAAyBC,GAAc,YAAvC,IAAAD,IAAAA,EAAA,UAAyB,IAAAC,IAAAA,EAAA,GAAqBvW,KAAKqW,QAAQtB,EAAMuB,GAASC,IAEjGyf,EAAA91B,UAAA2W,WAAA,SAAW9B,OACHF,EAAMmc,GAAYjc,GAAM+B,SAE9B,OAAe,IAARjC,EAAY,EAAIA,GAGzBmhB,EAAA91B,UAAA6W,cAAA,SAAcC,EAA0BC,GAEf,IAAnBA,IACFA,EAAiB,OAIblC,EAAOiC,GADU,GAAQC,GAAkB,GAG3C5B,EAAS2b,GAAYjc,GAC3BM,EAAOsB,QAAQtB,EAAOG,UAAY,GAAKH,EAAOyB,UAAY,QACpDI,EAAO7B,EAAOM,UACd+I,EAAYsS,GAAY,IAAItc,EAAQK,EAAKJ,KAAM,EAAG,IACxD,OAAO1S,KAAKM,MAAMN,KAAKkV,OAAOD,EAAOwH,EAAU/I,WAAa,OAAY,GAAK,GAG/EqgB,EAAA91B,UAAAkX,SAAA,WAAsB,OAAO8Z,GAAc,IAAIxb,OAE/CsgB,EAAA91B,UAAAmX,QAAA,SAAQtC,GACN,OAAOA,GAAQ1S,EAAU0S,EAAKJ,OAAStS,EAAU0S,EAAKH,QAAUvS,EAAU0S,EAAKF,OAC1EzS,MAAM4uB,GAAYjc,GAAMY,gCAxDhC7R,EAAAA,aA0DDkyB,GAzDwCjgB,ICLlCqgB,GAAiB,KACjBC,GAAgB,GAAKD,GACrBE,GAAyB,GAAKF,GAAiB,IAC/CG,GAAkB,GAAKF,GAAgBC,GACvCE,GAAU,GAAKJ,GAAiB,IAChCK,GAA2B,QAC3B3E,GAAkB,UAExB,SAAST,GAAoB1c,GAC3B,OAAOA,EAAO,GAAM,GAAKA,EAAO,KAAQ,GAAKA,EAAO,KAAQ,EAG9D,SAAS+hB,GAAuB/hB,OAC1BgiB,EAAmB10B,KAAKM,OAAO,IAAMoS,EAAO,KAAO,IACnDiiB,EAA6BD,EAAmBL,GAAyBE,GACzEK,EAA+B,GAAnBF,EAAwB10B,KAAKM,MAAMq0B,EAA6BP,IAC5ES,EAAYF,EAA6BP,GAEzCnd,EAAY2d,EAAY,EAW5B,OATkB,IAAd3d,GAAiC,IAAdA,GAAiC,IAAdA,IAExCA,IADA2d,EACwB,GAER,IAAd3d,GAAmB4d,EAAY,GAAKV,GAAiB,MAAQW,GAAiBpiB,GAChFkiB,GAAa,EACU,IAAd3d,GAAmB4d,EAAY,GAAKV,GAAiB,KAAOW,GAAiBpiB,EAAO,IAC7FkiB,IAEKA,EAGT,SAASG,GAAwBpiB,EAAeD,OAC1C0E,EAAO,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAIxD,OAHIgY,GAAoB1c,IACtB0E,EAAK,KAEAA,EAAKzE,EAAQ,GAGtB,SAASqiB,GAAgBtiB,GACvB,OAAOoiB,GAAiBpiB,GAAQ,GAAK,GAOvC,SAASuiB,GAAoBviB,GAC3B,OAAO+hB,GAAuB/hB,EAAO,GAAK+hB,GAAuB/hB,GAGnE,SAAgBoiB,GAAiBpiB,OAC3BpV,GAAY,GAAPoV,EAAY,IAAM,GAC3B,OAAOpV,IAAOA,EAAI,GAAM,EAAI,IAQ9B,SAAgB43B,GAAqBviB,EAAeD,OAC9CyiB,EAAaV,GAAuB/hB,EAAO,GAAK+hB,GAAuB/hB,GACvE0iB,GAAYD,GAAc,IAAMA,EAAcA,EAAa,IAAO,IAElEE,EADWP,GAAiBpiB,GACH,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACjD,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAO1E,OANI0iB,EAAW,GACbC,EAAY,KAEVD,EAAW,GACbC,EAAY,KAEPA,EAAY1iB,EAAQ,GAG7B,SAAgB2iB,GAAyBxiB,GAEvC,QADIyiB,EAAc,EACTh3B,EAAI,EAAGA,EAAIuU,EAAKH,MAAOpU,IAC9Bg3B,GAAeL,GAAqB32B,EAAGuU,EAAKJ,MAE9C,OAAO6iB,EAAcziB,EAAKF,IA0E5B,SAAgBqc,GAAc2D,GAY5B,QAXM9f,EAAO,IAAIW,KAAKmf,GAChBnD,EAAQ3c,EAAKO,cAAeqc,EAAS5c,EAAKQ,WAAYqc,EAAO7c,EAAKS,UACpEqc,EAAYC,GAAkB,EAAI,KAAOJ,EAAQ,GAAKzvB,KAAKM,OAAOmvB,EAAQ,GAAK,GAC/EzvB,KAAKM,OAAOmvB,EAAQ,GAAK,KAAOzvB,KAAKM,OAAOmvB,EAAQ,GAAK,KACzDzvB,KAAKM,OAAO,KAAOovB,EAAS,GAAK,KAAO,IAAMA,EAAS,GAAK,EAAI,EAAIN,GAAoBK,IAAU,GAAK,GAAKE,GAE5G6F,GADJ5F,EAAY5vB,KAAKM,MAAMsvB,EAAY,KACC,OAChC6F,EAAsBz1B,KAAKM,MAAMk1B,EAAoBpB,GAAgBE,IACrExE,EAAQ9vB,KAAKM,OAA6B,GAAtBm1B,EAA2B,KAAO,KAAO,EAC7DC,EAAqBjB,GAAuB3E,GAC5C6F,EAAYH,EAAoBE,EAC7BC,EAAY,GAGjBA,EAAYH,GADZE,EAAqBjB,KADrB3E,IAMF,QAFIC,EAAS,EACTE,EAAO0F,EACJ1F,EAAOiF,GAAqBnF,EAAQD,IACzCG,GAAQiF,GAAqBnF,EAAQD,GACrCC,IAEF,OAAO,IAAItd,EAAQqd,EAAOC,EAAQE,GAOpC,SAAgBlB,GAAY6G,GAK1B,QAJM9F,EAAQ8F,EAAWljB,KACnBqd,EAAS6F,EAAWjjB,MACpBsd,EAAO2F,EAAWhjB,IACpBwE,EAAOqd,GAAuB3E,GACzBvxB,EAAI,EAAGA,EAAIwxB,EAAQxxB,IAC1B6Y,GAAQ8d,GAAqB32B,EAAGuxB,OAG9B+F,GADJze,GAAQ6Y,GACcuE,GAClBthB,EAAQ2iB,GAAY,EACnB3iB,IACH2iB,GAAYA,GAKd,QAHIpG,EAAQ,KACRC,EAAS,EACTC,EAAO,EACJkG,EAAW,GACZ3iB,EACE2iB,IAAazG,GAAoBK,GAAS,IAAM,MAClDoG,GAAYzG,GAAoBK,GAAS,IAAM,IAC/CA,KACSoG,GAAYd,GAAwBrF,EAAQD,IACrDoG,GAAYd,GAAwBrF,EAAQD,GAC5CC,MAEAC,GAAQkG,EACRA,EAAW,GAGTA,IAAazG,GAAoBK,EAAQ,GAAK,IAAM,MACtDoG,GAAYzG,GAAoBK,EAAQ,GAAK,IAAM,IACnDA,MAEIC,EAAS,EACXA,KAEAA,EAAS,GACTD,KAEEoG,GAAYd,GAAwBrF,EAAQD,GAC9CoG,GAAYd,GAAwBrF,EAAQD,IAE5CE,EAAOoF,GAAwBrF,EAAQD,GAASoG,EAAW,EAC3DA,EAAW,IAKnB,OAAO,IAAIpiB,KAAKgc,EAAOC,EAAS,EAAGC,GAGrC,SAAgBmG,GAAeC,GAC7B,IAAKA,EACH,MAAO,GAoBT,QAlBMC,EAAY,CAAC,GAAI,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,KACjGC,EAAc,CAClB,IAAU,KAAgB,KAAgB,KAAgB,KAAgB,KAAgB,KAC1F,KAAgB,KAAgB,MAE5BC,EAAc,CAAC,GAAI,GAAI,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,IAAU,KAC7FC,EAAgB,CACpB,GAAI,IAAU,IAAU,IAAU,IAAU,KAAgB,KAAgB,KAAgB,KAC5F,OAEIC,EAAkB,CACtB,GAAI,IAAU,IAAU,KAAgB,KAAgB,IAAU,KAAgB,KAClF,MAAsB,OAGpBC,EAAM,EACNC,EAAS,GACTC,EAAO,EACJR,EAAW,GAAG,KACfh3B,EAAIg3B,EAAW,GACnB,GAAa,IAATQ,EACFF,EAAMt3B,OACD,GAAa,IAATw3B,EACC,IAANx3B,EACFu3B,EAAOE,QAAQN,EAAYn3B,GAAIi3B,EAAUK,IAEzCC,EAAOE,QAAQP,EAAYI,QAExB,CAAA,GAAa,IAATE,EAEJ,CACK,IAANx3B,GACFu3B,EAAOE,QAAQJ,EAAgBr3B,GAlBtB,IAkBkC,KAE7C,MALAu3B,EAAOE,QAAQL,EAAcp3B,IAO/Bg3B,EAAW/1B,KAAKM,MAAMy1B,EAAW,IACpB,IAATQ,GAA2B,IAAbR,GAChBO,EAAOE,QAAQR,EAAUj3B,IAE3Bw3B,IAQF,OALsB,KADtBD,EAASA,EAAO3S,KAAK,IAAI9iB,MAAM,KACpBnC,OACT43B,EAAO/2B,KA9BM,KA+BJ+2B,EAAO53B,OAAS,GACzB43B,EAAOjgB,OAAOigB,EAAO53B,OAAS,EAAG,EAhCC,KAkC7B43B,EAAO3S,KAAK,ICpRrB,IAAA8S,GAAA,SAAAvd,GAAA,SAAAud,mDAiEA,OAhEuCziB,EAAAA,EAAAA,GACrCyiB,EAAAx4B,UAAAgW,eAAA,WAAmB,OAAO,GAE1BwiB,EAAAx4B,UAAAiW,UAAA,SAAUxB,GACR,OAAIA,GAAQoiB,GAAiBpiB,GACpB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,IAExC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,KAI/C+jB,EAAAx4B,UAAAkW,iBAAA,WAAqB,OAAO,GAE5BsiB,EAAAx4B,UAAAmX,QAAA,SAAQtC,OACFxV,EAAIwV,GAAQ5S,EAAS4S,EAAKJ,OAASxS,EAAS4S,EAAKH,QAAUzS,EAAS4S,EAAKF,KAG7E,OADAtV,GADAA,EAAIA,GAAKwV,EAAKH,MAAQ,GAAKG,EAAKH,QAAUmiB,GAAiBhiB,EAAKJ,MAAQ,GAAK,MACpEI,EAAKF,IAAM,GAAKE,EAAKF,KAAOsiB,GAAqBpiB,EAAKH,MAAOG,EAAKJ,SAC9DvS,MAAM4uB,GAAYjc,GAAMY,YAGvC+iB,EAAAx4B,UAAAmW,QAAA,SAAQtB,EAAeuB,EAAyBC,GAG9C,YAHqB,IAAAD,IAAAA,EAAA,UAAyB,IAAAC,IAAAA,EAAA,GAC9CxB,EAAO,IAAIL,EAAQK,EAAKJ,KAAMI,EAAKH,MAAOG,EAAKF,KAEvCyB,GACN,IAAK,IAIH,OAHAvB,EAAKJ,MAAQ4B,EACbxB,EAAKH,MAAQ,EACbG,EAAKF,IAAM,EACJE,EACT,IAAK,IAGH,OAFAA,EDwCR,SAA+BA,EAAekW,OACxC9V,EAAQ8V,GAAO,EAInB,IAHK9V,IACH8V,GAAOA,GAEFA,EAAM,GACP9V,EACE8V,EAAMgM,GAAgBliB,EAAKJ,MAAQI,EAAKH,OAC1CqW,GAAOgM,GAAgBliB,EAAKJ,MAAQI,EAAKH,MAAQ,EACjDG,EAAKJ,OACLI,EAAKH,MAAQ,IAEbG,EAAKH,OAASqW,EACdA,EAAM,GAGJA,GAAOlW,EAAKH,OACdG,EAAKJ,OACLsW,GAAOlW,EAAKH,MACZG,EAAKH,MAAQqiB,GAAgBliB,EAAKJ,QAElCI,EAAKH,OAASqW,EACdA,EAAM,GAIZ,OAAOlW,EClEM4jB,CAAe5jB,EAAMwB,IACvB1B,IAAM,EACJE,EACT,IAAK,IACH,ODiER,SAA6BA,EAAekW,OACtC9V,EAAQ8V,GAAO,EAInB,IAHK9V,IACH8V,GAAOA,GAEFA,EAAM,GACP9V,EACE8V,EAAMiM,GAAoBniB,EAAKJ,MAAQ4iB,GAAyBxiB,IAClEkW,GAAOiM,GAAoBniB,EAAKJ,MAAQ4iB,GAAyBxiB,GAAQ,EACzEA,EAAKJ,OACLI,EAAKH,MAAQ,EACbG,EAAKF,IAAM,GACFoW,EAAMkM,GAAqBpiB,EAAKH,MAAOG,EAAKJ,MAAQI,EAAKF,KAClEoW,GAAOkM,GAAqBpiB,EAAKH,MAAOG,EAAKJ,MAAQI,EAAKF,IAAM,EAChEE,EAAKH,QACLG,EAAKF,IAAM,IAEXE,EAAKF,KAAOoW,EACZA,EAAM,GAGJA,GAAOlW,EAAKF,KACdoW,GAAOlW,EAAKF,IACZE,EAAKH,QACc,IAAfG,EAAKH,QACPG,EAAKJ,OACLI,EAAKH,MAAQqiB,GAAgBliB,EAAKJ,OAEpCI,EAAKF,IAAMsiB,GAAqBpiB,EAAKH,MAAOG,EAAKJ,QAEjDI,EAAKF,KAAOoW,EACZA,EAAM,GAIZ,OAAOlW,ECpGM6jB,CAAa7jB,EAAMwB,GAC5B,QACE,OAAOxB,IAIb2jB,EAAAx4B,UAAA0W,QAAA,SAAQ7B,EAAeuB,EAAyBC,GAAc,YAAvC,IAAAD,IAAAA,EAAA,UAAyB,IAAAC,IAAAA,EAAA,GAAqBvW,KAAKqW,QAAQtB,EAAMuB,GAASC,IAEjGmiB,EAAAx4B,UAAA2W,WAAA,SAAW9B,OACHF,EAAMmc,GAAYjc,GAAM+B,SAE9B,OAAe,IAARjC,EAAY,EAAIA,GAGzB6jB,EAAAx4B,UAAA6W,cAAA,SAAcC,EAA0BC,OAChClC,EAAOiC,EAAKA,EAAKrW,OAAS,GAChC,OAAOsB,KAAKgwB,KAAKsF,GAAyBxiB,GAAQ,IAGpD2jB,EAAAx4B,UAAAkX,SAAA,WAAsB,OAAO8Z,GAAc,IAAIxb,OAK/CgjB,EAAAx4B,UAAA8wB,YAAA,SAAYjc,GAA0B,OAAOK,EAAW4b,GAAYjc,KAKpE2jB,EAAAx4B,UAAAgxB,cAAA,SAAcnc,GAA0B,OAAOmc,GAAczb,EAASV,yBAhEvEjR,EAAAA,aAiED40B,EAjEA,CACuC3iB,ICZjC8iB,GAAW,CAAC,MAAO,QAAS,QAAS,QAAS,OAAQ,MAAO,SAC7DC,GAAS,CAAC,OAAQ,OAAQ,OAAQ,MAAO,MAAO,MAAO,OAAQ,OAAQ,OAAQ,OAAQ,KAAM,QAC7FC,GACF,CAAC,OAAQ,OAAQ,OAAQ,MAAO,MAAO,SAAU,SAAU,OAAQ,OAAQ,OAAQ,OAAQ,KAAM,QAKrGC,GAAA,SAAA7d,GAAA,SAAA6d,mDAmBA,OAlB6C/iB,EAAAA,EAAAA,GAC3C+iB,EAAA94B,UAAAic,kBAAA,SAAkBvH,EAAeD,GAAyB,OAAO3U,KAAKoc,iBAAiBxH,EAAOD,IAE9FqkB,EAAA94B,UAAAkc,iBAAA,SAAiBxH,EAAeD,GAC9B,OAAOoiB,GAAiBpiB,GAAQokB,GAAYnkB,EAAQ,GAAKkkB,GAAOlkB,EAAQ,IAG1EokB,EAAA94B,UAAA+b,oBAAA,SAAoBC,GAA2B,OAAO2c,GAAS3c,EAAU,IAEzE8c,EAAA94B,UAAAuZ,gBAAA,SAAgB1E,GACd,OAAUgjB,GAAehjB,EAAKF,KAAI,IAAI7U,KAAKoc,iBAAiBrH,EAAKH,MAAOG,EAAKJ,MAAK,IAAIojB,GAAehjB,EAAKJ,OAG5GqkB,EAAA94B,UAAA0a,eAAA,SAAe7F,GAA+B,OAAOgjB,GAAehjB,EAAKF,MAEzEmkB,EAAA94B,UAAA2a,gBAAA,SAAgBC,GAA8B,OAAOid,GAAejd,IAEpEke,EAAA94B,UAAA6a,gBAAA,SAAgBpG,GAAwB,OAAOojB,GAAepjB,wBAlB/D7Q,EAAAA,aAmBDk1B,EAnBA,CAC6Cre,ICN7Cse,GAAA,SAAA9d,GAAA,SAAA8d,mDA2BA,OA1B0ChjB,EAAAA,EAAAA,GAIxCgjB,EAAA/4B,UAAAghB,UAAA,SAAUnM,GACR,OAAQA,aAAgBW,OAAStT,MAAM2S,EAAKY,WAAc3V,KAAKk5B,gBAAgBnkB,GAAQ,MAMzFkkB,EAAA/4B,UAAAihB,QAAA,SAAQpM,GACN,OAAOA,GAAQ1S,EAAU0S,EAAKJ,OAAStS,EAAU0S,EAAKH,QAAUvS,EAAU0S,EAAKF,KAAO7U,KAAKm5B,cAAcpkB,GACnB,MAG9EkkB,EAAA/4B,UAAAg5B,gBAAV,SAA0BnkB,GACxB,MAAO,CAACJ,KAAMI,EAAKO,cAAeV,MAAOG,EAAKQ,WAAa,EAAGV,IAAKE,EAAKS,YAGhEyjB,EAAA/4B,UAAAi5B,cAAV,SAAwBpkB,OAChBM,EAAS,IAAIK,KAAKX,EAAKJ,KAAMI,EAAKH,MAAQ,EAAGG,EAAKF,IAAK,IAG7D,OADAQ,EAAOO,YAAYb,EAAKJ,MACjBU,uBAzBVvR,EAAAA,aA2BDm1B,EA3BA,CAC0ChY,ICD1CmY,GAAA,SAAAje,GAAA,SAAAie,mDAYA,OAX6CnjB,EAAAA,EAAAA,GACjCmjB,EAAAl5B,UAAAg5B,gBAAV,SAA0BnkB,GACxB,MAAO,CAACJ,KAAMI,EAAKskB,iBAAkBzkB,MAAOG,EAAKukB,cAAgB,EAAGzkB,IAAKE,EAAKwkB,eAGtEH,EAAAl5B,UAAAi5B,cAAV,SAAwBpkB,OAChBM,EAAS,IAAIK,KAAKA,KAAKke,IAAI7e,EAAKJ,KAAMI,EAAKH,MAAQ,EAAGG,EAAKF,MAGjE,OADAQ,EAAOmkB,eAAezkB,EAAKJ,MACpBU,uBAVVvR,EAAAA,aAYDs1B,EAZA,CAC6CH,ICV7CQ,GAAA,WAiCA,SAAAA,KAUA,2BAVC3wB,EAAAA,SAAQ/E,KAAA,CAAC,CACRgF,aAAc,CACZsY,GAAeyC,GAAwBE,GAAyBmM,GAA+BN,GAC/F1D,IAEFnjB,QAAS,CAACqY,GAAe8K,IACzBljB,QAAS,CAACC,EAAAA,aAAcwwB,EAAAA,aACxB/uB,gBAAiB,CAAC0W,QAGpBoY,EA3CA,GCSAE,GAAA,WAAA,SAAAA,IAEE35B,KAAAisB,WAA4C,EAC5CjsB,KAAA0oB,UAA4B,CAAC,cAAe,eAAgB,WAAY,wCAHzE5kB,EAAAA,WAAUC,KAAA,CAAC,CAACC,WAAY,kHAAzB,iBCoBA,SAAA41B,KAEA,2BAFCx1B,EAAAA,UAASL,KAAA,CAAC,CAACM,SAAU,cAEtBu1B,KAQAC,GAAA,WAWE,SAAAA,EAAmBC,GAAA95B,KAAA85B,WAAAA,EATX95B,KAAA0N,WAAY,EAUtB,OARElO,OAAA2I,eACI0xB,EAAA35B,UAAA,WAAQ,KAIZ,WAA0B,OAAOF,KAAK0N,eALtC,SACajM,GACXzB,KAAK0N,UAA2B,KAAf,IAA+B,IAAVjM,uDANzC2C,EAAAA,UAASL,KAAA,CAAC,CAACM,SAAU,oBAAqBsD,KAAM,CAACC,MAAS,gBAAiBmD,mBAAoB,yDAlC9FN,EAAAA,gDAsCCpF,EAAAA,SAQHw0B,EAZA,GAiBAE,GAAA,WAoBE,SAAAA,EAA0DC,GAAAh6B,KAAAg6B,SAAAA,EAL1Dh6B,KAAA0oB,UAAuB,SACvB1oB,KAAA4E,QAAS,EAKX,2BArBCR,EAAAA,UAASL,KAAA,CAAC,CACTM,SAAU,oBACVsD,KAAM,CACJsyB,wBAAyB,OACzBzlB,eAAgB,oBAChB0lB,qBAAsB,YACtBC,oBAAqB,6BACrBC,sBAAuB,6BACvBC,iBAAkB,6BAClBC,gBAAiB,6BACjBC,kBAAmB,6BACnBC,kBAAmB,oGASR5mB,EAAAA,OAAM7P,KAAA,CAACsH,EAAAA,WAAU,WAAO,OAAAovB,8CAFpCn1B,EAAAA,gBAAevB,KAAA,CAAC81B,OAGnBE,EArBA,GAgCAW,GAAA,WAOE,SAAAA,EAA0DV,EAAkBvY,GAAlBzhB,KAAAg6B,SAAAA,EAAkBh6B,KAAAyhB,YAAAA,EAC1EzhB,KAAK26B,SAAWlZ,EAAY1X,cAIhC,OADE2wB,EAAAx6B,UAAA06B,iBAAA,WAAqB,OAAO56B,KAAKyhB,YAAY1X,mCAX9C3F,EAAAA,UAASL,KAAA,CAAC,CACTM,SAAU,sBACVsD,KAAM,CAACC,MAAS,kBAAmBizB,gBAAiB,OAAQvyB,uBAAwB,2FAKvEsL,EAAAA,OAAM7P,KAAA,CAACsH,EAAAA,WAAU,WAAO,OAAAovB,eA1FrChwB,EAAAA,cA+FFiwB,EAZA,GAmBAI,GAAA,SAAA3f,GAeE,SAAA2f,EAAmDd,EAAUF,UAC3D3e,EAAAva,KAAAZ,KAAMg6B,EAAUF,IAAW95B,KAE/B,OAJuCiW,EAAAA,EAAAA,uBAdtC7R,EAAAA,UAASL,KAAA,CAAC,CACTM,SAAU,sBACVsD,KAAM,CACJC,MAAS,kBACTizB,gBAAiB,OACjBvyB,uBAAwB,oBACxBE,UAAW,oBACX2xB,oBAAqB,6BACrBC,sBAAuB,6BACvBC,iBAAkB,6BAClBC,gBAAiB,8BAEnBptB,UAAW,CAAC,CAAChC,QAASwvB,GAAmBtvB,YAAaC,EAAAA,WAAU,WAAO,OAAAyvB,4EAG1DlnB,EAAAA,OAAM7P,KAAA,CAACsH,EAAAA,WAAU,WAAO,OAAAovB,eArHrChwB,EAAAA,cAwHFqwB,EAlBA,CAcuCJ,IASvCD,GAAA,WAmEE,SAAAA,EACY7N,EAAoCnnB,EAAqDknB,EACzFjd,EAAyB+R,EAA8CnY,EACnEyxB,GAHhB,IAAAz0B,EAAAtG,KACYA,KAAA4sB,gBAAAA,EAAyF5sB,KAAA2sB,UAAAA,EACzF3sB,KAAA0P,QAAAA,EAAyB1P,KAAAyhB,YAAAA,EAA8CzhB,KAAAsJ,UAAAA,EAnE3EtJ,KAAAg7B,SAAW,IAAInrB,EAAAA,QAqBR7P,KAAAi7B,OAAQ,EA0Cbj7B,KAAAk7B,WAAa,IAAIr1B,EAAAA,aAMzB7F,KAAK0oB,UAAYjjB,EAAOijB,UACxB1oB,KAAK4uB,UAAYnpB,EAAOmpB,UACxB5uB,KAAKisB,UAAYxmB,EAAOwmB,UAExBjsB,KAAKm7B,QAAUJ,EAAY,SAAW,UAEtC/6B,KAAKmtB,kBAAoBzd,EAAQ8S,SAASvQ,UAAS,WAAS3L,EAAK80B,kBA0OrE,OAvOEX,EAAAv6B,UAAAqQ,mBAAA,WAAA,IAAAjK,EAAAtG,KACEA,KAAK0P,QAAQ8S,SAAS5R,KAAK8R,EAAAA,KAAK,IAAIzQ,UAAS,WAC3C3L,EAAK+0B,yBACD/0B,EAAK20B,OACP30B,EAAKg1B,uBAKXb,EAAAv6B,UAAAwJ,YAAA,SAAYC,GACNA,EAAQilB,WAAa5uB,KAAKi7B,OAC5Bj7B,KAAKu7B,gBAAgBv7B,KAAK4uB,WAGxBjlB,EAAQ+e,YAAc/e,EAAQ+e,UAAU8S,eAC1Cx7B,KAAKq7B,0BAOTZ,EAAAv6B,UAAA0E,OAAA,WAAoB,OAAO5E,KAAKi7B,OAKhCR,EAAAv6B,UAAAie,KAAA,WACOne,KAAKi7B,QACRj7B,KAAKi7B,OAAQ,EACbj7B,KAAKu7B,gBAAgBv7B,KAAK4uB,WAC1B5uB,KAAKk7B,WAAWj0B,MAAK,GACrBjH,KAAKs7B,sBAIDb,EAAAv6B,UAAAo7B,kBAAR,WAAA,IAAAh1B,EAAAtG,KACQy7B,EAASz7B,KAAK07B,QACpB7W,GACI7kB,KAAK0P,QAAS1P,KAAK2sB,UAAW3sB,KAAKisB,UAAS,WAAQ,OAAA3lB,EAAKkD,SAASxJ,KAAKg7B,SACvEh7B,KAAK27B,MAAQ,CAAC37B,KAAK47B,aAAa7xB,eAAiB,GAAI0xB,EAAS,CAACA,EAAOb,oBAAsB,GAC5F,qCAMNH,EAAAv6B,UAAAsJ,MAAA,WACMxJ,KAAKi7B,QACPj7B,KAAKi7B,OAAQ,EACbj7B,KAAK67B,kBACL77B,KAAKg7B,SAAS15B,OACdtB,KAAKk7B,WAAWj0B,MAAK,GACrBjH,KAAK4sB,gBAAgB/f,iBAOzB4tB,EAAAv6B,UAAA0G,OAAA,WACM5G,KAAK4E,SACP5E,KAAKwJ,QAELxJ,KAAKme,QAITsc,EAAAv6B,UAAAyO,YAAA,WACE3O,KAAK67B,kBAEL77B,KAAKg7B,SAAS15B,OACdtB,KAAKmtB,kBAAkBgC,eAGzBsL,EAAAv6B,UAAAsjB,UAAA,SAAUrD,GAAV,IAAA7Z,EAAAtG,KAEQ0d,EAAMyC,EAAME,MACZyb,EAAe97B,KAAK+7B,mBAEtB5U,GAAY,EACZ6U,GAAmB,EACnBC,EAA2B,KACzBC,EAAoBl8B,KAAKm8B,mBAAmBhc,GAelD,IAbK+b,GAAqBJ,EAAan7B,QACrCm7B,EAAat1B,QAAO,SAAE8d,EAAM3I,GACtB2I,EAAK9gB,SAAS2c,EAAY,UAC5B6b,GAAmB,EACnBC,EAAc3X,GAEZA,IAAShe,EAAKqmB,UAAUmC,gBAC1B3H,EAAWxL,KAMb+B,IAAQ4C,GAAId,OAAS9B,IAAQ4C,GAAIhB,OAWrC,GAAI4c,GAAqBF,EAAkB,CAGzC,GAFAh8B,KAAKme,OAED2d,EAAan7B,OAAQ,CACvB,OAAQ+c,GACN,KAAK4C,GAAIN,UACPmH,EAAWllB,KAAKD,IAAImlB,EAAW,EAAG2U,EAAan7B,OAAS,GACxD,MACF,KAAK2f,GAAIR,QACP,GAAI9f,KAAKo8B,cAA6B,IAAdjV,EAAiB,CACvCA,EAAW2U,EAAan7B,OAAS,EACjC,MAEFwmB,EAAWllB,KAAKF,IAAIolB,EAAW,EAAG,GAClC,MACF,KAAK7G,GAAIV,KACPuH,EAAW,EACX,MACF,KAAK7G,GAAIX,IACPwH,EAAW2U,EAAan7B,OAAS,EAGrCm7B,EAAa3U,GAAUpJ,QAEzBoC,EAAMjZ,uBAlCF80B,IAAwC,IAAnBh8B,KAAKisB,WAAyC,WAAnBjsB,KAAKisB,WAIvDjJ,EAAAA,UAAUiZ,EAAa,SAASrrB,KAAK8R,EAAAA,KAAK,IAAIzQ,UAAS,WAAO,OAAA3L,EAAKkD,WAkCjEixB,EAAAv6B,UAAAk8B,UAAR,WAA+B,OAAOp8B,KAAKyhB,YAAY1X,cAAcwgB,UAAU/mB,SAAS,WAEhFi3B,EAAAv6B,UAAAi8B,mBAAR,SAA2Bhc,GACzB,OAAOngB,KAAK07B,QAAQd,mBAAmBp3B,SAAS2c,EAAY,SAGtDsa,EAAAv6B,UAAA67B,iBAAR,eACQM,EAAOr8B,KAAK27B,MAClB,OAAY,MAARU,EACK,GAEFA,EAAKC,UAAUl1B,OAAM,SAACkd,GAAQ,OAACA,EAAK5f,WAAU2C,IAAG,SAACid,GAAQ,OAAAA,EAAKwV,WAAW/vB,iBAG3E0wB,EAAAv6B,UAAAk7B,cAAR,eACQiB,EAAOr8B,KAAK27B,MACd37B,KAAK4E,UAAYy3B,GACnBr8B,KAAKq7B,uBACgB,YAAjBr7B,KAAKm7B,QACD5S,GACIvoB,KAAK07B,QAAQf,SAAU36B,KAAKu8B,gBAAkBv8B,KAAK47B,aAAa7xB,cAAe/J,KAAK0oB,UACjE,SAAnB1oB,KAAK4uB,WACT5uB,KAAKw8B,mBAAmBx8B,KAAK0oB,aAIjC+R,EAAAv6B,UAAAs8B,mBAAR,SAA2B9T,GACzB,OAAO/oB,MAAM0qB,QAAQ3B,GAAaA,EAAU,GAAKA,EAAU5lB,MAAM,KAAK,IAGhE23B,EAAAv6B,UAAA27B,gBAAR,eACQY,EAAWz8B,KAAKsJ,UAChBozB,EAAc18B,KAAK47B,aACzB,GAAIc,EAAa,KACTC,EAAkB38B,KAAKyhB,YAAY1X,cACnC6yB,EAAsBF,EAAY3yB,cAExC0yB,EAAS5N,YAAY8N,EAAiBC,GACtCH,EAASI,YAAYD,EAAqB,YAC1CH,EAASI,YAAYD,EAAqB,aAExC58B,KAAKu8B,iBACPE,EAASK,YAAY98B,KAAK2sB,UAAUqC,KAAMhvB,KAAKu8B,gBAC/Cv8B,KAAKu8B,eAAiB,OAIlB9B,EAAAv6B,UAAAq7B,gBAAR,SAAwB3M,GAEtB,QAFsB,IAAAA,IAAAA,EAAA,MACtB5uB,KAAK67B,kBACa,SAAdjN,EAAsB,KAClB6N,EAAWz8B,KAAKsJ,UAChBszB,EAAsB58B,KAAK47B,aAAa7xB,cACxCgzB,EAAgB/8B,KAAKu8B,eAAiBv8B,KAAKu8B,gBAAkBE,EAASO,cAAc,OAG1FP,EAASQ,SAASF,EAAe,WAAY,YAC7CN,EAASQ,SAASL,EAAqB,WAAY,UACnDH,EAASQ,SAASF,EAAe,UAAW,QAE5CN,EAAS5N,YAAYkO,EAAeH,GACpCH,EAAS5N,YAAY7uB,KAAK2sB,UAAUqC,KAAM+N,KAItCtC,EAAAv6B,UAAAm7B,uBAAR,SAA+B3S,OACvB2T,EAAOr8B,KAAK27B,MAClB,GAAIU,EAAM,CACH3T,IACHA,EAAY1oB,KAAKw8B,mBAAmBx8B,KAAK0oB,gBAGrC+T,EAAWz8B,KAAKsJ,UAChBqzB,EAAkB38B,KAAKyhB,YAAY1X,cAGzC0yB,EAAS3yB,YAAY6yB,EAAiB,UACtCF,EAAS3yB,YAAY6yB,EAAiB,YACtCN,EAAK3T,UAA6B,WAAjB1oB,KAAKm7B,QAAuB,KAAOzS,MAM9CwU,GAA8C,IAA9BxU,EAAUwC,OAAO,QAAiB,SAAW,WACnEuR,EAASxyB,SAAS0yB,EAAiBO,OAE7BH,EAAgB/8B,KAAKu8B,eACvBQ,IACFN,EAAS3yB,YAAYizB,EAAe,UACpCN,EAAS3yB,YAAYizB,EAAe,YACpCN,EAASxyB,SAAS8yB,EAAeG,0BAnTxC94B,EAAAA,UAASL,KAAA,CAAC,CAACM,SAAU,gBAAiBkD,SAAU,cAAeI,KAAM,CAAC6M,eAAgB,yDAjIrFrH,EAAAA,yBA0BMwsB,mCA2KsE/lB,EAAAA,OAAM7P,KAAA,CAAC6rB,EAAAA,mBA5LnF9b,EAAAA,cALArJ,EAAAA,kBAUAD,EAAAA,iBAyL2BovB,GAASnxB,WAAA,CAAA,CAAA3C,KAA/B4C,EAAAA,6CAhEJy0B,EAAAA,aAAYp5B,KAAA,CAACg2B,GAAiB,CAAClW,QAAQ,0BACvCsZ,EAAAA,aAAYp5B,KAAA,CAACg2B,GAAiB,CAACpJ,KAAMlmB,EAAAA,WAAYoZ,QAAQ,qBACzDsZ,EAAAA,aAAYp5B,KAAA,CAAC22B,GAAmB,CAAC7W,QAAQ,uBAUzCxe,EAAAA,qBAKAA,EAAAA,MAAKtB,KAAA,CAAC,2BAeNsB,EAAAA,yBAQAA,EAAAA,uBAUAA,EAAAA,0BASA2C,EAAAA,UAsPHyyB,EAvTA,GC9GM2C,GACF,CAAC3C,GAAaC,GAAmBI,GAAmBf,GAAiBF,GAAiBD,IAE1FyD,GAAA,WAAA,SAAAA,KAEA,2BAFCv0B,EAAAA,SAAQ/E,KAAA,CAAC,CAACgF,aAAcq0B,GAAyBp0B,QAASo0B,OAE3DC,EAFA,GCwEAC,GAAA,WAAA,SAAAA,IAGEt9B,KAAAu9B,UAA+B,EAK/Bv9B,KAAAkP,UAAW,6BARZpL,EAAAA,WAAUC,KAAA,CAAC,CAACC,WAAY,kHAAzB,GC/FAw5B,GAYE,SAAmBC,EAAqBC,EAA0BC,GAA/C39B,KAAAy9B,MAAAA,EAAqBz9B,KAAA09B,QAAAA,EAA0B19B,KAAA29B,aAAAA,iBAOlE,SAAAC,EACYC,EAAoBC,EAA6BC,EACjDz0B,EAA8B00B,EAC9BC,GAFAj+B,KAAA69B,MAAAA,EAAoB79B,KAAA89B,UAAAA,EAA6B99B,KAAA+9B,kBAAAA,EACjD/9B,KAAAsJ,UAAAA,EAA8BtJ,KAAAg+B,0BAAAA,EAC9Bh+B,KAAAi+B,gBAAAA,EAqCd,OAnCEL,EAAA19B,UAAAie,KAAA,SAAK+f,EAAqCpkB,GAQxC,OAPK9Z,KAAKm+B,aACRn+B,KAAKo+B,YAAcp+B,KAAKq+B,eAAeH,EAASpkB,GAChD9Z,KAAKm+B,WAAan+B,KAAK+9B,kBAAkB1P,gBACrCruB,KAAKg+B,0BAA0B5P,wBAA2BpuB,KAAK69B,OAAQ,EAAG79B,KAAK89B,UAC/E99B,KAAKo+B,YAAYX,QAGhBz9B,KAAKm+B,YAGdP,EAAA19B,UAAAsJ,MAAA,WACMxJ,KAAKm+B,aACPn+B,KAAK+9B,kBAAkBhT,OAAO/qB,KAAK+9B,kBAAkBh7B,QAAQ/C,KAAKm+B,WAAWpP,WAC7E/uB,KAAKm+B,WAAa,KAEdn+B,KAAKo+B,YAAYV,UACnB19B,KAAKi+B,gBAAgBK,WAAWt+B,KAAKo+B,YAAYV,SACjD19B,KAAKo+B,YAAYV,QAAQa,UACzBv+B,KAAKo+B,YAAc,QAKjBR,EAAA19B,UAAAm+B,eAAR,SAAuBH,EAAoCpkB,GACzD,GAAKokB,EAEE,CAAA,GAAIA,aAAmB55B,EAAAA,YAAa,KACnCo5B,EAAUQ,EAAQM,mBAAmB1kB,GAE3C,OADA9Z,KAAKi+B,gBAAgBQ,WAAWf,GACzB,IAAIF,GAAW,CAACE,EAAQgB,WAAYhB,GAE3C,OAAO,IAAIF,GAAW,CAAC,CAACx9B,KAAKsJ,UAAUq1B,WAAW,GAAGT,MANrD,OAAO,IAAIV,GAAW,KAS5BI,KCvDMgB,GAAI,aAeVC,GAAA,WAEE,SAAAA,EAAsClS,GAAA3sB,KAAA2sB,UAAAA,SAYtCkS,EAAA3+B,UAAA4+B,WAAA,eACQxX,EAAQtnB,KAAK++B,YACnB,OAAQ/+B,KAAKg/B,WAAW1X,GAAgBtnB,KAAKi/B,YAAY3X,GAAxBsX,IAQ3BC,EAAA3+B,UAAA++B,YAAR,SAAoBC,OACZlQ,EAAOhvB,KAAK2sB,UAAUqC,KACtBmQ,EAAsBnQ,EAAKzF,MAAM6V,aACjCC,EAAgBpW,WAAWrC,OAAOC,iBAAiBmI,GAAM,kBAE/D,OADAA,EAAKzF,MAAM,iBAAsB8V,EAAgBH,EAAc,KAC/D,WAAa,OAAAlQ,EAAKzF,MAAM,iBAAmB4V,IAQrCN,EAAA3+B,UAAA8+B,WAAR,SAAmBE,OACXI,EAAOt/B,KAAK2sB,UAAUqC,KAAKpH,wBAGjC,OAF0BhB,OAAOmD,YAAcuV,EAAK5X,KAAO4X,EAAK3X,QAEpCuX,EADR,GAAMA,GASpBL,EAAA3+B,UAAA6+B,UAAR,eACQQ,EAAWv/B,KAAK2sB,UAAUqQ,cAAc,OAC9CuC,EAAS18B,UAAY,8BAEfmsB,EAAOhvB,KAAK2sB,UAAUqC,KAC5BA,EAAKH,YAAY0Q,OACXjY,EAAQiY,EAAS3X,wBAAwBN,MAAQiY,EAASvV,YAGhE,OAFAgF,EAAK8N,YAAYyC,GAEVjY,uBA1DVxjB,EAAAA,WAAUC,KAAA,CAAC,CAACC,WAAY,6EAEV4P,EAAAA,OAAM7P,KAAA,CAAC6rB,EAAAA,8IAFtB,GCnBA4P,GAAA,WAEA,SAAAA,KASA,2BATCl4B,EAAAA,UAASvD,KAAA,CAAC,CACTM,SAAU,qBACVmD,cAAeC,EAAAA,kBAAkBC,KACjCK,SAAU,GACVJ,KACI,CAAC83B,UAAW,0EAA2ElW,MAAS,4DAGnGlkB,EAAAA,SACHm6B,EAXA,iBCaA,SAAAE,KAcA,OAREA,EAAAx/B,UAAAsJ,MAAA,SAAM+uB,KAONmH,EAAAx/B,UAAAy/B,QAAA,SAAQC,KACVF,mBAyBE,SAAAG,EACYC,EAAsD1B,EACtD2B,EAA2DC,GAFvE,IAAA15B,EAAAtG,KACYA,KAAA8/B,eAAAA,EAAsD9/B,KAAAo+B,YAAAA,EACtDp+B,KAAA+/B,iBAAAA,EAA2D//B,KAAAggC,eAAAA,EACrEF,EAAezS,SAAS4S,aAAahuB,UAAS,SAAE2tB,GAAkBt5B,EAAKq5B,QAAQC,KAE/E5/B,KAAKu4B,OAAS,IAAI2H,QAAO,SAAEC,EAASC,GAClC95B,EAAK+5B,SAAWF,EAChB75B,EAAKg6B,QAAUF,IAEjBpgC,KAAKu4B,OAAOgI,KAAK,KAAI,cAiEzB,OArFE/gC,OAAA2I,eAAI03B,EAAA3/B,UAAA,oBAAiB,KAArB,WACE,GAAIF,KAAKo+B,aAAep+B,KAAKo+B,YAAYT,aACvC,OAAO39B,KAAKo+B,YAAYT,aAAatQ,0CA0BzCwS,EAAA3/B,UAAAsJ,MAAA,SAAM+uB,GACAv4B,KAAK8/B,iBACP9/B,KAAKqgC,SAAS9H,GACdv4B,KAAKwgC,yBAIDX,EAAA3/B,UAAAugC,SAAR,SAAiBb,GACf5/B,KAAKsgC,QAAQV,GACb5/B,KAAKwgC,wBAQPX,EAAA3/B,UAAAy/B,QAAA,SAAQC,GAAR,IAAAt5B,EAAAtG,KACE,GAAIA,KAAK8/B,eACP,GAAK9/B,KAAKggC,eAEH,KACCL,EAAU3/B,KAAKggC,iBACjBL,GAAWA,EAAQY,KACrBZ,EAAQY,KAAI,SACRhI,IACiB,IAAXA,GACFjyB,EAAKm6B,SAASb,IAEjB,eAEgB,IAAZD,GACT3/B,KAAKygC,SAASb,QAZhB5/B,KAAKygC,SAASb,IAkBZC,EAAA3/B,UAAAsgC,qBAAR,eACQE,EAAiB1gC,KAAK8/B,eAAevR,SAASxkB,cAIpD,GAHA22B,EAAeh9B,WAAWo5B,YAAY4D,GACtC1gC,KAAK8/B,eAAevB,UAEhBv+B,KAAK+/B,iBAAkB,KACnBY,EAAmB3gC,KAAK+/B,iBAAiBxR,SAASxkB,cACxD42B,EAAiBj9B,WAAWo5B,YAAY6D,GACxC3gC,KAAK+/B,iBAAiBxB,UAGpBv+B,KAAKo+B,aAAep+B,KAAKo+B,YAAYV,SACvC19B,KAAKo+B,YAAYV,QAAQa,UAG3Bv+B,KAAK8/B,eAAiB,KACtB9/B,KAAK+/B,iBAAmB,KACxB//B,KAAKo+B,YAAc,MAEvByB,SC7HEe,eAAA,EACAC,IAAA,2DCFF,IAAAC,GAAA,WAyDE,SAAAA,EAC8BnU,EAAwBJ,EAAyCwU,GAAjE/gC,KAAA2sB,UAAAA,EAAwB3sB,KAAAusB,OAAAA,EAAyCvsB,KAAA+gC,MAAAA,EAhBvF/gC,KAAAg7B,SAAW,IAAInrB,EAAAA,QAMd7P,KAAAu9B,UAA6B,EAE7Bv9B,KAAAkP,UAAW,EAKDlP,KAAAigC,aAAe,IAAIp6B,EAAAA,aAwExC,OAnEEi7B,EAAA5gC,UAAAy/B,QAAA,SAAQC,GAAgB5/B,KAAKigC,aAAah5B,KAAK24B,IAE/CkB,EAAA5gC,UAAAiK,SAAA,WAAanK,KAAK8sB,aAAe9sB,KAAK2sB,UAAUmC,eAEhDgS,EAAA5gC,UAAA4iB,gBAAA,WAAA,IAAAxc,EAAAtG,KACS+J,EAAA/J,KAAAusB,OAAAxiB,cAoCP,GAnCA/J,KAAK+gC,MAAMtwB,kBAAiB,WAE1BuS,EAAAA,UAAyBjZ,EAAe,WACnC6G,KACGoB,EAAAA,UAAU1L,EAAK00B,UAEf5zB,EAAAA,OAAM,SAAChG,GAAK,OAAAA,EAAEif,QAAUC,GAAIf,QAAUjZ,EAAK4I,YAC9C+C,UAAS,SAACkO,GAAS,OAAA6gB,sBAAqB,WACvB7gB,EAAM8gB,kBACT36B,EAAKy6B,MAAM7uB,IAAG,WAAO,OAAA5L,EAAKq5B,QAAQuB,GAAoBL,eAMrEM,GAAe,EACnBne,EAAAA,UAAsB1c,EAAK86B,UAAUr3B,cAAe,aAC/C6G,KACGoB,EAAAA,UAAU1L,EAAK00B,UAAW5V,EAAAA,IAAG,WAAO,OAAA+b,GAAe,IACnDtvB,EAAAA,UAAS,WAAO,OAAAmR,EAAAA,UAAsBjZ,EAAe,WAAW6G,KAAKoB,EAAAA,UAAU1L,EAAK00B,UAAWtY,EAAAA,KAAK,MACpGtb,EAAAA,OAAM,SAAE8J,OAAC9E,EAAA8E,EAAA9E,OAAY,OAAArC,IAAkBqC,KAC1C6F,UAAS,WAASkvB,GAAe,IAMtCne,EAAAA,UAAsBjZ,EAAe,SAAS6G,KAAKoB,EAAAA,UAAU1L,EAAK00B,WAAW/oB,UAAS,SAAEf,OAAC9E,EAAA8E,EAAA9E,QACjE,IAAlB9F,EAAKi3B,UAAqBxzB,IAAkBqC,GAAW+0B,GACzD76B,EAAKy6B,MAAM7uB,IAAG,WAAO,OAAA5L,EAAKq5B,QAAQuB,GAAoBN,kBAExDO,GAAe,OAIdp3B,EAAcvG,SAASF,SAASwrB,eAAgB,KAC7CuS,EAAgBt3B,EAAc6Y,cAAc,kBAC5C0e,EAAiBzb,GAA6B9b,GAAe,IAE5Cs3B,GAAiBC,GAAkBv3B,GAC3CgU,UAInB+iB,EAAA5gC,UAAAyO,YAAA,WAAA,IAIMgU,EAJNrc,EAAAtG,KACQgvB,EAAOhvB,KAAK2sB,UAAUqC,KACtBuS,EAAcvhC,KAAK8sB,aAIvBnK,EADE4e,GAAeA,EAAmB,OAAKvS,EAAKxrB,SAAS+9B,GACtCA,EAEAvS,EAEnBhvB,KAAK+gC,MAAMtwB,kBAAiB,WAC1BmU,WAAU,WAAO,OAAAjC,EAAe5E,UAChCzX,EAAKwmB,aAAe,OAGtB9sB,KAAKg7B,SAAS15B,4BAvGjBgG,EAAAA,UAASvD,KAAA,CAAC,CACTM,SAAU,mBACVsD,KAAM,CACJ83B,UAAW,qEACX53B,KAAQ,SACRuS,SAAY,KACZonB,oBAAqB,OACrBC,yBAA0B,kBAE5B15B,SAAU,gSAMVP,cAAeC,EAAAA,kBAAkBC,oOAqB5BkM,EAAAA,OAAM7P,KAAA,CAAC6rB,EAAAA,mBAtDZnlB,EAAAA,kBAIAqJ,EAAAA,6CAqCC8P,EAAAA,UAAS7f,KAAA,CAAC,SAAU,CAAC8f,QAAQ,4BAE7Bxe,EAAAA,wBACAA,EAAAA,wBACAA,EAAAA,wBACAA,EAAAA,0BACAA,EAAAA,oBACAA,EAAAA,2BACAA,EAAAA,4BAEA2C,EAAAA,OAAMjE,KAAA,CAAC,cAwEV+8B,EA/HA,GCAAY,GAAA,WAiCE,SAAAA,EACYzD,EAAyCH,EAA+CnR,EACxFgV,EAA+BC,EAA4ClyB,GAFvF,IAAApJ,EAAAtG,KACYA,KAAAi+B,gBAAAA,EAAyCj+B,KAAA89B,UAAAA,EAA+C99B,KAAA2sB,UAAAA,EACxF3sB,KAAA2hC,WAAAA,EAA+B3hC,KAAA4hC,iBAAAA,EAA4C5hC,KAAA0P,QAAAA,EAV/E1P,KAAA6hC,4BAA8B,IAAIhyB,EAAAA,QAClC7P,KAAA8hC,kBAA0C,IAAIC,IAC9C/hC,KAAAgiC,oBAAsB,CAAC,iBACvBhiC,KAAAiiC,WAA4B,GAC5BjiC,KAAAkiC,kBACJ,CAAC,iBAAkB,WAAY,WAAY,WAAY,aAAc,OAAQ,eACzEliC,KAAAmiC,aAA+C,GAMrDniC,KAAK6hC,4BAA4B5vB,UAAS,WACxC,GAAI3L,EAAK67B,aAAaxhC,OAAQ,KACtByhC,EAAmB97B,EAAK67B,aAAa77B,EAAK67B,aAAaxhC,OAAS,GACtEqlB,GAAa1f,EAAKoJ,QAAS0yB,EAAiB7T,SAASxkB,cAAezD,EAAKu7B,6BACzEv7B,EAAK+7B,oBACL/7B,EAAKg8B,eAAeF,EAAiB7T,SAASxkB,yBAKpD23B,EAAAxhC,UAAAie,KAAA,SAAKokB,EAAqCC,EAA2BtE,EAAc3gB,GAAnF,IAAAjX,EAAAtG,KACQyiC,EACFjgC,EAAU+a,EAAQqR,WAAa5uB,KAAK2sB,UAAU/J,cAAcrF,EAAQqR,WAAa5uB,KAAK2sB,UAAUqC,KAC9FyN,EAAWz8B,KAAK4hC,iBAAiBc,eAAe,KAAM,MAEtDC,EAA4B3iC,KAAK2hC,WAAW7C,aAC5C8D,EAAe,WACdt8B,EAAK27B,WAAWthC,SACnB87B,EAAS3yB,YAAYxD,EAAKqmB,UAAUqC,KAAM,cAC1C1oB,EAAK+7B,sBAIT,IAAKI,EACH,MAAM,IAAI9jB,MAAM,mCAAkCpB,EAAQqR,WAAa,QAAM,mCAGzEiU,EAAc,IAAInD,GAClBoD,EACF9iC,KAAKq+B,eAAekE,EAAWhlB,EAAQwlB,UAAYP,EAAiBtE,EAAS2E,EAAatlB,GAE1FylB,GACqB,IAArBzlB,EAAQggB,SAAqBv9B,KAAKijC,gBAAgBV,EAAWE,GAAe,KAC5ES,EAA8CljC,KAAKmjC,uBAAuBZ,EAAWE,EAAaK,GAClGM,EAA2B,IAAIvD,GAAYqD,EAAeJ,EAAYE,EAAiBzlB,EAAQ8lB,eAiBnG,OAfArjC,KAAKsjC,kBAAkBF,GACvBpjC,KAAKujC,oBAAoBL,GACzBE,EAAY7K,OAAOgI,KAAKoC,EAA2BA,GACnDS,EAAY7K,OAAOgI,KAAKqC,EAAiBA,GACzCC,EAAYr5B,MAAK,SAAI+uB,GAAkB6K,EAAY55B,MAAM+uB,IACzDsK,EAAYlD,QAAO,SAAIC,GAAkBwD,EAAYzD,QAAQC,IAE7D5/B,KAAKwjC,oBAAoBN,EAAc7V,SAAU9P,GAClB,IAA3Bvd,KAAKiiC,WAAWthC,QAClB87B,EAASxyB,SAASjK,KAAK2sB,UAAUqC,KAAM,cAGrCgU,GAAmBA,EAAgB3V,UACrCrtB,KAAKyjC,sBAAsBT,EAAgB3V,SAAU9P,GAEhD6lB,GAGT1B,EAAAxhC,UAAAwjC,WAAA,SAAW9D,GAAgB5/B,KAAKiiC,WAAWz7B,QAAO,SAAC48B,GAAe,OAAAA,EAAYzD,QAAQC,MAEtF8B,EAAAxhC,UAAAyjC,cAAA,WAA2B,OAAO3jC,KAAKiiC,WAAWthC,OAAS,GAEnD+gC,EAAAxhC,UAAA+iC,gBAAR,SAAwBV,EAAqCE,OAEvDO,EADkBT,EAAUnU,wBAAwBoR,IAClBr/B,OAAOH,KAAK89B,WAGlD,OAFA99B,KAAKi+B,gBAAgBQ,WAAWuE,EAAgBjU,UAChD0T,EAAY5T,YAAYmU,EAAgBzU,SAASxkB,eAC1Ci5B,GAGDtB,EAAAxhC,UAAAijC,uBAAR,SAA+BZ,EAAqCE,EAAkBK,OAGhFI,EADgBX,EAAUnU,wBAAwB0S,IACpB3gC,OAAOH,KAAK89B,UAAWgF,EAAWrF,OAGpE,OAFAz9B,KAAKi+B,gBAAgBQ,WAAWyE,EAAcnU,UAC9C0T,EAAY5T,YAAYqU,EAAc3U,SAASxkB,eACxCm5B,GAGDxB,EAAAxhC,UAAAsjC,oBAAR,SAA4BI,EAAgCrmB,GAC1Dvd,KAAKkiC,kBAAkB17B,QAAO,SAAE6oB,GAC1B7sB,EAAU+a,EAAQ8R,MACpBuU,EAAevU,GAAc9R,EAAQ8R,OAKnCqS,EAAAxhC,UAAAujC,sBAAR,SAA8BI,EAAoCtmB,GAChEvd,KAAKgiC,oBAAoBx7B,QAAO,SAAE6oB,GAC5B7sB,EAAU+a,EAAQ8R,MACpBwU,EAAiBxU,GAAc9R,EAAQ8R,OAKrCqS,EAAAxhC,UAAAm+B,eAAR,SACIkE,EAAqCC,EAA2BtE,EAAc2E,EAC9EtlB,GACF,OAAK2gB,EAEMA,aAAmB55B,EAAAA,YACrBtE,KAAK8jC,uBAAuB5F,EAAS2E,GACnC3gC,EAASg8B,GACXl+B,KAAK+jC,kBAAkB7F,GAEvBl+B,KAAKgkC,qBAAqBzB,EAAWC,EAAiBtE,EAAS2E,EAAatlB,GAN5E,IAAIigB,GAAW,KAUlBkE,EAAAxhC,UAAA4jC,uBAAR,SAA+B5F,EAA2B2E,OAClD/oB,EAAU,CACdC,UAAW8oB,EACXr5B,eAAM+uB,GAAUsK,EAAYr5B,MAAM+uB,IAClCoH,iBAAQC,GAAUiD,EAAYlD,QAAQC,KAElClC,EAAUQ,EAAQM,mBAAmB1kB,GAE3C,OADA9Z,KAAKi+B,gBAAgBQ,WAAWf,GACzB,IAAIF,GAAW,CAACE,EAAQgB,WAAYhB,IAGrCgE,EAAAxhC,UAAA6jC,kBAAR,SAA0B7F,OAClB+F,EAAYjkC,KAAK2sB,UAAUuX,eAAe,GAAGhG,GACnD,OAAO,IAAIV,GAAW,CAAC,CAACyG,MAGlBvC,EAAAxhC,UAAA8jC,qBAAR,SACIzB,EAAqCC,EAA2BtE,EAAcpkB,EAC9EyD,OACI4mB,EAAqB5B,EAAUnU,wBAAwB8P,GACvDkG,EACFC,EAAAA,SAASlkC,OAAO,CAAC+M,UAAW,CAAC,CAAChC,QAASw0B,GAAgB4E,SAAUxqB,IAAWyqB,OAAQ/B,IAClF7E,EAAewG,EAAmBhkC,OAAOikC,GACzCI,EAAoB7G,EAAapP,SAASxkB,cAOhD,OANIwT,EAAQknB,YACV,EAAmCla,UAAUvc,IAAI,6BAEnDhO,KAAKi+B,gBAAgBQ,WAAWd,EAAa5O,UAGtC,IAAIyO,GAAW,CAAC,CAACgH,IAAqB7G,EAAa5O,SAAU4O,IAG9D+D,EAAAxhC,UAAAoiC,eAAR,SAAuB1/B,GAAvB,IAAA0D,EAAAtG,KACQukC,EAAS3hC,EAAQa,cACnB8gC,GAAU3hC,IAAY5C,KAAK2sB,UAAUqC,OACvCrvB,MAAMmV,KAAKyvB,EAAOG,UAAUl+B,QAAO,SAACm+B,GAC9BA,IAAY/hC,GAAgC,WAArB+hC,EAAQC,WACjCt+B,EAAKw7B,kBAAkBxkB,IAAIqnB,EAASA,EAAQE,aAAa,gBACzDF,EAAQG,aAAa,cAAe,WAIxC9kC,KAAKsiC,eAAeiC,KAIhB7C,EAAAxhC,UAAAmiC,kBAAR,WACEriC,KAAK8hC,kBAAkBt7B,QAAO,SAAE/E,EAAOmB,GACjCnB,EACFmB,EAAQkiC,aAAa,cAAerjC,GAEpCmB,EAAQmiC,gBAAgB,iBAG5B/kC,KAAK8hC,kBAAkBkD,SAGjBtD,EAAAxhC,UAAAojC,kBAAR,SAA0BF,GAA1B,IAAA98B,EAAAtG,KACQilC,EAAkB,eAChBtpB,EAAQrV,EAAK27B,WAAWl/B,QAAQqgC,GAClCznB,GAAS,GACXrV,EAAK27B,WAAW3pB,OAAOqD,EAAO,IAGlC3b,KAAKiiC,WAAWzgC,KAAK4hC,GACrBA,EAAY7K,OAAOgI,KAAK0E,EAAoBA,IAGtCvD,EAAAxhC,UAAAqjC,oBAAR,SAA4B2B,GAA5B,IAAA5+B,EAAAtG,KACEA,KAAKmiC,aAAa3gC,KAAK0jC,GACvBllC,KAAK6hC,4BAA4BvgC,OAEjC4jC,EAAcC,UAAS,eACfxpB,EAAQrV,EAAK67B,aAAap/B,QAAQmiC,GACpCvpB,GAAS,IACXrV,EAAK67B,aAAa7pB,OAAOqD,EAAO,GAChCrV,EAAKu7B,4BAA4BvgC,+BApMxCwC,EAAAA,WAAUC,KAAA,CAAC,CAACC,WAAY,oDArBvBohC,EAAAA,sBAKAf,EAAAA,yCA2B2EzwB,EAAAA,OAAM7P,KAAA,CAAC6rB,EAAAA,mBAlB5EiP,UAPNwG,EAAAA,wBADAvxB,EAAAA,gQARF,GCYAwxB,GAAA,WAEE,SAAAA,EACYC,EAA8CzH,EAA6B0H,EAC3EC,GADAzlC,KAAAulC,WAAAA,EAA8CvlC,KAAA89B,UAAAA,EAA6B99B,KAAAwlC,YAAAA,EAC3ExlC,KAAAylC,QAAAA,SAWZH,EAAAplC,UAAAie,KAAA,SAAK+f,EAAc3gB,QAAA,IAAAA,IAAAA,EAAA,QACXmoB,EAAkBlmC,OAAOa,OAAO,GAAIL,KAAKylC,QAASloB,GACxD,OAAOvd,KAAKwlC,YAAYrnB,KAAKne,KAAKulC,WAAYvlC,KAAK89B,UAAWI,EAASwH,IAQzEJ,EAAAplC,UAAAwjC,WAAA,SAAW9D,GAAgB5/B,KAAKwlC,YAAY9B,WAAW9D,IAOvD0F,EAAAplC,UAAAyjC,cAAA,WAA2B,OAAO3jC,KAAKwlC,YAAY7B,qCAhCpD7/B,EAAAA,WAAUC,KAAA,CAAC,CAACC,WAAY,oDAZK2rB,EAAAA,gCAAV0U,EAAAA,gBAIZ3C,UAFiBpE,0MAUzB,GCZAqI,GAAA,WAWA,SAAAA,KAMA,2BANC78B,EAAAA,SAAQ/E,KAAA,CAAC,CACRgF,aAAc,CAACy2B,GAAkBsB,IACjCn2B,gBAAiB,CAAC60B,GAAkBsB,IACpC5zB,UAAW,CAACo4B,QAGdK,EAjBA,GCUAC,GAAA,WAAA,SAAAA,IAEE5lC,KAAA2F,eAAgB,EAChB3F,KAAA6lC,YAAyC,aACzC7lC,KAAA8lC,MAA2B,qCAJ5BhiC,EAAAA,WAAUC,KAAA,CAAC,CAACC,WAAY,kHAAzB,GCUM+hC,GAAY,SAAIphC,GAAY,OAAAnC,EAAUmC,IAAc,KAAPA,GAE/CqhC,GAAa,EAsBjBC,GAAA,WAEE,SAAAA,EAAmB9hC,GAAAnE,KAAAmE,YAAAA,EACrB,2BAHCC,EAAAA,UAASL,KAAA,CAAC,CAACM,SAAU,0EA7BpBC,EAAAA,eAgCF2hC,EAHA,GAWAC,GAAA,WAsCE,SAAAA,EAA8CC,EAAYrM,GAAA95B,KAAA85B,WAAAA,EAvBjD95B,KAAA0E,UAAW,EAyBlB1E,KAAKomC,KAAOD,EA0BhB,OAvBED,EAAAhmC,UAAA2E,sBAAA,WAKE7E,KAAKmF,WAAanF,KAAKoF,YAAYJ,OAGrCkhC,EAAAhmC,UAAAiK,SAAA,WACO3H,EAAUxC,KAAKqmC,SAClBrmC,KAAKqmC,MAAQ,WAAWL,OAI5BxmC,OAAA2I,eAAI+9B,EAAAhmC,UAAA,SAAM,KAAV,WAAe,OAAOF,KAAKomC,KAAKp1B,WAAahR,KAAK2E,oCAElDnF,OAAA2I,eAAI+9B,EAAAhmC,UAAA,KAAE,KAAN,WAAW,OAAO6lC,GAAa/lC,KAAKsmC,KAAOtmC,KAAKsmC,IAAMtmC,KAAKqmC,uCAE3D7mC,OAAA2I,eAAI+9B,EAAAhmC,UAAA,aAAU,KAAd,WAAmB,OAAUF,KAAKqmC,MAAK,0CAEvCH,EAAAhmC,UAAAqmC,aAAA,WACE,OAAQ/jC,EAAUxC,KAAK2F,gBAAkB3F,KAAK2F,eAAiB3F,KAAKomC,KAAKzgC,gBAAkB3F,KAAK4M,4BAhEnGxI,EAAAA,UAASL,KAAA,CAAC,CAACM,SAAU,eAAgBkD,SAAU,aAAcI,KAAM,CAAC6+B,mBAAoB,8EAsC1E5yB,EAAAA,OAAM7P,KAAA,CAACsH,EAAAA,WAAU,WAAO,OAAAo7B,eAtFrCh8B,EAAAA,qDAwDCpF,EAAAA,wBAOAA,EAAAA,qBAQAA,EAAAA,mBASAA,EAAAA,MAAKtB,KAAA,CAAC,mCAINuB,EAAAA,gBAAevB,KAAA,CAACkiC,GAAe,CAAC1gC,aAAa,OA8BhD2gC,EAlEA,GA0EAO,GAAA,WAgDE,SAAAA,EAAsC5+B,EAAcpC,EAA8BgG,GAA5CzL,KAAA6H,KAAAA,EAA4C7H,KAAAyL,IAAAA,EAxBxEzL,KAAA0mC,eAAiB,IAAI7gC,EAAAA,aAqCrB7F,KAAA2mC,UAAY,IAAI9gC,EAAAA,aAZxB7F,KAAK2F,cAAgBF,EAAOE,cAC5B3F,KAAK6lC,YAAcpgC,EAAOogC,YAC1B7lC,KAAK8lC,MAAQrgC,EAAOqgC,MAgDxB,OApCEW,EAAAvmC,UAAA0mC,MAAA,SAAMtiB,GACCA,EAAK5f,UACR1E,KAAK6mC,gBAAgBviB,EAAK3f,KAQ9B8hC,EAAAvmC,UAAAoS,OAAA,SAAO3N,GAAW3E,KAAK6mC,gBAAgBliC,GAAI,IAE3C8hC,EAAAvmC,UAAAqQ,mBAAA,WACE,IAAK/N,EAAUxC,KAAKgR,UAAW,KACvB/M,EAASjE,KAAK8mC,MAAM9hC,MAAQhF,KAAK8mC,MAAM9hC,MAAML,GAAK,KACpDohC,GAAa9hC,KACfjE,KAAK6mC,gBAAgB5iC,GAAQ,GAC7BjE,KAAKyL,IAAIkjB,mBAKP8X,EAAAvmC,UAAA2mC,gBAAR,SAAwB5iC,EAAa8iC,GACnC,QADmC,IAAAA,IAAAA,GAAA,GAC/B/mC,KAAKgR,WAAa/M,EAAQ,KACxB+C,GAAmB,EAEnB+/B,GACF/mC,KAAK2mC,UAAU1/B,KAAK,CAAC+J,SAAUhR,KAAKgR,SAAU/M,OAAMA,EAAEiD,eAAc,WAAUF,GAAmB,KAG9FA,IACHhH,KAAKgR,SAAW/M,EAChBjE,KAAK0mC,eAAez/B,KAAKhD,0BA/FhCG,EAAAA,UAASL,KAAA,CAAC,CACTM,SAAU,WACVkD,SAAU,SACVI,KAAM,CACJq/B,cAAe,OACfC,sBAAuB,6BACvBC,0BAA2B,6EAC3BC,cAAe,qHAyCJC,EAAAA,UAASrjC,KAAA,CAAC,iBA/JjB6hC,UAdNz4B,EAAAA,uDA6IC9H,EAAAA,8BAQA2C,EAAAA,8BAMA3C,EAAAA,2BAOAA,EAAAA,qBAOAA,EAAAA,qBAEAC,EAAAA,gBAAevB,KAAA,CAACmiC,uBAehBl+B,EAAAA,UAsCHy+B,EAnGA,GA2GAY,GAAA,WAkBE,SAAAA,EAAsCx/B,EAAqBy/B,EAA4BnB,GAAjDnmC,KAAA6H,KAAAA,EAAqB7H,KAAAsnC,QAAAA,EAA4BtnC,KAAAmmC,IAAAA,EAMzF,OAJEkB,EAAAnnC,UAAAqnC,gBAAA,WAEE,OAAOvnC,KAAKsnC,QAAQxN,WAAW/vB,cAAcpG,WAAa6jC,KAAKC,kCAtBlErjC,EAAAA,UAASL,KAAA,CAAC,CACTM,SAAU,gBACVsD,KAAM,CACJ+/B,OAAQ,gBACRC,mBAAoB,OACpBnB,mBAAoB,oBACpBW,cAAe,8CACfS,KAAQ,GACR98B,iBAAkB,iBAClBC,mBAAoB,mBACpB88B,kBAAmB,oCACnBt/B,uBAAwB,qDACxBu/B,uBAAwB,iBACxBC,uBAAwB,mBACxBv/B,UAAW,qHAIA4+B,EAAAA,UAASrjC,KAAA,CAAC,iBAA6CmiC,UAAwBO,MAM9FY,EAxBA,GCpOAW,GAAA,WAAA,SAAAA,KA2BA,2BA3BC1gC,EAAAA,UAASvD,KAAA,CAAC,CACTM,SAAU,iBACVsD,KAAM,CAACsgC,sBAAuB,QAC9BzgC,cAAeC,EAAAA,kBAAkBC,KACjCK,SAAU,glBAiBT1C,EAAAA,mBAKAA,EAAAA,MAAKtB,KAAA,CAAC,mBACTikC,EA3BA,GCEME,GAAqB,CAACjC,GAAeQ,GAAQP,GAAYmB,GAAYW,IAE3EG,GAAA,WAAA,SAAAA,KAEA,2BAFCr/B,EAAAA,SAAQ/E,KAAA,CAAC,CAACgF,aAAcm/B,GAAoBl/B,QAASk/B,GAAoBj/B,QAAS,CAACC,EAAAA,kBAEpFi/B,EAFA,GCJAC,GAAA,WAAA,SAAAA,IAEEpoC,KAAA0E,UAAW,EACX1E,KAAAqoC,eAAgB,EAChBroC,KAAAsoC,gBAAiB,EACjBtoC,KAAAuoC,UAAW,EACXvoC,KAAAwoC,QAAU,EACVxoC,KAAAyoC,SAAW,GACXzoC,KAAA0oC,QAAS,6BARV5kC,EAAAA,WAAUC,KAAA,CAAC,CAACC,WAAY,kHAAzB,GCkDA2kC,GAAA,WAEE,SAAAA,EAAmBxkC,GAAAnE,KAAAmE,YAAAA,EACrB,2BAHCC,EAAAA,UAASL,KAAA,CAAC,CAACM,SAAU,kFAhDpBC,EAAAA,eAmDFqkC,EAHA,GAUAC,GAAA,WAEE,SAAAA,EAAmBzkC,GAAAnE,KAAAmE,YAAAA,EACrB,2BAHCC,EAAAA,UAASL,KAAA,CAAC,CAACM,SAAU,+EA1DpBC,EAAAA,eA6DFskC,EAHA,GAUAC,GAAA,WAEE,SAAAA,EAAmB1kC,GAAAnE,KAAAmE,YAAAA,EACrB,2BAHCC,EAAAA,UAASL,KAAA,CAAC,CAACM,SAAU,8EApEpBC,EAAAA,eAuEFukC,EAHA,GAUAC,GAAA,WAEE,SAAAA,EAAmB3kC,GAAAnE,KAAAmE,YAAAA,EACrB,2BAHCC,EAAAA,UAASL,KAAA,CAAC,CAACM,SAAU,8EA9EpBC,EAAAA,eAiFFwkC,EAHA,GAUAC,GAAA,WAEE,SAAAA,EAAmB5kC,GAAAnE,KAAAmE,YAAAA,EACrB,2BAHCC,EAAAA,UAASL,KAAA,CAAC,CAACM,SAAU,gFAxFpBC,EAAAA,eA2FFykC,EAHA,GAUAC,GAAA,WAEE,SAAAA,EAAmB7kC,GAAAnE,KAAAmE,YAAAA,EACrB,2BAHCC,EAAAA,UAASL,KAAA,CAAC,CAACM,SAAU,kFAlGpBC,EAAAA,eAqGF0kC,EAHA,GAQAC,GAAA,WAkJE,SAAAA,EAAYxjC,GA/EZzF,KAAAkpC,UAAY,EACZlpC,KAAAmpC,MAAkB,GAuDTnpC,KAAAopC,KAAO,EAcNppC,KAAAqpC,WAAa,IAAIxjC,EAAAA,cAAqB,GAU9C7F,KAAK0E,SAAWe,EAAOf,SACvB1E,KAAKqoC,cAAgB5iC,EAAO4iC,cAC5BroC,KAAKsoC,eAAiB7iC,EAAO6iC,eAC7BtoC,KAAKuoC,SAAW9iC,EAAO8iC,SACvBvoC,KAAKwoC,QAAU/iC,EAAO+iC,QACtBxoC,KAAKyoC,SAAWhjC,EAAOgjC,SACvBzoC,KAAK0oC,OAASjjC,EAAOijC,OACrB1oC,KAAKspC,KAAO7jC,EAAO6jC,KAoIvB,OAjIEL,EAAA/oC,UAAAqpC,YAAA,WAAyB,OAAOvpC,KAAKopC,KAAO,GAE5CH,EAAA/oC,UAAAspC,QAAA,WAAqB,OAAOxpC,KAAKopC,KAAOppC,KAAKkpC,WAE7CD,EAAA/oC,UAAA+c,aAAA,WAA0B,OAAQjd,KAAKwpC,WAAaxpC,KAAK0E,UAEzDukC,EAAA/oC,UAAAupC,iBAAA,WAA8B,OAAQzpC,KAAKupC,eAAiBvpC,KAAK0E,UAEjEukC,EAAA/oC,UAAAwpC,WAAA,SAAWC,GAA4B3pC,KAAK4pC,aAAaD,IAEzDV,EAAA/oC,UAAAwJ,YAAA,SAAYC,GAAgC3J,KAAK4pC,aAAa5pC,KAAKopC,OAEnEH,EAAA/oC,UAAA2pC,WAAA,SAAWF,GAAuB,OAAuB,IAAhBA,GAKjCV,EAAA/oC,UAAA4pC,eAAR,SAAuB9qB,EAAe+qB,GAChC/pC,KAAKuoC,WACHvpB,EAAQ,IAKNA,EAAQ,EACVhf,KAAKmpC,MAAM1Q,SAAS,GACD,IAAVzZ,GACThf,KAAKmpC,MAAM1Q,QAAQ,GAErBz4B,KAAKmpC,MAAM1Q,QAAQ,IAEjBsR,EAAM/pC,KAAKkpC,YAKTa,EAAO/pC,KAAKkpC,UAAY,EAC1BlpC,KAAKmpC,MAAM3nC,MAAM,GACRuoC,IAAS/pC,KAAKkpC,UAAY,GACnClpC,KAAKmpC,MAAM3nC,KAAKxB,KAAKkpC,UAAY,GAEnClpC,KAAKmpC,MAAM3nC,KAAKxB,KAAKkpC,cAanBD,EAAA/oC,UAAA8pC,eAAR,eACMhrB,EAAQ,EACR+qB,EAAM/pC,KAAKkpC,UACXe,EAAahoC,KAAKM,MAAMvC,KAAKwoC,QAAU,GACvC0B,EAAclqC,KAAKwoC,QAAU,GAAM,EAAIyB,EAAa,EAAIA,EAc5D,OAZIjqC,KAAKopC,MAAQa,EAEfF,EAAM/pC,KAAKwoC,QACFxoC,KAAKkpC,UAAYlpC,KAAKopC,KAAOa,EAEtCjrB,EAAQhf,KAAKkpC,UAAYlpC,KAAKwoC,SAG9BxpB,EAAQhf,KAAKopC,KAAOa,EAAa,EACjCF,EAAM/pC,KAAKopC,KAAOc,GAGb,CAAClrB,EAAO+qB,IAMTd,EAAA/oC,UAAAiqC,iBAAR,eAEMnrB,GADO/c,KAAKgwB,KAAKjyB,KAAKopC,KAAOppC,KAAKwoC,SAAW,GAC9BxoC,KAAKwoC,QAGxB,MAAO,CAACxpB,EAFEA,EAAQhf,KAAKwoC,UAKjBS,EAAA/oC,UAAAkqC,gBAAR,SAAwBC,OAChBC,EAAatqC,KAAKopC,KACxBppC,KAAKopC,KAAOtnC,EAAgBuoC,EAAWrqC,KAAKkpC,UAAW,GAEnDlpC,KAAKopC,OAASkB,GAAcnoC,EAASnC,KAAKuqC,iBAC5CvqC,KAAKqpC,WAAWpiC,KAAKjH,KAAKopC,OAItBH,EAAA/oC,UAAA0pC,aAAR,SAAqBY,WACnBxqC,KAAKkpC,UAAYjnC,KAAKgwB,KAAKjyB,KAAKuqC,eAAiBvqC,KAAKyoC,UAEjDtmC,EAASnC,KAAKkpC,aACjBlpC,KAAKkpC,UAAY,GAInBlpC,KAAKmpC,MAAMxoC,OAAS,EACpB,IAAK,IAAIH,EAAI,EAAGA,GAAKR,KAAKkpC,UAAW1oC,IACnCR,KAAKmpC,MAAM3nC,KAAKhB,GAOlB,GAHAR,KAAKoqC,gBAAgBI,GAGjBxqC,KAAKwoC,QAAU,GAAKxoC,KAAKkpC,UAAYlpC,KAAKwoC,QAAS,KACjDxpB,EAAQ,EACR+qB,EAAM/pC,KAAKkpC,UAGXlpC,KAAK0oC,QACN1pB,GAAD9N,EAAApQ,EAAAd,KAAAgqC,iBAAA,IAAC,GAAOD,EAAA74B,EAAA,KAEP8N,GAAD7N,EAAArQ,EAAAd,KAAAmqC,mBAAA,IAAC,GAAOJ,EAAA54B,EAAA,IAGVnR,KAAKmpC,MAAQnpC,KAAKmpC,MAAMzmC,MAAMsc,EAAO+qB,GAGrC/pC,KAAK8pC,eAAe9qB,EAAO+qB,yBA3RhCziC,EAAAA,UAASvD,KAAA,CAAC,CACTM,SAAU,iBACV+F,gBAAiBC,EAAAA,wBAAwBC,OACzC3C,KAAM,CAACE,KAAQ,cACfE,SAAU,gmIA3GJqgC,2CA6KLjL,EAAAA,aAAYp5B,KAAA,CAAC4kC,GAAuB,CAAC9kB,QAAQ,sBAC7CsZ,EAAAA,aAAYp5B,KAAA,CAAC6kC,GAAoB,CAAC/kB,QAAQ,qBAC1CsZ,EAAAA,aAAYp5B,KAAA,CAAC8kC,GAAmB,CAAChlB,QAAQ,qBACzCsZ,EAAAA,aAAYp5B,KAAA,CAAC+kC,GAAmB,CAACjlB,QAAQ,uBACzCsZ,EAAAA,aAAYp5B,KAAA,CAACglC,GAAqB,CAACllB,QAAQ,yBAC3CsZ,EAAAA,aAAYp5B,KAAA,CAACilC,GAAuB,CAACnlB,QAAQ,sBAK7Cxe,EAAAA,6BAKAA,EAAAA,8BAKAA,EAAAA,wBAKAA,EAAAA,sBAOAA,EAAAA,8BASAA,EAAAA,uBAKAA,EAAAA,oBAOAA,EAAAA,wBAKAA,EAAAA,0BASA2C,EAAAA,qBAOA3C,EAAAA,SA8IH4jC,EA9RA,GC5FMwB,GAAa,CACjBxB,GAAeN,GAAuBC,GAAoBC,GAAmBC,GAAmBC,GAChGC,IAGF0B,GAAA,WAAA,SAAAA,KAEA,2BAFC5hC,EAAAA,SAAQ/E,KAAA,CAAC,CAACgF,aAAc0hC,GAAYzhC,QAASyhC,GAAYxhC,QAAS,CAACC,EAAAA,kBAEpEwhC,EAFA,GC7BAC,GAAA,WAIE,SAAAA,EAAmBxsB,EAAqB3U,GAArBxJ,KAAAme,KAAAA,EAAqBne,KAAAwJ,MAAAA,EACjCA,IACHxJ,KAAKwJ,MAAQ2U,GAKnB,OADEwsB,EAAAzqC,UAAA0qC,SAAA,WAAa,MAAqB,WAAd5qC,KAAKme,MAAoC,WAAfne,KAAKwJ,OACrDmhC,EAXA,GAaME,GAAkB,CACtBC,MAAS,CAAC,aAAc,cACxB/sB,MAAS,CAAC,UAAW,iBAiDjBgtB,GAAW,SAAO7zB,GAAiB,OAAAA,EAAO,EAAIuO,EAAAA,MAASvO,GAAK,SAAIsa,GAAqB,OAAAA,IAiC3F,SAAgBwZ,GACZvO,EAAe1yB,EAAoBkhC,EAAkBC,EAA2BC,EAAQC,EAASC,EACjGC,QADiG,IAAAD,IAAAA,EAAA,QACjG,IAAAC,IAAAA,EAAA,OACIC,EAlFR,SAA8BN,EAAkBO,QAAA,IAAAA,IAAAA,EAAAX,QACxCY,GAAmBR,GAAY,IAAInf,OAEzC,GAA+B,IAA3B2f,EAAgB9qC,OAClB,MAAO,OAGH4qC,EAAiBE,EAAgB3oC,MAAM,OAAOuE,IAAG,SAACqkC,GAAW,OAAAA,EAAQ5oC,MAAM,OAAMuE,IAAG,SAAEskC,OACtFC,EAAQJ,EAAQG,EAAY,KAAOA,EACvC,OAAO,IAAIhB,GAAQiB,EAAM,GAAIA,EAAM,MAG/BC,EAAiBN,EAAenkC,OAAM,SAACukC,GAAe,OAAAA,EAAYf,aAExE,GAAIiB,EAAelrC,OAAS,EAC1B,KAAM,2DAGR,GAA8B,IAA1BkrC,EAAelrC,QAAgB4qC,EAAe5qC,OAAS,EACzD,KAAM,0EAGR,OAAO4qC,EA4DgBO,CAAcb,GAErC,GAA8B,IAA1BM,EAAe5qC,QAAgB4qC,EAAe,GAAGX,WACnD,OAAA,iBAGImB,EA/DR,SAAgCtP,EAAe1yB,EAAoBkhC,EAAqBC,GACtF,OAAO,IAAIc,EAAAA,WAAU,SAAUC,OACvBC,EAAY,GACZf,EAAM,WAAS,OAAAc,EAAW3qC,MAAK,IAC/B8pC,EAAO,WAAS,OAAAa,EAAW3qC,MAAK,IAChC6qC,EAAQ,WAAS,OAAAF,EAAW3qC,MAAM4pC,MAYxC,OAVAD,EAASzkC,QAAO,SAAEklC,GACZA,EAAQvtB,OAASutB,EAAQliC,MAC3B0iC,EAAU1qC,KAAKi7B,EAAS2P,OAAOriC,EAAe2hC,EAAQvtB,KAAMguB,IAE5DD,EAAU1qC,KACNi7B,EAAS2P,OAAOriC,EAAe2hC,EAAQvtB,KAAMgtB,GAC7C1O,EAAS2P,OAAOriC,EAAe2hC,EAAQliC,MAAO4hC,MAItD,WAAec,EAAU1lC,QAAO,SAAC6lC,GAAiB,OAAAA,SA8C/BC,CAAgB7P,EAAU1yB,EAAewhC,EAAgBL,GACpDt6B,KAzC5B,SAA6By6B,EAAmBC,EAAoBJ,GAClE,OAAA,SAAQqB,OACFC,EAAU,KACRC,EAAiBF,EAAO37B,KAC1BvJ,EAAAA,IAAG,SAAC8W,GAAQ,MAAA,CAAEA,KAAIA,KAAK/W,EAAAA,OAAM,SAAC+Y,OACtBusB,EAAgBxB,IACtB,OAAIwB,IAAkBvsB,EAAMhC,MAAUquB,GAAWA,EAAQruB,OAASuuB,GAI9DF,GAAWA,EAAQruB,OAASgC,EAAMhC,OACpCquB,EAAU,OAEL,IANLA,EAAUrsB,GACH,KAOXwsB,EAAAA,SACEC,EAAeH,EAAe77B,KAAKxJ,EAAAA,OAAM,SAAC+Y,GAAS,OAAAA,EAAMhC,OAAO4sB,GAAYM,IAC5EwB,EAAgBJ,EAAe77B,KAAKxJ,EAAAA,OAAM,SAAC+Y,GAAS,OAACA,EAAMhC,OAAO4sB,GAAYO,IACpF,OAAOnoB,EAAAA,MAAMypB,EAAcC,GACtBj8B,KACGxJ,EAAAA,OAAM,SAAC+Y,GACL,OAAIA,IAAUqsB,IACZA,EAAU,KACHrsB,EAAMhC,OAAS+sB,OAI1B7jC,EAAAA,IAAG,SAAC8Y,GAAS,OAAAA,EAAMhC,SAcE2uB,CAAazB,EAAWC,EAAYJ,IACzCj5B,UAAS,SAACkM,GAAQ,OAACA,EAAOgtB,IAAWC,MAE/D,OAAA,WAAa,OAAAW,EAAa5c,eCrG5B,IAAA4d,GAAA,WAAA,SAAAA,IAEE/sC,KAAAisB,WAA4C,EAC5CjsB,KAAA0oB,UAA4B,OAC5B1oB,KAAAirC,SAAW,QAEXjrC,KAAAgtC,gBAAiB,EAEjBhtC,KAAAqrC,UAAY,EACZrrC,KAAAsrC,WAAa,6BATdxnC,EAAAA,WAAUC,KAAA,CAAC,CAACC,WAAY,kHAAzB,GCwBIC,GAAS,EAEbgpC,GAAA,WAAA,SAAAA,KAqBA,OADEA,EAAA/sC,UAAAgtC,gBAAA,WAAoB,OAAOltC,KAAKmtC,iBAAiB7oC,EAAAA,iCApBlDgD,EAAAA,UAASvD,KAAA,CAAC,CACTM,SAAU,qBACV+F,gBAAiBC,EAAAA,wBAAwBC,OACzC9C,cAAeC,EAAAA,kBAAkBC,KACjCC,KAAM,CAAC83B,UAAW,uDAAwD53B,KAAQ,UAAW6/B,OAAQ,MACrG3/B,SAAU,0iCAUT1C,EAAAA,kBACAA,EAAAA,4BACAA,EAAAA,uBACAA,EAAAA,SAGH4nC,EArBA,GA0BAG,GAAA,WAgHE,SAAAA,EACY3rB,EAA8CnY,EAAsBy5B,EAC5EsK,EAAoDC,EAAoC7nC,EAChFiK,EAA2Cid,EAAwBC,EAC3E2gB,GAJJ,IAAAjnC,EAAAtG,KACYA,KAAAyhB,YAAAA,EAA8CzhB,KAAAsJ,UAAAA,EAE9CtJ,KAAA0P,QAAAA,EAA2C1P,KAAA2sB,UAAAA,EAAwB3sB,KAAA4sB,gBAAAA,EAzBrE5sB,KAAAwtC,MAAQ,IAAI3nC,EAAAA,aAKZ7F,KAAAqa,OAAS,IAAIxU,EAAAA,aAEf7F,KAAAytC,oBAAsB,eAAexpC,KAoB3CjE,KAAKisB,UAAYxmB,EAAOwmB,UACxBjsB,KAAK0oB,UAAYjjB,EAAOijB,UACxB1oB,KAAKirC,SAAWxlC,EAAOwlC,SACvBjrC,KAAK4uB,UAAYnpB,EAAOmpB,UACxB5uB,KAAKgtC,eAAiBvnC,EAAOunC,eAC7BhtC,KAAK0tC,aAAejoC,EAAOioC,aAC3B1tC,KAAKqrC,UAAY5lC,EAAO4lC,UACxBrrC,KAAKsrC,WAAa7lC,EAAO6lC,WACzBtrC,KAAK2tC,cAAgB,IAAI/P,GACrBqP,GAAkBlK,EAAUuK,EAAkBhkC,EAAW+jC,EAA0BE,GAEvFvtC,KAAKmtB,kBAAoBzd,EAAQ8S,SAASvQ,UAAS,WAC7C3L,EAAK63B,YACP5V,GACIjiB,EAAKmb,YAAY1X,cAAezD,EAAK63B,WAAW5P,SAASxkB,cAAezD,EAAKoiB,UAC1D,SAAnBpiB,EAAKsoB,UAAsB,gBAsGvC,OApIUwe,EAAAltC,UAAA0tC,YAAR,WACE,QAAI5tC,KAAKgtC,iBAGJhtC,KAAK6tC,aAAe7tC,KAAK8tC,cAqChCV,EAAAltC,UAAAie,KAAA,SAAKrE,GAAL,IAAAxT,EAAAtG,KACOA,KAAKm+B,YAAen+B,KAAK4tC,gBAC5B5tC,KAAKm+B,WAAan+B,KAAK2tC,cAAcxvB,KAAKne,KAAK6tC,WAAY/zB,GAC3D9Z,KAAKm+B,WAAW9Q,SAAS8f,MAAQntC,KAAK8tC,aACtC9tC,KAAKm+B,WAAW9Q,SAASvT,QAAUA,EACnC9Z,KAAKm+B,WAAW9Q,SAASqgB,aAAe1tC,KAAK0tC,aAC7C1tC,KAAKm+B,WAAW9Q,SAAS1oB,GAAK3E,KAAKytC,oBAEnCztC,KAAKsJ,UAAUw7B,aAAa9kC,KAAKyhB,YAAY1X,cAAe,mBAAoB/J,KAAKytC,qBAE9D,SAAnBztC,KAAK4uB,WACP5uB,KAAK2sB,UAAU/J,cAAc5iB,KAAK4uB,WAAWC,YAAY7uB,KAAKm+B,WAAW5P,SAASxkB,eAMpF/J,KAAKm+B,WAAWzP,kBAAkBC,gBAOlC3uB,KAAKm+B,WAAWzP,kBAAkB7hB,eAElCgY,GACI7kB,KAAK0P,QAAS1P,KAAK2sB,UAAW3sB,KAAKisB,UAAS,WAAQ,OAAA3lB,EAAKkD,SAASxJ,KAAKqa,OACvE,CAACra,KAAKm+B,WAAW5P,SAASxkB,gBAC9B/J,KAAKwtC,MAAMvmC,SASfmmC,EAAAltC,UAAAsJ,MAAA,WACMxJ,KAAKm+B,aACPn+B,KAAKsJ,UAAUy7B,gBAAgB/kC,KAAKyhB,YAAY1X,cAAe,oBAC/D/J,KAAK2tC,cAAcnkC,QACnBxJ,KAAKm+B,WAAa,KAClBn+B,KAAKqa,OAAOpT,OACZjH,KAAK4sB,gBAAgB/f,iBASzBugC,EAAAltC,UAAA0G,OAAA,WACM5G,KAAKm+B,WACPn+B,KAAKwJ,QAELxJ,KAAKme,QAOTivB,EAAAltC,UAAA0E,OAAA,WAAoB,OAA0B,MAAnB5E,KAAKm+B,YAEhCiP,EAAAltC,UAAAiK,SAAA,WACEnK,KAAK+tC,uBAAyB/C,GAC1BhrC,KAAKsJ,UAAWtJ,KAAKyhB,YAAY1X,cAAe/J,KAAKirC,SAAUjrC,KAAK4E,OAAOopC,KAAKhuC,MAAOA,KAAKme,KAAK6vB,KAAKhuC,MACtGA,KAAKwJ,MAAMwkC,KAAKhuC,OAAQA,KAAKqrC,WAAYrrC,KAAKsrC,aAGpD8B,EAAAltC,UAAAwJ,YAAA,SAAYwH,OAAC28B,EAAA38B,EAAA28B,WAAYC,EAAA58B,EAAA48B,aAAcd,EAAA97B,EAAA87B,eAAgBU,EAAAx8B,EAAAw8B,aACjDA,GAAgB1tC,KAAK4E,WACvB5E,KAAKm+B,WAAW9Q,SAASqgB,aAAeA,EAAaxjC,eAGlD2jC,GAAcC,GAAgBd,IAAmBhtC,KAAK4tC,eACzD5tC,KAAKwJ,SAIT4jC,EAAAltC,UAAAyO,YAAA,WACE3O,KAAKwJ,QAGDxJ,KAAK+tC,wBACP/tC,KAAK+tC,yBAEP/tC,KAAKmtB,kBAAkBgC,mCAxO1B/qB,EAAAA,UAASL,KAAA,CAAC,CAACM,SAAU,eAAgBkD,SAAU,0DA/C9CkD,EAAAA,kBAFAD,EAAAA,iBADA65B,EAAAA,gBAMA1U,EAAAA,gCADAD,EAAAA,wBAeMqd,UAbNj5B,EAAAA,uCA8J8BF,EAAAA,OAAM7P,KAAA,CAAC6rB,EAAAA,mBA3JrCziB,EAAAA,yBACAi4B,EAAAA,qDAoDC//B,EAAAA,0BAOAA,EAAAA,4BAOAA,EAAAA,yBAeAA,EAAAA,wBAQAA,EAAAA,yBAOAA,EAAAA,8BAOAA,EAAAA,4BAOAA,EAAAA,yBAOAA,EAAAA,0BAOAA,EAAAA,qBAKA2C,EAAAA,uBAKAA,EAAAA,UA2IHolC,EA1OA,GC7DAa,GAAA,WASA,SAAAA,KAOA,2BAPCnlC,EAAAA,SAAQ/E,KAAA,CAAC,CACRgF,aAAc,CAACqkC,GAAYH,IAC3BjkC,QAAS,CAACokC,IACVnkC,QAAS,CAACC,EAAAA,cACVyB,gBAAiB,CAACsiC,QAGpBgB,EAhBA,GCQAC,GAAA,WAAA,SAAAA,IAEEluC,KAAA+B,IAAM,IACN/B,KAAAmuC,UAAW,EACXnuC,KAAAouC,SAAU,EAGVpuC,KAAAquC,WAAY,6BAPbvqC,EAAAA,WAAUC,KAAA,CAAC,CAACC,WAAY,kHAAzB,GCDAsqC,GAAA,WA8EE,SAAAA,EAAY7oC,GATHzF,KAAAyB,MAAQ,EAUfzB,KAAK+B,IAAM0D,EAAO1D,IAClB/B,KAAKmuC,SAAW1oC,EAAO0oC,SACvBnuC,KAAKouC,QAAU3oC,EAAO2oC,QACtBpuC,KAAKuuC,SAAW9oC,EAAO8oC,SACvBvuC,KAAK8F,KAAOL,EAAOK,KACnB9F,KAAKquC,UAAY5oC,EAAO4oC,UACxBruC,KAAKunB,OAAS9hB,EAAO8hB,OAMzB,OArEE/nB,OAAA2I,eACImmC,EAAApuC,UAAA,MAAG,KAIP,WAAoB,OAAOF,KAAKwuC,UALhC,SACQzsC,GACN/B,KAAKwuC,MAAQrsC,EAASJ,IAAQA,GAAO,EAAI,IAAMA,mCAgEjDusC,EAAApuC,UAAAuuC,SAAA,WAAa,OAAO3sC,EAAgB9B,KAAKyB,MAAOzB,KAAK+B,MAErDusC,EAAApuC,UAAAwuC,gBAAA,WAAoB,OAAO,IAAM1uC,KAAKyuC,WAAazuC,KAAK+B,yBA1FzDuF,EAAAA,UAASvD,KAAA,CAAC,CACTM,SAAU,kBACV+F,gBAAiBC,EAAAA,wBAAwBC,OACzC9C,cAAeC,EAAAA,kBAAkBC,KACjCK,SAAU,0lBATJmmC,mCA2BL7oC,EAAAA,wBAYAA,EAAAA,uBAKAA,EAAAA,yBAKAA,EAAAA,wBAUAA,EAAAA,oBAQAA,EAAAA,qBAOAA,EAAAA,sBAOAA,EAAAA,SAeHipC,EA3FA,GCPAK,GAAA,WAQA,SAAAA,KAEA,2BAFC7lC,EAAAA,SAAQ/E,KAAA,CAAC,CAACgF,aAAc,CAACulC,IAAiBtlC,QAAS,CAACslC,IAAiBrlC,QAAS,CAACC,EAAAA,kBAEhFylC,EAVA,GCQAC,GAAA,WAAA,SAAAA,IAEE5uC,KAAA+B,IAAM,GACN/B,KAAA6uC,UAAW,EACX7uC,KAAA8uC,YAAa,6BAJdhrC,EAAAA,WAAUC,KAAA,CAAC,CAACC,WAAY,kHAAzB,GC2BM+qC,GAA4B,CAChC7jC,QAASC,EAAAA,kBACTC,YAAaC,EAAAA,WAAU,WAAO,OAAA2jC,KAC9BzjC,OAAO,GAMTyjC,GAAA,WAwFE,SAAAA,EAAYvpC,EAAiCwpC,GAAAjvC,KAAAivC,mBAAAA,EAzD7CjvC,KAAAkvC,SAAkC,GAClClvC,KAAA0E,UAAW,EAqCD1E,KAAA8qC,MAAQ,IAAIjlC,EAAAA,aAOZ7F,KAAAmvC,MAAQ,IAAItpC,EAAAA,aAOZ7F,KAAAovC,WAAa,IAAIvpC,EAAAA,cAAqB,GAEhD7F,KAAA4L,SAAQ,SAAIC,KACZ7L,KAAA8L,UAAS,aAGP9L,KAAK+B,IAAM0D,EAAO1D,IAClB/B,KAAK6uC,SAAWppC,EAAOopC,SAsG3B,OAnGEG,EAAA9uC,UAAAmvC,cAAA,WAAkB,OAAUrvC,KAAKsvC,SAAQ,WAAWtvC,KAAK+B,KAEzDitC,EAAA9uC,UAAAqvC,MAAA,SAAM9tC,GACCzB,KAAK6uC,UAAa7uC,KAAK0E,UAC1B1E,KAAKue,aAAa9c,GAEpBzB,KAAK8qC,MAAM7jC,KAAKxF,IAGlButC,EAAA9uC,UAAAsvC,WAAA,WAAexvC,KAAK8L,aAEpBkjC,EAAA9uC,UAAAuvC,YAAA,SAAYhuC,GACLzB,KAAK6uC,UAAa7uC,KAAK0E,UAC1B1E,KAAK0vC,OAAO1vC,KAAK8uC,YAAc9uC,KAAK2vC,OAASluC,EAAQ,EAAIA,IAI7DutC,EAAA9uC,UAAA0vC,cAAA,SAAczvB,GAEZ,OAAQA,EAAME,OACZ,KAAKC,GAAIN,UACT,KAAKM,GAAIT,UACP7f,KAAK0vC,OAAO1vC,KAAK2vC,KAAO,GACxB,MACF,KAAKrvB,GAAIR,QACT,KAAKQ,GAAIP,WACP/f,KAAK0vC,OAAO1vC,KAAK2vC,KAAO,GACxB,MACF,KAAKrvB,GAAIV,KACP5f,KAAK0vC,OAAO,GACZ,MACF,KAAKpvB,GAAIX,IACP3f,KAAK0vC,OAAO1vC,KAAK+B,KACjB,MACF,QACE,OAIJoe,EAAMjZ,kBAGR8nC,EAAA9uC,UAAAwJ,YAAA,SAAYC,GACNA,EAAc,MAChB3J,KAAK0vC,OAAO1vC,KAAK2vC,OAIrBX,EAAA9uC,UAAAiK,SAAA,WACEnK,KAAKkvC,SAAWvvC,MAAMmV,KAAK,CAACnU,OAAQX,KAAK+B,KAAI,SAAG8tC,EAAGC,GAAM,MAAA,CAAEC,KAAM,EAAGp0B,MAAOm0B,KAC3E9vC,KAAKue,aAAave,KAAK2vC,OAGzBX,EAAA9uC,UAAAqM,iBAAA,SAAiBC,GAAiCxM,KAAK4L,SAAWY,GAElEwiC,EAAA9uC,UAAAuM,kBAAA,SAAkBD,GAAuBxM,KAAK8L,UAAYU,GAE1DwiC,EAAA9uC,UAAA8vC,MAAA,WACEhwC,KAAKmvC,MAAMloC,KAAKjH,KAAKsvC,UACrBtvC,KAAKue,aAAave,KAAK2vC,OAGzBX,EAAA9uC,UAAAwM,iBAAA,SAAiBC,GAAuB3M,KAAK0E,SAAWiI,GAExDqiC,EAAA9uC,UAAAwvC,OAAA,SAAOjuC,EAAewuC,QAAA,IAAAA,IAAAA,GAAA,OACdC,EAAUpuC,EAAgBL,EAAOzB,KAAK+B,IAAK,GAC5C/B,KAAK6uC,UAAa7uC,KAAK0E,UAAY1E,KAAK2vC,OAASO,IACpDlwC,KAAK2vC,KAAOO,EACZlwC,KAAKovC,WAAWnoC,KAAKjH,KAAK2vC,OAExBM,IACFjwC,KAAK4L,SAAS5L,KAAK2vC,MACnB3vC,KAAK8L,aAEP9L,KAAKue,aAAave,KAAK2vC,OAGzBX,EAAA9uC,UAAAoM,WAAA,SAAW7K,GACTzB,KAAK0vC,OAAOjuC,GAAO,GACnBzB,KAAKivC,mBAAmBpiC,gBAGlBmiC,EAAA9uC,UAAAiwC,cAAR,SAAsBx0B,OACd+X,EAAO1zB,KAAKsvC,SAAW3zB,EAE7B,OAAI+X,GAAQ,EACH,IAELA,EAAO,GAAKA,EAAO,EACd9xB,UAAiB,IAAP8xB,GAAY0c,QAAQ,GAAI,IAGpC,GAGDpB,EAAA9uC,UAAAqe,aAAR,SAAqB8xB,GAArB,IAAA/pC,EAAAtG,KACEA,KAAKsvC,SAAWe,EAChBrwC,KAAKkvC,SAAS1oC,QAAO,SAAEsT,EAAS6B,GAAU,OAAA7B,EAAQi2B,KAAOzpC,EAAK6pC,cAAcx0B,0BA9L/ErU,EAAAA,UAASvD,KAAA,CAAC,CACTM,SAAU,aACV+F,gBAAiBC,EAAAA,wBAAwBC,OACzC9C,cAAeC,EAAAA,kBAAkBC,KACjCC,KAAM,CACJC,MAAS,gBACT0oC,aAAc,oBACdzoC,KAAQ,SACR0oC,gBAAiB,IACjBC,uBAAwB,MACxBC,uBAAwB,WACxBC,wBAAyB,kBACzB3I,uBAAwB,yBACxB96B,SAAU,eACV0jC,YAAa,wBACbC,eAAgB,WAElB7oC,SAAU,ukBAUVmF,UAAW,CAAC6hC,iDAxDNH,UAbNzhC,EAAAA,kDAiFC9H,EAAAA,oBAKAA,EAAAA,wBAKAA,EAAAA,0BAKAA,EAAAA,4BAOAA,EAAAA,uCACA83B,EAAAA,aAAYp5B,KAAA,CAACO,EAAAA,YAAa,CAACuf,QAAQ,mBAOnC7b,EAAAA,sBAOAA,EAAAA,2BAOAA,EAAAA,UA6GHgnC,EAhMA,GC5CA6B,GAAA,WAQA,SAAAA,KAEA,2BAFC/nC,EAAAA,SAAQ/E,KAAA,CAAC,CAACgF,aAAc,CAACimC,IAAYhmC,QAAS,CAACgmC,IAAY/lC,QAAS,CAACC,EAAAA,kBAEtE2nC,EAVA,GCQAC,GAAA,WAAA,SAAAA,IAEE9wC,KAAA+wC,QAA6D,QAC7D/wC,KAAA6lC,YAAyC,aACzC7lC,KAAA8F,KAAyB,kCAJ1BhC,EAAAA,WAAUC,KAAA,CAAC,CAACC,WAAY,kHAAzB,GCMIC,GAAS,EAOb+sC,GAAA,WAEE,SAAAA,EAAmB7sC,GAAAnE,KAAAmE,YAAAA,EACrB,2BAHCC,EAAAA,UAASL,KAAA,CAAC,CAACM,SAAU,wEAZpBC,EAAAA,eAeF0sC,EAHA,GAQAC,GAAA,WAEE,SAAAA,EAAmB9sC,GAAAnE,KAAAmE,YAAAA,EACrB,2BAHCC,EAAAA,UAASL,KAAA,CAAC,CAACM,SAAU,0EApBpBC,EAAAA,eAuBF2sC,EAHA,GAQAC,GAAA,WAAA,SAAAA,IAOWlxC,KAAA2E,GAAK,WAAWV,KAYhBjE,KAAA0E,UAAW,EAgBtB,OAREwsC,EAAAhxC,UAAA2E,sBAAA,WAKE7E,KAAK8E,SAAW9E,KAAK+E,UAAUC,MAC/BhF,KAAKmF,WAAanF,KAAKoF,YAAYJ,2BAjCtCZ,EAAAA,UAASL,KAAA,CAAC,CAACM,SAAU,0CAOnBgB,EAAAA,qBAOAA,EAAAA,wBAKAA,EAAAA,yBAKAC,EAAAA,gBAAevB,KAAA,CAACitC,GAAa,CAACzrC,aAAa,yBAC3CD,EAAAA,gBAAevB,KAAA,CAACktC,GAAe,CAAC1rC,aAAa,OAUhD2rC,EAnCA,GA4DAC,GAAA,WA8EE,SAAAA,EAAY1rC,GAnCHzF,KAAA2F,eAAgB,EAiCf3F,KAAAoxC,UAAY,IAAIvrC,EAAAA,aAGxB7F,KAAK8F,KAAOL,EAAOK,KACnB9F,KAAK+wC,QAAUtrC,EAAOsrC,QACtB/wC,KAAK6lC,YAAcpgC,EAAOogC,YAiC9B,OAlEErmC,OAAA2I,eACIgpC,EAAAjxC,UAAA,UAAO,KADX,SACY2C,GAER7C,KAAKqxC,aADW,SAAdxuC,GAAsC,cAAdA,EACN,OAAOA,EAEP,mBAAmBA,mCAqC3CsuC,EAAAjxC,UAAAoS,OAAA,SAAOg/B,OACDC,EAAcvxC,KAAKwxC,YAAYF,GACnC,GAAIC,IAAgBA,EAAY7sC,UAAY1E,KAAKgR,WAAaugC,EAAY5sC,GAAI,KACxEqC,GAAmB,EAEvBhH,KAAKoxC,UAAUnqC,KACX,CAAC+J,SAAUhR,KAAKgR,SAAU/M,OAAQstC,EAAY5sC,GAAIuC,eAAc,WAAUF,GAAmB,KAE5FA,IACHhH,KAAKgR,SAAWugC,EAAY5sC,MAKlCwsC,EAAAjxC,UAAA2E,sBAAA,eAEM4sC,EAAYzxC,KAAKwxC,YAAYxxC,KAAKgR,UACtChR,KAAKgR,SAAWygC,EAAYA,EAAU9sC,GAAM3E,KAAK0xC,KAAK/wC,OAASX,KAAK0xC,KAAK1sC,MAAML,GAAK,MAG9EwsC,EAAAjxC,UAAAsxC,YAAR,SAAoB7sC,OACdgtC,EAAuB3xC,KAAK0xC,KAAKtqC,OAAM,SAACwqC,GAAO,OAAAA,EAAIjtC,KAAOA,IAC9D,OAAOgtC,EAAWhxC,OAASgxC,EAAW,GAAK,0BAhH9CrqC,EAAAA,UAASvD,KAAA,CAAC,CACTM,SAAU,aACVkD,SAAU,YACVC,cAAeC,EAAAA,kBAAkBC,KACjCK,SAAU,mvCAzFJ+oC,oCAoHLxrC,EAAAA,gBAAevB,KAAA,CAACmtC,sBAOhB7rC,EAAAA,6BAKAA,EAAAA,uBAKAA,EAAAA,2BAYAA,EAAAA,oBASAA,EAAAA,yBAOA2C,EAAAA,UAsCHmpC,EAlHA,GCxFMU,GAAwB,CAACV,GAAWD,GAAQD,GAAeD,IAEjEc,GAAA,WAAA,SAAAA,KAEA,2BAFChpC,EAAAA,SAAQ/E,KAAA,CAAC,CAACgF,aAAc8oC,GAAuB7oC,QAAS6oC,GAAuB5oC,QAAS,CAACC,EAAAA,aAAci/B,QAExG2J,EAFA,GCXAC,GAAA,WAOE,SAAAA,EAAYC,EAAeC,EAAiBC,GAC1ClyC,KAAKgyC,KAAOrwC,EAAUqwC,GACtBhyC,KAAKiyC,OAAStwC,EAAUswC,GACxBjyC,KAAKkyC,OAASvwC,EAAUuwC,GAwC5B,OArCEH,EAAA7xC,UAAAiyC,WAAA,SAAW3Z,QAAA,IAAAA,IAAAA,EAAA,GAAYx4B,KAAKoyC,YAAYhwC,MAAMpC,KAAKgyC,MAAQ,EAAIhyC,KAAKgyC,MAAQxZ,IAE5EuZ,EAAA7xC,UAAAkyC,WAAA,SAAWJ,GACL7vC,EAAS6vC,GACXhyC,KAAKgyC,MAAQA,EAAO,EAAI,GAAKA,EAAOA,GAAQ,GAE5ChyC,KAAKgyC,KAAOK,KAIhBN,EAAA7xC,UAAAoyC,aAAA,SAAa9Z,QAAA,IAAAA,IAAAA,EAAA,GAAYx4B,KAAKuyC,cAAcnwC,MAAMpC,KAAKiyC,QAAU,EAAIjyC,KAAKiyC,QAAUzZ,IAEpFuZ,EAAA7xC,UAAAqyC,aAAA,SAAaN,GACP9vC,EAAS8vC,IACXjyC,KAAKiyC,OAASA,EAAS,GAAK,EAAI,GAAKA,EAAS,GAAKA,EAAS,GAC5DjyC,KAAKmyC,WAAWlwC,KAAKM,MAAM0vC,EAAS,MAEpCjyC,KAAKiyC,OAASI,KAIlBN,EAAA7xC,UAAAsyC,aAAA,SAAaha,QAAA,IAAAA,IAAAA,EAAA,GAAYx4B,KAAKyyC,cAAcrwC,MAAMpC,KAAKkyC,QAAU,EAAIlyC,KAAKkyC,QAAU1Z,IAEpFuZ,EAAA7xC,UAAAuyC,aAAA,SAAaP,GACP/vC,EAAS+vC,IACXlyC,KAAKkyC,OAASA,EAAS,EAAI,GAAKA,EAAS,GAAKA,EAAS,GACvDlyC,KAAKsyC,aAAarwC,KAAKM,MAAM2vC,EAAS,MAEtClyC,KAAKkyC,OAASG,KAIlBN,EAAA7xC,UAAAmX,QAAA,SAAQq7B,GACN,YADM,IAAAA,IAAAA,GAAA,GACCvwC,EAASnC,KAAKgyC,OAAS7vC,EAASnC,KAAKiyC,WAAYS,GAAYvwC,EAASnC,KAAKkyC,UAGpFH,EAAA7xC,UAAA2B,SAAA,WAAa,OAAU7B,KAAKgyC,MAAQ,GAAC,KAAIhyC,KAAKiyC,QAAU,GAAC,KAAIjyC,KAAKkyC,QAAU,IAC9EH,EAlDA,GCQAY,GAAA,WAAA,SAAAA,IAEE3yC,KAAA4yC,UAAW,EACX5yC,KAAA6yC,UAAW,EACX7yC,KAAA8yC,SAAU,EACV9yC,KAAA+yC,SAAW,EACX/yC,KAAAgzC,WAAa,EACbhzC,KAAAizC,WAAa,EACbjzC,KAAA0E,UAAW,EACX1E,KAAAkzC,gBAAiB,EACjBlzC,KAAAspC,KAAqC,oCAVtCxlC,EAAAA,WAAUC,KAAA,CAAC,CAACC,WAAY,kHAAzB,GCJA,SAAgBmvC,KACd,OAAO,IAAIC,GAgBb,IAAAC,GAAA,WAAA,SAAAA,gCAACvvC,EAAAA,WAAUC,KAAA,CAAC,CAACC,WAAY,OAAQgS,WAAYm9B,wFAA7C,kBAaA,SAAAC,mDAmBA,OAlB0Cn9B,EAAAA,EAAAA,GAIxCm9B,EAAAlzC,UAAAghB,UAAA,SAAUhK,GACR,OAAQA,GAAQ7U,EAAU6U,EAAK86B,OAAS3vC,EAAU6U,EAAK+6B,QACnD,CAACD,KAAM96B,EAAK86B,KAAMC,OAAQ/6B,EAAK+6B,OAAQC,OAAQ7vC,EAAU6U,EAAKg7B,QAAUh7B,EAAKg7B,OAAS,MACtF,MAMNkB,EAAAlzC,UAAAihB,QAAA,SAAQjK,GACN,OAAQA,GAAQ7U,EAAU6U,EAAK86B,OAAS3vC,EAAU6U,EAAK+6B,QACnD,CAACD,KAAM96B,EAAK86B,KAAMC,OAAQ/6B,EAAK+6B,OAAQC,OAAQ7vC,EAAU6U,EAAKg7B,QAAUh7B,EAAKg7B,OAAS,MACtF,0BAjBPpuC,EAAAA,aAmBDsvC,GAlB0CC,IChC1C,SAAgBC,GAA4B74B,GAC1C,OAAO,IAAI84B,GAAyB94B,GAQtC,IAAA+4B,GAAA,WAAA,SAAAA,gCAAC1vC,EAAAA,WAAUC,KAAA,CAAC,CAACC,WAAY,OAAQgS,WAAYs9B,GAA6Bt4B,KAAM,CAACC,EAAAA,4IAAjF,kBAiBE,SAAAs4B,EAA+B94B,GAA/B,IAAAnU,EACE6U,EAAAva,KAAAZ,OAAOA,YAEPsG,EAAKmtC,SAAWC,EAAAA,oBAAoBj5B,EAAQa,EAAAA,UAAUC,WAAYC,EAAAA,iBAAiBm4B,UAMvF,OAZ8C19B,EAAAA,EAAAA,GAS5Cs9B,EAAArzC,UAAA0zC,iBAAA,WAA6B,OAAO5zC,KAAKyzC,SAAS,IAElDF,EAAArzC,UAAA2zC,mBAAA,WAA+B,OAAO7zC,KAAKyzC,SAAS,wBAZrD3vC,EAAAA,+EAIc8P,EAAAA,OAAM7P,KAAA,CAACkX,EAAAA,gBAStBs4B,GAZ8CC,ICTxCM,GAAe,UAEfC,GAAgC,CACpC7oC,QAASC,EAAAA,kBACTC,YAAaC,EAAAA,WAAU,WAAO,OAAA2oC,KAC9BzoC,OAAO,GAMTyoC,GAAA,WAuJE,SAAAA,EACqBvO,EAAsCwO,EAC/CxoC,EAA+BwM,GADtBjY,KAAAylC,QAAAA,EAAsCzlC,KAAAi0C,gBAAAA,EAC/Cj0C,KAAAyL,IAAAA,EAA+BzL,KAAAiY,KAAAA,EAY3CjY,KAAA4L,SAAQ,SAAIC,KACZ7L,KAAA8L,UAAS,aAZP9L,KAAK4yC,SAAWnN,EAAQmN,SACxB5yC,KAAK6yC,SAAWpN,EAAQoN,SACxB7yC,KAAK8yC,QAAUrN,EAAQqN,QACvB9yC,KAAK+yC,SAAWtN,EAAQsN,SACxB/yC,KAAKgzC,WAAavN,EAAQuN,WAC1BhzC,KAAKizC,WAAaxN,EAAQwN,WAC1BjzC,KAAK0E,SAAW+gC,EAAQ/gC,SACxB1E,KAAKkzC,eAAiBzN,EAAQyN,eAC9BlzC,KAAKspC,KAAO7D,EAAQ6D,KAqGxB,OArJE9pC,OAAA2I,eACI6rC,EAAA9zC,UAAA,WAAQ,KAIZ,WAAyB,OAAOF,KAAKk0C,eALrC,SACa1b,GACXx4B,KAAKk0C,UAAY7xC,EAAUm2B,GAAQA,EAAOx4B,KAAKylC,QAAQsN,0CAQzDvzC,OAAA2I,eACI6rC,EAAA9zC,UAAA,aAAU,KAId,WAA2B,OAAOF,KAAKm0C,iBALvC,SACe3b,GACbx4B,KAAKm0C,YAAc9xC,EAAUm2B,GAAQA,EAAOx4B,KAAKylC,QAAQuN,4CAQ3DxzC,OAAA2I,eACI6rC,EAAA9zC,UAAA,aAAU,KAId,WAA2B,OAAOF,KAAKo0C,iBALvC,SACe5b,GACbx4B,KAAKo0C,YAAc/xC,EAAUm2B,GAAQA,EAAOx4B,KAAKylC,QAAQwN,4CAgC3De,EAAA9zC,UAAAoM,WAAA,SAAW7K,OACH4yC,EAAcr0C,KAAKi0C,gBAAgB/yB,UAAUzf,GACnDzB,KAAKqd,MAAQg3B,EAAc,IAAItC,GAAQsC,EAAYrC,KAAMqC,EAAYpC,OAAQoC,EAAYnC,QAAU,IAAIH,GAClG/xC,KAAK8yC,SAAauB,GAAgBlyC,EAASkyC,EAAYnC,UAC1DlyC,KAAKqd,MAAM60B,OAAS,GAEtBlyC,KAAKyL,IAAIoB,gBAGXmnC,EAAA9zC,UAAAqM,iBAAA,SAAiBC,GAAiCxM,KAAK4L,SAAWY,GAElEwnC,EAAA9zC,UAAAuM,kBAAA,SAAkBD,GAAuBxM,KAAK8L,UAAYU,GAE1DwnC,EAAA9zC,UAAAwM,iBAAA,SAAiBC,GAAuB3M,KAAK0E,SAAWiI,GAExDqnC,EAAA9zC,UAAAiyC,WAAA,SAAW3Z,GACTx4B,KAAKqd,MAAM80B,WAAW3Z,GACtBx4B,KAAKs0C,wBAGPN,EAAA9zC,UAAAoyC,aAAA,SAAa9Z,GACXx4B,KAAKqd,MAAMi1B,aAAa9Z,GACxBx4B,KAAKs0C,wBAGPN,EAAA9zC,UAAAsyC,aAAA,SAAaha,GACXx4B,KAAKqd,MAAMm1B,aAAaha,GACxBx4B,KAAKs0C,wBAGPN,EAAA9zC,UAAAkyC,WAAA,SAAWmC,OACHC,EAAOx0C,KAAKqd,MAAM20B,MAAQ,GAC1ByC,EAAc9yC,EAAU4yC,GAC1Bv0C,KAAK4yC,WAAa4B,GAAQC,EAAc,KAAOD,GAAwB,KAAhBC,GACzDz0C,KAAKqd,MAAM+0B,WAAWqC,EAAc,IAEpCz0C,KAAKqd,MAAM+0B,WAAWqC,GAExBz0C,KAAKs0C,wBAGPN,EAAA9zC,UAAAqyC,aAAA,SAAagC,GACXv0C,KAAKqd,MAAMk1B,aAAa5wC,EAAU4yC,IAClCv0C,KAAKs0C,wBAGPN,EAAA9zC,UAAAuyC,aAAA,SAAa8B,GACXv0C,KAAKqd,MAAMo1B,aAAa9wC,EAAU4yC,IAClCv0C,KAAKs0C,wBAGPN,EAAA9zC,UAAAw0C,eAAA,WACM10C,KAAK4yC,UACP5yC,KAAKmyC,WAAW,KAIpB6B,EAAA9zC,UAAAy0C,YAAA,SAAY5yB,GAA2BA,EAAMtgB,MAAQsgB,EAAMtgB,MAAMmzC,QAAQd,GAAc,KAEvFE,EAAA9zC,UAAA20C,WAAA,SAAWpzC,GACT,OAAIU,EAASV,GACPzB,KAAK4yC,SACAnwC,EAAUhB,EAAQ,IAAO,EAAI,GAAKA,EAAQ,IAE1CgB,EAAUhB,EAAQ,IAGpBgB,EAAU4vC,MAIrB2B,EAAA9zC,UAAA40C,aAAA,SAAarzC,GAAiB,OAAOgB,EAAUhB,IAE/CjC,OAAA2I,eAAI6rC,EAAA9zC,UAAA,cAAW,KAAf,WAA6B,MAAqB,UAAdF,KAAKspC,sCAEzC9pC,OAAA2I,eAAI6rC,EAAA9zC,UAAA,cAAW,KAAf,WAA6B,MAAqB,UAAdF,KAAKspC,sCAEzC0K,EAAA9zC,UAAAwJ,YAAA,SAAYC,GACNA,EAAiB,UAAM3J,KAAK8yC,SAAW9yC,KAAKqd,QAAUlb,EAASnC,KAAKqd,MAAM60B,UAC5ElyC,KAAKqd,MAAM60B,OAAS,EACpBlyC,KAAKs0C,sBAAqB,KAItBN,EAAA9zC,UAAAo0C,qBAAR,SAA6BS,QAAA,IAAAA,IAAAA,GAAA,GACvBA,GACF/0C,KAAK8L,YAEH9L,KAAKqd,MAAMhG,QAAQrX,KAAK8yC,SAC1B9yC,KAAK4L,SACD5L,KAAKi0C,gBAAgB9yB,QAAQ,CAAC6wB,KAAMhyC,KAAKqd,MAAM20B,KAAMC,OAAQjyC,KAAKqd,MAAM40B,OAAQC,OAAQlyC,KAAKqd,MAAM60B,UAEvGlyC,KAAK4L,SAAS5L,KAAKi0C,gBAAgB9yB,QAAQ,4BApQhD7Z,EAAAA,UAASvD,KAAA,CAAC,CACTM,SAAU,iBACVmD,cAAeC,EAAAA,kBAAkBC,KAEjCK,SAAU,qpLAiFVmF,UAAW,CAAC6mC,g2BApGNpB,UACAU,UAbNlmC,EAAAA,yBAcMqmC,wCAgHLnuC,EAAAA,wBAKAA,EAAAA,uBAKAA,EAAAA,wBAKAA,EAAAA,0BAUAA,EAAAA,0BAUAA,EAAAA,8BAUAA,EAAAA,oBAKAA,EAAAA,SAkHH2uC,EAvQA,GC5BAgB,GAAA,WAWA,SAAAA,KAEA,2BAFClsC,EAAAA,SAAQ/E,KAAA,CAAC,CAACgF,aAAc,CAACirC,IAAgBhrC,QAAS,CAACgrC,IAAgB/qC,QAAS,CAACC,EAAAA,kBAE9E8rC,EAbA,GCoCAC,GAAA,WAAA,SAAAA,IAEEj1C,KAAAk1C,UAAW,EACXl1C,KAAAylB,MAAQ,IACRzlB,KAAAm1C,SAA+B,oCAJhCrxC,EAAAA,WAAUC,KAAA,CAAC,CAACC,WAAY,kHAAzB,GCbAoxC,GAAA,WAAA,SAAAA,KAEA,2BAFChxC,EAAAA,UAASL,KAAA,CAAC,CAACM,SAAU,uBAEtB+wC,EAFA,GAUAC,GAAA,WAoEE,SAAAA,EAA2CF,EAAkB1vC,GAAlBzF,KAAAm1C,SAAAA,EAbsBn1C,KAAAs1C,iBAA2C,KAW5Ft1C,KAAAu1C,WAAa,IAAI1vC,EAAAA,aAGV,MAAjB7F,KAAKm1C,WACPn1C,KAAKm1C,SAAW1vC,EAAO0vC,UAEzBn1C,KAAKylB,MAAQhgB,EAAOggB,MACpBzlB,KAAKk1C,SAAWzvC,EAAOyvC,SA6B3B,OA1BEG,EAAAn1C,UAAAqQ,mBAAA,WAAuBvQ,KAAKw1C,SAE5BH,EAAAn1C,UAAAwJ,YAAA,SAAYC,GACN,aAAcA,IAChB3J,KAAKy1C,gBACLz1C,KAAKw1C,UAITH,EAAAn1C,UAAAw1C,KAAA,WACE11C,KAAKy1C,gBACLz1C,KAAKu1C,WAAWtuC,QAGVouC,EAAAn1C,UAAAs1C,MAAR,WAAA,IAAAlvC,EAAAtG,KACMA,KAAKk1C,WAAal1C,KAAK21C,aACzB31C,KAAK21C,WAAa/wB,WAAU,WAAO,OAAAte,EAAKovC,QAAQ11C,KAAKylB,SAIjD4vB,EAAAn1C,UAAAu1C,cAAR,WACMz1C,KAAK21C,aACPC,aAAa51C,KAAK21C,YAClB31C,KAAK21C,WAAa,2BAnGvBruC,EAAAA,UAASvD,KAAA,CAAC,CACTM,SAAU,YACVkD,SAAU,WACVC,cAAeC,EAAAA,kBAAkBC,KACjCC,KAAM,CACJE,KAAQ,QACRguC,mBAAoB,WACpBC,cAAe,OACfC,gBAAiB,OACjBvhC,eAAgB,QAElBzM,SAAU,oyBAyDGq/B,EAAAA,UAASrjC,KAAA,CAAC,sBAtFjBkxC,qCAuDL5vC,EAAAA,wBAMAA,EAAAA,sBAMAA,EAAAA,gCAMA83B,EAAAA,aAAYp5B,KAAA,CAACqxC,GAAgB,CAACzkB,KAAMrsB,EAAAA,YAAauf,QAAQ,wBAWzD7b,EAAAA,OAAMjE,KAAA,CAAC,WAoCVsxC,EAtGA,GCjCAW,GAAA,WAQA,SAAAA,KAEA,2BAFCltC,EAAAA,SAAQ/E,KAAA,CAAC,CAACgF,aAAc,CAACssC,GAAUD,IAAiBnsC,QAAS,CAACC,EAAAA,cAAeF,QAAS,CAACqsC,GAAUD,QAElGY,EAVA,GCSAC,GAAA,WAAA,SAAAA,IAEEj2C,KAAAisB,WAA4C,EAC5CjsB,KAAA0oB,UAA4B,OAC5B1oB,KAAAirC,SAAW,cAEXjrC,KAAAk2C,gBAAiB,EAEjBl2C,KAAAqrC,UAAY,EACZrrC,KAAAsrC,WAAa,6BATdxnC,EAAAA,WAAUC,KAAA,CAAC,CAACC,WAAY,kHAAzB,GCwBIC,GAAS,EAEbkyC,GAAA,WAAA,SAAAA,KAWA,2BAXC7uC,EAAAA,UAASvD,KAAA,CAAC,CACTM,SAAU,qBACV+F,gBAAiBC,EAAAA,wBAAwBC,OACzC9C,cAAeC,EAAAA,kBAAkBC,KACjCC,KAAM,CAAC83B,UAAW,4DAA6D53B,KAAQ,UAAW6/B,OAAQ,MAC1G3/B,SAAU,wxBAIT1C,EAAAA,4BACAA,EAAAA,SACH8wC,EAXA,GAgBAC,GAAA,WAyFE,SAAAA,EACY30B,EAA8CnY,EAAsBy5B,EAC5EsK,EAAoDC,EAAoC7nC,EAChFiK,EAA2Cid,EAAwBC,EAC3E2gB,GAJJ,IAAAjnC,EAAAtG,KACYA,KAAAyhB,YAAAA,EAA8CzhB,KAAAsJ,UAAAA,EAE9CtJ,KAAA0P,QAAAA,EAA2C1P,KAAA2sB,UAAAA,EAAwB3sB,KAAA4sB,gBAAAA,EAhBrE5sB,KAAAwtC,MAAQ,IAAI3nC,EAAAA,aAIZ7F,KAAAqa,OAAS,IAAIxU,EAAAA,aAGf7F,KAAAq2C,oBAAsB,eAAepyC,KAW3CjE,KAAKisB,UAAYxmB,EAAOwmB,UACxBjsB,KAAK0oB,UAAYjjB,EAAOijB,UACxB1oB,KAAKirC,SAAWxlC,EAAOwlC,SACvBjrC,KAAK4uB,UAAYnpB,EAAOmpB,UACxB5uB,KAAKk2C,eAAiBzwC,EAAOywC,eAC7Bl2C,KAAKs2C,aAAe7wC,EAAO6wC,aAC3Bt2C,KAAKqrC,UAAY5lC,EAAO4lC,UACxBrrC,KAAKsrC,WAAa7lC,EAAO6lC,WACzBtrC,KAAK2tC,cAAgB,IAAI/P,GACrBuY,GAAkBpT,EAAUuK,EAAkBhkC,EAAW+jC,EAA0BE,GAEvFvtC,KAAKmtB,kBAAoBzd,EAAQ8S,SAASvQ,UAAS,WAC7C3L,EAAK63B,YACP5V,GACIjiB,EAAKmb,YAAY1X,cAAezD,EAAK63B,WAAW5P,SAASxkB,cAAezD,EAAKoiB,UAC1D,SAAnBpiB,EAAKsoB,UAAsB,gBAgHvC,OAtGEpvB,OAAA2I,eACIiuC,EAAAl2C,UAAA,aAAU,KAOd,WAAmB,OAAOF,KAAKu2C,iBAR/B,SACe90C,GACbzB,KAAKu2C,YAAc90C,GACdA,GAASzB,KAAKm+B,YACjBn+B,KAAKwJ,yCAYT4sC,EAAAl2C,UAAAie,KAAA,SAAKrE,GAAL,IAAAxT,EAAAtG,KACOA,KAAKm+B,aAAcn+B,KAAKu2C,aAAgBv2C,KAAKk2C,iBAChDl2C,KAAKm+B,WAAan+B,KAAK2tC,cAAcxvB,KAAKne,KAAKu2C,YAAaz8B,GAC5D9Z,KAAKm+B,WAAW9Q,SAASipB,aAAet2C,KAAKs2C,aAC7Ct2C,KAAKm+B,WAAW9Q,SAAS1oB,GAAK3E,KAAKq2C,oBAEnCr2C,KAAKsJ,UAAUw7B,aAAa9kC,KAAKyhB,YAAY1X,cAAe,mBAAoB/J,KAAKq2C,qBAE9D,SAAnBr2C,KAAK4uB,WACP5uB,KAAK2sB,UAAU/J,cAAc5iB,KAAK4uB,WAAWC,YAAY7uB,KAAKm+B,WAAW5P,SAASxkB,eAMpF/J,KAAKm+B,WAAWzP,kBAAkBC,gBAOlC3uB,KAAKm+B,WAAWzP,kBAAkB7hB,eAElCgY,GACI7kB,KAAK0P,QAAS1P,KAAK2sB,UAAW3sB,KAAKisB,UAAS,WAAQ,OAAA3lB,EAAKkD,SAASxJ,KAAKqa,OACvE,CAACra,KAAKm+B,WAAW5P,SAASxkB,gBAE9B/J,KAAKwtC,MAAMvmC,SASfmvC,EAAAl2C,UAAAsJ,MAAA,WACyB,MAAnBxJ,KAAKm+B,aACPn+B,KAAKsJ,UAAUy7B,gBAAgB/kC,KAAKyhB,YAAY1X,cAAe,oBAC/D/J,KAAK2tC,cAAcnkC,QACnBxJ,KAAKm+B,WAAa,KAClBn+B,KAAKqa,OAAOpT,OACZjH,KAAK4sB,gBAAgB/f,iBASzBupC,EAAAl2C,UAAA0G,OAAA,WACM5G,KAAKm+B,WACPn+B,KAAKwJ,QAELxJ,KAAKme,QAOTi4B,EAAAl2C,UAAA0E,OAAA,WAAoB,OAA0B,MAAnB5E,KAAKm+B,YAEhCiY,EAAAl2C,UAAAiK,SAAA,WACEnK,KAAK+tC,uBAAyB/C,GAC1BhrC,KAAKsJ,UAAWtJ,KAAKyhB,YAAY1X,cAAe/J,KAAKirC,SAAUjrC,KAAK4E,OAAOopC,KAAKhuC,MAAOA,KAAKme,KAAK6vB,KAAKhuC,MACtGA,KAAKwJ,MAAMwkC,KAAKhuC,OAAQA,KAAKqrC,WAAYrrC,KAAKsrC,aAGpD8K,EAAAl2C,UAAAwJ,YAAA,SAAYwH,OAAColC,EAAAplC,EAAAolC,aACPA,GAAgBt2C,KAAK4E,WACvB5E,KAAKm+B,WAAW9Q,SAASipB,aAAeA,EAAapsC,eAIzDksC,EAAAl2C,UAAAyO,YAAA,WACE3O,KAAKwJ,QAGDxJ,KAAK+tC,wBACP/tC,KAAK+tC,yBAEP/tC,KAAKmtB,kBAAkBgC,mCA3N1B/qB,EAAAA,UAASL,KAAA,CAAC,CAACM,SAAU,eAAgBkD,SAAU,0DAtC9CkD,EAAAA,kBAFAD,EAAAA,iBADA65B,EAAAA,gBAMA1U,EAAAA,gCADAD,EAAAA,wBAgBMumB,UAdNniC,EAAAA,uCA8H8BF,EAAAA,OAAM7P,KAAA,CAAC6rB,EAAAA,mBA5HrCziB,EAAAA,yBACAi4B,EAAAA,qDA4CC//B,EAAAA,yBAeAA,EAAAA,wBAQAA,EAAAA,yBAOAA,EAAAA,8BAOAA,EAAAA,4BAOAA,EAAAA,yBAOAA,EAAAA,0BAOAA,EAAAA,qBAKA2C,EAAAA,uBAIAA,EAAAA,2BAuCA3C,EAAAA,SAsGH+wC,EA7NA,GCnDAI,GAAA,WAQA,SAAAA,KAEA,2BAFC1tC,EAAAA,SAAQ/E,KAAA,CAAC,CAACgF,aAAc,CAACqtC,GAAYD,IAAmBntC,QAAS,CAACotC,IAAazrC,gBAAiB,CAACwrC,QAElGK,EAVA,GCWAC,GAAA,WAAA,SAAAA,IAeWz2C,KAAA02C,eAAiB,gBAwB5B,OARED,EAAAv2C,UAAAwJ,YAAA,SAAYC,OACJ4uB,EAAS12B,EAAS7B,KAAKu4B,QAGvBoe,GADQh3C,MAAM0qB,QAAQrqB,KAAK42C,MAAQ52C,KAAK42C,KAAO,CAAC52C,KAAK42C,OAChCvvC,IAAG,SAACuvC,GAAQ,OAAa/0C,EAAS+0C,G7FTnDhC,QAAQ,2BAA4B,U6FSuBxtC,OAAM,SAACwvC,GAAQ,OAAAA,IAEpF52C,KAAK62C,MAAQF,EAAah2C,OAAS43B,EAAOz1B,MAAM,IAAIg0C,OAAO,IAAIH,EAAa/wB,KAAK,KAAI,IAAK,QAAU,CAAC2S,wBArCxGjxB,EAAAA,UAASvD,KAAA,CAAC,CACTM,SAAU,gBACV+F,gBAAiBC,EAAAA,wBAAwBC,OACzC9C,cAAeC,EAAAA,kBAAkBC,KACjCK,SAAU,sRAWT1C,EAAAA,sBAQAA,EAAAA,oBAMAA,EAAAA,SAUHoxC,EAvCA,GCXAM,GAAA,WAmBA,SAAAA,IAsBE/2C,KAAAg3C,UAAY,EAWHh3C,KAAAi3C,YAAa,EAgBbj3C,KAAAk3C,UAAYr1C,EAUH7B,KAAAm3C,YAAc,IAAItxC,EAAAA,aAEZ7F,KAAAo3C,kBAAoB,IAAIvxC,EAAAA,aA2ClD,OAzCEkxC,EAAA72C,UAAAm3C,UAAA,WAAc,OAAOr3C,KAAKg3C,WAAa,GAAKh3C,KAAKg3C,UAAYh3C,KAAKs3C,QAAQ32C,QAE1Eo2C,EAAA72C,UAAAq3C,UAAA,WAAc,OAAOv3C,KAAKs3C,QAAQt3C,KAAKg3C,YAEvCD,EAAA72C,UAAAs3C,WAAA,SAAWR,GACTh3C,KAAKg3C,UAAYA,EACjBh3C,KAAKy3C,kBAGPV,EAAA72C,UAAAoB,KAAA,WACMtB,KAAKg3C,YAAch3C,KAAKs3C,QAAQ32C,OAAS,EAC3CX,KAAKg3C,UAAYh3C,KAAKi3C,YAAcj3C,KAAKg3C,UAAY,GAAKh3C,KAAKs3C,QAAQ32C,QAAU,EAEjFX,KAAKg3C,YAEPh3C,KAAKy3C,kBAGPV,EAAA72C,UAAAyS,KAAA,WACM3S,KAAKg3C,UAAY,EACnBh3C,KAAKg3C,UAAYh3C,KAAKs3C,QAAQ32C,OAAS,EACX,IAAnBX,KAAKg3C,UACdh3C,KAAKg3C,UAAYh3C,KAAKi3C,WAAaj3C,KAAKs3C,QAAQ32C,OAAS,GAAK,EAE9DX,KAAKg3C,YAEPh3C,KAAKy3C,kBAGPV,EAAA72C,UAAAw3C,YAAA,WACE13C,KAAKg3C,UAAYh3C,KAAKi3C,WAAa,GAAK,EACxCj3C,KAAKy3C,kBAGPV,EAAA72C,UAAAoS,OAAA,SAAOgS,GAAQtkB,KAAKm3C,YAAYlwC,KAAKqd,IAErCyyB,EAAA72C,UAAAiK,SAAA,WAAanK,KAAK03C,eAEVX,EAAA72C,UAAAu3C,eAAR,WACEz3C,KAAKo3C,kBAAkBnwC,KAAKjH,KAAKg3C,WAAa,EAAIh3C,KAAK2E,GAAK,IAAM3E,KAAKg3C,eAAYp9B,wBAtGtFtS,EAAAA,UAASvD,KAAA,CAAC,CACTM,SAAU,uBACVkD,SAAU,qBACVC,cAAeC,EAAAA,kBAAkBC,KACjCC,KAAM,CAACgwC,cAAe,0BAA2B/vC,MAAS,qBAAsBC,KAAQ,UAAW6/B,OAAQ,MAC3G3/B,SAAU,mtBAuBT1C,EAAAA,0BAKAA,EAAAA,uBAKAA,EAAAA,oBAKAA,EAAAA,yBAMAA,EAAAA,8BAKAA,EAAAA,2BAKA2C,EAAAA,OAAMjE,KAAA,CAAC,qCAEPiE,EAAAA,OAAMjE,KAAA,CAAC,mBA2CVgzC,EA3HA,GCQaa,GAAkB,IAAIC,EAAAA,eAC/B,uBAAwB,CAAC7zC,WAAY,OAAQ8zC,QAASC,KAC1D,SAAgBA,KACd,OAAO,IAIT,SAASC,GAAe10C,EAAe20C,QAAA,IAAAA,IAAAA,GAAA,OACjCr1C,EAAUU,EAAS0rB,KAAKpM,cAAc,aAc1C,OAZe,MAAXhgB,GAAmBq1C,KACrBr1C,EAAUU,EAAS05B,cAAc,QAEzB8H,aAAa,KAAM,YAC3BliC,EAAQkiC,aAAa,YAAa,UAClCliC,EAAQkiC,aAAa,cAAe,QAEpCliC,EAAQ2nB,UAAUvc,IAAI,WAEtB1K,EAAS0rB,KAAKH,YAAYjsB,IAGrBA,EAKT,IAAAs1C,GAAA,WAEE,SAAAA,EAAsCvrB,EAAiDwrB,GAAjDn4C,KAAA2sB,UAAAA,EAAiD3sB,KAAAm4C,OAAAA,SAEvFD,EAAAh4C,UAAAyO,YAAA,eACQ/L,EAAUo1C,GAAeh4C,KAAK2sB,WAChC/pB,GACFA,EAAQa,cAAcq5B,YAAYl6B,IAItCs1C,EAAAh4C,UAAAk4C,IAAA,SAAIC,OACIz1C,EAAUo1C,GAAeh4C,KAAK2sB,WAAW,GACzClH,EAAQzlB,KAAKm4C,OAEnBv1C,EAAQ01C,YAAc,OAChBC,EAAO,WAAS,OAAA31C,EAAQ01C,YAAcD,GAC9B,OAAV5yB,EACF8yB,IAEA3zB,WAAW2zB,EAAS9yB,wBApBzB3hB,EAAAA,WAAUC,KAAA,CAAC,CAACC,WAAY,6EAEV4P,EAAAA,OAAM7P,KAAA,CAAC6rB,EAAAA,4CAAmChc,EAAAA,OAAM7P,KAAA,CAAC6zC,uJAFhE,GC1BAY,GAAA,WAAA,SAAAA,IAGEx4C,KAAAy4C,UAAW,EACXz4C,KAAAi3C,YAAa,EACbj3C,KAAA04C,UAAW,EACX14C,KAAA0oB,UAA4B,CAAC,cAAe,eAAgB,WAAY,wCANzE5kB,EAAAA,WAAUC,KAAA,CAAC,CAACC,WAAY,kHAAzB,GC2BM20C,GAA+B,CACnCztC,QAASC,EAAAA,kBACTC,YAAaC,EAAAA,WAAU,WAAO,OAAAutC,KAC9BrtC,OAAO,GAkBLstC,GAAe,EAKnBD,GAAA,WAgIE,SAAAA,EACYn3B,EAA2C6rB,EAC3ChkC,EAAsBy5B,EAAoBsK,EAClD5nC,EAA4BqzC,EAAwBC,EAAuCpsB,EACnFjd,EAAyBkd,EAAoC2gB,GAJzE,IAAAjnC,EAAAtG,KACYA,KAAAyhB,YAAAA,EACAzhB,KAAAsJ,UAAAA,EAC4CtJ,KAAA+4C,MAAAA,EAAuC/4C,KAAA2sB,UAAAA,EACnF3sB,KAAA0P,QAAAA,EAAyB1P,KAAA4sB,gBAAAA,EA7G7B5sB,KAAAg7B,SAAW,IAAInrB,EAAAA,QAcd7P,KAAAg5C,aAAe,MA4Efh5C,KAAA0oB,UAA4B,cAO3B1oB,KAAAi5C,WAAa,IAAIpzC,EAAAA,aAG3B7F,KAAAk5C,QAAU,iBAAiBL,KAEnB74C,KAAAitB,WAAU,aACVjtB,KAAAgtB,UAAS,SAAInhB,KAOnB7L,KAAK4uB,UAAYnpB,EAAOmpB,UACxB5uB,KAAKy4C,SAAWhzC,EAAOgzC,SACvBz4C,KAAKi3C,WAAaxxC,EAAOwxC,WACzBj3C,KAAK04C,SAAWjzC,EAAOizC,SACvB14C,KAAK0oB,UAAYjjB,EAAOijB,UAExB1oB,KAAKm5C,cAAgBn2B,EAAAA,UAAiBvB,EAAY1X,cAAe,SACvC6G,KAAKvJ,EAAAA,IAAG,SAAC6E,GAAU,OAACA,EAAa,OAAsBzK,SAEjFzB,KAAKo5C,sBAAwB,IAAIrpC,EAAAA,gBAAgB,MAEjD/P,KAAK2tC,cAAgB,IAAI/P,GACrBmZ,GAAoBhU,EAAUuK,EAAkBhkC,EAAW+jC,EAA0BE,GAEzFvtC,KAAKmtB,kBAAoB2rB,EAAOt2B,SAASvQ,UAAS,WAC5C3L,EAAK+yC,eACP9wB,GACIjiB,EAAKmb,YAAY1X,cAAezD,EAAK63B,WAAW5P,SAASxkB,cAAezD,EAAKoiB,UAC1D,SAAnBpiB,EAAKsoB,aAiMjB,OA5LEgqB,EAAA14C,UAAAiK,SAAA,WAAA,IAAA7D,EAAAtG,KAKQs5C,EAJet5C,KAAKm5C,cAAcvoC,KAAKwU,EAAAA,IAAG,SAAC3jB,GAC/C6E,EAAKizC,kBAAoBjzC,EAAKoyC,SAAWj3C,EAAQ,KACjD6E,EAAK0mB,UAAU1mB,EAAKmyC,SAAWh3C,OAAQmY,MAEXhJ,KAAK5Q,KAAKw5C,cAClCC,EAAaz5C,KAAKo5C,sBAAsBxoC,KAAKiB,EAAAA,UAAS,WAAO,OAAAynC,KACnEt5C,KAAK05C,cAAgB15C,KAAK25C,sBAAsBF,IAGlDb,EAAA14C,UAAAyO,YAAA,WACE3O,KAAK45C,cACL55C,KAAK65C,4BACL75C,KAAKmtB,kBAAkBgC,eAGzBypB,EAAA14C,UAAAqM,iBAAA,SAAiBC,GAAiCxM,KAAKgtB,UAAYxgB,GAEnEosC,EAAA14C,UAAAuM,kBAAA,SAAkBD,GAAuBxM,KAAKitB,WAAazgB,GAE3DosC,EAAA14C,UAAAoM,WAAA,SAAW7K,GACTzB,KAAK85C,iBAAiB95C,KAAK+5C,oBAAoBt4C,IAC3CzB,KAAK04C,WACP14C,KAAKu5C,kBAAoB93C,IAI7Bm3C,EAAA14C,UAAAwM,iBAAA,SAAiBC,GACf3M,KAAKsJ,UAAUmF,YAAYzO,KAAKyhB,YAAY1X,cAAe,WAAY4C,IAMzEisC,EAAA14C,UAAA85C,aAAA,WACMh6C,KAAKq5C,gBACPr5C,KAAKo5C,sBAAsB93C,KAAK,MAChCtB,KAAK45C,cACD55C,KAAK04C,UAAuC,OAA3B14C,KAAKu5C,mBACxBv5C,KAAK85C,iBAAiB95C,KAAKu5C,mBAE7Bv5C,KAAK4sB,gBAAgB/f,iBAOzB+rC,EAAA14C,UAAAm5C,YAAA,WAAgB,OAA0B,MAAnBr5C,KAAKm+B,YAE5Bya,EAAA14C,UAAAsvC,WAAA,WACExvC,KAAKo5C,sBAAsB93C,KAAK,MAChCtB,KAAKitB,cAGP2rB,EAAA14C,UAAA0vC,cAAA,SAAczvB,GACZ,GAAKngB,KAAKq5C,cAKV,OAAQl5B,EAAME,OACZ,KAAKC,GAAIN,UACPG,EAAMjZ,iBACNlH,KAAKm+B,WAAW9Q,SAAS/rB,OACzBtB,KAAKi6C,YACL,MACF,KAAK35B,GAAIR,QACPK,EAAMjZ,iBACNlH,KAAKm+B,WAAW9Q,SAAS1a,OACzB3S,KAAKi6C,YACL,MACF,KAAK35B,GAAIhB,MACT,KAAKgB,GAAIjB,QACDkZ,EAASv4B,KAAKm+B,WAAW9Q,SAASkqB,YACpC/0C,EAAU+1B,KACZpY,EAAMjZ,iBACNiZ,EAAMM,kBACNzgB,KAAKk6C,cAAc3hB,IAErBv4B,KAAK45C,gBAKHhB,EAAA14C,UAAAi6C,WAAR,WAAA,IAAA7zC,EAAAtG,KACOA,KAAKq5C,gBACRr5C,KAAKu5C,kBAAoBv5C,KAAKyhB,YAAY1X,cAActI,MACxDzB,KAAKm+B,WAAan+B,KAAK2tC,cAAcxvB,OACrCne,KAAKm+B,WAAW9Q,SAAS1oB,GAAK3E,KAAKk5C,QACnCl5C,KAAKm+B,WAAW9Q,SAAS8pB,YAAYllC,UAAS,SAAEsmB,GAAgB,OAAAjyB,EAAK8zC,wBAAwB7hB,KAC7Fv4B,KAAKm+B,WAAW9Q,SAAS+pB,kBAAkBnlC,UAAS,SAAEjB,GAAqB,OAAA1K,EAAK+zC,iBAAmBrpC,IAE5E,SAAnBhR,KAAK4uB,WACPhI,OAAOtjB,SAASsf,cAAc5iB,KAAK4uB,WAAWC,YAAY7uB,KAAKm+B,WAAW5P,SAASxkB,eAGrF/J,KAAK4sB,gBAAgB/f,eAErBgY,GACI7kB,KAAK0P,QAAS1P,KAAK2sB,UAAW,UAAS,WAAQ,OAAArmB,EAAK0zC,gBAAgBh6C,KAAKg7B,SACzE,CAACh7B,KAAKyhB,YAAY1X,cAAe/J,KAAKm+B,WAAW5P,SAASxkB,kBAI1D6uC,EAAA14C,UAAA05C,YAAR,WACE55C,KAAKg7B,SAAS15B,OACdtB,KAAK2tC,cAAcnkC,QACnBxJ,KAAKm+B,WAAa,KAClBn+B,KAAKq6C,sBAAmBzgC,GAGlBg/B,EAAA14C,UAAAg6C,cAAR,SAAsB3hB,OAChB0I,GAAmB,EACvBjhC,KAAKi5C,WAAWhyC,KAAK,CAACqd,KAAMiU,EAAQrxB,eAAc,WAAU+5B,GAAmB,KAC/EjhC,KAAKo5C,sBAAsB93C,KAAK,MAE3B2/B,IACHjhC,KAAKsM,WAAWisB,GAChBv4B,KAAKgtB,UAAUuL,KAIXqgB,EAAA14C,UAAAk6C,wBAAR,SAAgC7hB,GAC9Bv4B,KAAKk6C,cAAc3hB,GACnBv4B,KAAK45C,eAGChB,EAAA14C,UAAA+5C,UAAR,WACE,GAAIj6C,KAAK04C,UAAY14C,KAAKm+B,WAAW9Q,SAASgqB,aAAyC,MAA1Br3C,KAAKu5C,kBAA2B,KACrFe,EAAqBt6C,KAAKu5C,kBAAkBgB,cAC5CC,EAAex6C,KAAK+5C,oBAAoB/5C,KAAKm+B,WAAW9Q,SAASkqB,aAEnE+C,IAAuBE,EAAaC,OAAO,EAAGz6C,KAAKu5C,kBAAkB54C,QAAQ45C,eAC/Ev6C,KAAK85C,iBAAiB95C,KAAKu5C,kBAAoBiB,EAAaC,OAAOz6C,KAAKu5C,kBAAkB54C,SAC1FX,KAAKyhB,YAAY1X,cAAiC,kBAAElJ,MAChDb,KAAKyhB,YAAY1X,cAAe,CAAC/J,KAAKu5C,kBAAkB54C,OAAQ65C,EAAa75C,UAEjFX,KAAK85C,iBAAiBU,KAKpB5B,EAAA14C,UAAA65C,oBAAR,SAA4Bz1B,GAC1B,OAAe,MAARA,GAAgBtkB,KAAK06C,eAAiB16C,KAAK06C,eAAep2B,GAAQziB,EAASyiB,IAG5Es0B,EAAA14C,UAAA45C,iBAAR,SAAyBr4C,GACvBzB,KAAKsJ,UAAUmF,YAAYzO,KAAKyhB,YAAY1X,cAAe,QAASlI,EAASJ,KAGvEm3C,EAAA14C,UAAAy5C,sBAAR,SAA8BF,GAA9B,IAAAnzC,EAAAtG,KACE,OAAOy5C,EAAWxnC,UAAS,SAAEqlC,GACtBA,GAA8B,IAAnBA,EAAQ32C,QAGtB2F,EAAK6zC,aACL7zC,EAAK63B,WAAW9Q,SAAS4pB,WAAa3wC,EAAK2wC,WAC3C3wC,EAAK63B,WAAW9Q,SAASiqB,QAAUA,EACnChxC,EAAK63B,WAAW9Q,SAASupB,KAAOtwC,EAAKmb,YAAY1X,cAActI,MAC3D6E,EAAKq0C,kBACPr0C,EAAK63B,WAAW9Q,SAAS6pB,UAAY5wC,EAAKq0C,iBAExCr0C,EAAKs0C,iBACPt0C,EAAK63B,WAAW9Q,SAASutB,eAAiBt0C,EAAKs0C,gBAEjDt0C,EAAK63B,WAAW9Q,SAASqqB,cAKzBpxC,EAAK63B,WAAWzP,kBAAkBC,gBAElCroB,EAAK2zC,aAnBL3zC,EAAKszC,kBAuBDiB,EAAQvD,EAAUA,EAAQ32C,OAAS,EACzC2F,EAAKyyC,MAAMX,IAAc,IAAVyC,EAAc,uBAA4BA,EAAK,WAAoB,IAAVA,EAAc,GAAK,KAAG,iBAI1FjC,EAAA14C,UAAA25C,0BAAR,WACM75C,KAAK05C,eACP15C,KAAK05C,cAAcvqB,cAErBnvB,KAAK05C,cAAgB,0BAtVxBt1C,EAAAA,UAASL,KAAA,CAAC,CACTM,SAAU,sBACVkD,SAAU,eACVI,KAAM,CACJsF,SAAU,eACV6tC,eAAgB,gBAChBnK,YAAa,wBACboK,iBAAkB,eAClBC,eAAkB,MAClBC,YAAe,MACfpzC,KAAQ,WACRqzC,iBAAkB,QAClBC,2BAA4B,6BAC5BC,+BAAgC,mBAChCC,mBAAoB,iCACpB/yC,uBAAwB,iBAE1B4E,UAAW,CAACyrC,iDA1EZluC,EAAAA,kBAYAilB,EAAAA,wBAFAllB,EAAAA,iBANA65B,EAAAA,gBAPA1U,EAAAA,gCA8BM6oB,UArBN1kC,EAAAA,cAcMokC,mCAwKgEtkC,EAAAA,OAAM7P,KAAA,CAAC6rB,EAAAA,mBAtL7E9b,EAAAA,cAVA3G,EAAAA,yBAiBAi4B,EAAAA,wDAiFC//B,EAAAA,yBAOAA,EAAAA,wBAKAA,EAAAA,0BAKAA,EAAAA,8BAQAA,EAAAA,4BAaAA,EAAAA,+BASAA,EAAAA,8BASAA,EAAAA,wBAKAA,EAAAA,yBAeAA,EAAAA,0BAOA2C,EAAAA,UAgOH4wC,EAxVA,GC9DA0C,GAAA,WAYA,SAAAA,KAOA,2BAPCxyC,EAAAA,SAAQ/E,KAAA,CAAC,CACRgF,aAAc,CAAC6vC,GAAcnC,GAAcM,IAC3C/tC,QAAS,CAAC4vC,GAAcnC,IACxBxtC,QAAS,CAACC,EAAAA,cACVyB,gBAAiB,CAACosC,QAGpBuE,EAnBA,GCiJMC,GAAc,CAClB1yC,EAAoB6B,EAAgBoE,EAAkBsF,EAAmBK,EAAmBglB,GAC5F4D,GAAmBsI,GAAgBwC,GAAcuC,GAAqBuD,GAAkBU,GACxFkC,GAAiBiB,GAAiBkD,GAAqBgB,GAAgBQ,GAAkB8E,IAG3FE,GAAA,WAAA,SAAAA,KAEA,2BAFC1yC,EAAAA,SAAQ/E,KAAA,CAAC,CAACkF,QAASsyC,GAAavyC,QAASuyC,OAE1CC,EAFA","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export function toInteger(value: any): number {\n  return parseInt(`${value}`, 10);\n}\n\nexport function toString(value: any): string {\n  return (value !== undefined && value !== null) ? `${value}` : '';\n}\n\nexport function getValueInRange(value: number, max: number, min = 0): number {\n  return Math.max(Math.min(value, max), min);\n}\n\nexport function isString(value: any): value is string {\n  return typeof value === 'string';\n}\n\nexport function isNumber(value: any): value is number {\n  return !isNaN(toInteger(value));\n}\n\nexport function isInteger(value: any): value is number {\n  return typeof value === 'number' && isFinite(value) && Math.floor(value) === value;\n}\n\nexport function isDefined(value: any): boolean {\n  return value !== undefined && value !== null;\n}\n\nexport function padNumber(value: number) {\n  if (isNumber(value)) {\n    return `0${value}`.slice(-2);\n  } else {\n    return '';\n  }\n}\n\nexport function regExpEscape(text) {\n  return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n}\n\nexport function hasClassName(element: any, className: string): boolean {\n  return element && element.className && element.className.split &&\n      element.className.split(/\\s+/).indexOf(className) >= 0;\n}\n\nif (typeof Element !== 'undefined' && !Element.prototype.closest) {\n  // Polyfill for ie10+\n\n  if (!Element.prototype.matches) {\n    // IE uses the non-standard name: msMatchesSelector\n    Element.prototype.matches = (Element.prototype as any).msMatchesSelector || Element.prototype.webkitMatchesSelector;\n  }\n\n  Element.prototype.closest = function(s: string) {\n    let el = this;\n    if (!document.documentElement.contains(el)) {\n      return null;\n    }\n    do {\n      if (el.matches(s)) {\n        return el;\n      }\n      el = el.parentElement || el.parentNode;\n    } while (el !== null && el.nodeType === 1);\n    return null;\n  };\n}\n\nexport function closest(element: HTMLElement, selector): HTMLElement {\n  if (!selector) {\n    return null;\n  }\n\n  return element.closest(selector);\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * A configuration service for the [NgbAccordion](#/components/accordion/api#NgbAccordion) component.\n *\n * You can inject this service, typically in your root component, and customize its properties\n * to provide default values for all accordions used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbAccordionConfig {\n  closeOthers = false;\n  type: string;\n}\n","import {\n  AfterContentChecked,\n  Component,\n  ContentChildren,\n  Directive,\n  EventEmitter,\n  Host,\n  Input,\n  Optional,\n  Output,\n  QueryList,\n  TemplateRef,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport {isString} from '../util/util';\n\nimport {NgbAccordionConfig} from './accordion-config';\n\nlet nextId = 0;\n\n/**\n * The context for the [NgbPanelHeader](#/components/accordion/api#NgbPanelHeader) template\n *\n * @since 4.1.0\n */\nexport interface NgbPanelHeaderContext {\n  /**\n   * `True` if current panel is opened\n   */\n  opened: boolean;\n}\n\n/**\n * A directive that wraps an accordion panel header with any HTML markup and a toggling button\n * marked with [`NgbPanelToggle`](#/components/accordion/api#NgbPanelToggle).\n * See the [header customization demo](#/components/accordion/examples#header) for more details.\n *\n * You can also use [`NgbPanelTitle`](#/components/accordion/api#NgbPanelTitle) to customize only the panel title.\n *\n * @since 4.1.0\n */\n@Directive({selector: 'ng-template[ngbPanelHeader]'})\nexport class NgbPanelHeader {\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n\n/**\n * A directive that wraps only the panel title with HTML markup inside.\n *\n * You can also use [`NgbPanelHeader`](#/components/accordion/api#NgbPanelHeader) to customize the full panel header.\n */\n@Directive({selector: 'ng-template[ngbPanelTitle]'})\nexport class NgbPanelTitle {\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n\n/**\n * A directive that wraps the accordion panel content.\n */\n@Directive({selector: 'ng-template[ngbPanelContent]'})\nexport class NgbPanelContent {\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n\n/**\n * A directive that wraps an individual accordion panel with title and collapsible content.\n */\n@Directive({selector: 'ngb-panel'})\nexport class NgbPanel implements AfterContentChecked {\n  /**\n   *  If `true`, the panel is disabled an can't be toggled.\n   */\n  @Input() disabled = false;\n\n  /**\n   *  An optional id for the panel that must be unique on the page.\n   *\n   *  If not provided, it will be auto-generated in the `ngb-panel-xxx` format.\n   */\n  @Input() id = `ngb-panel-${nextId++}`;\n\n  isOpen = false;\n\n  /**\n   *  The panel title.\n   *\n   *  You can alternatively use [`NgbPanelTitle`](#/components/accordion/api#NgbPanelTitle) to set panel title.\n   */\n  @Input() title: string;\n\n  /**\n   * Type of the current panel.\n   *\n   * Bootstrap provides styles for the following types: `'success'`, `'info'`, `'warning'`, `'danger'`, `'primary'`,\n   * `'secondary'`, `'light'` and `'dark'`.\n   */\n  @Input() type: string;\n\n  titleTpl: NgbPanelTitle | null;\n  headerTpl: NgbPanelHeader | null;\n  contentTpl: NgbPanelContent | null;\n\n  @ContentChildren(NgbPanelTitle, {descendants: false}) titleTpls: QueryList<NgbPanelTitle>;\n  @ContentChildren(NgbPanelHeader, {descendants: false}) headerTpls: QueryList<NgbPanelHeader>;\n  @ContentChildren(NgbPanelContent, {descendants: false}) contentTpls: QueryList<NgbPanelContent>;\n\n  ngAfterContentChecked() {\n    // We are using @ContentChildren instead of @ContentChild as in the Angular version being used\n    // only @ContentChildren allows us to specify the {descendants: false} option.\n    // Without {descendants: false} we are hitting bugs described in:\n    // https://github.com/ng-bootstrap/ng-bootstrap/issues/2240\n    this.titleTpl = this.titleTpls.first;\n    this.headerTpl = this.headerTpls.first;\n    this.contentTpl = this.contentTpls.first;\n  }\n}\n\n/**\n * An event emitted right before toggling an accordion panel.\n */\nexport interface NgbPanelChangeEvent {\n  /**\n   * The id of the accordion panel that is being toggled.\n   */\n  panelId: string;\n\n  /**\n   * The next state of the panel.\n   *\n   * `true` if it will be opened, `false` if closed.\n   */\n  nextState: boolean;\n\n  /**\n   * Calling this function will prevent panel toggling.\n   */\n  preventDefault: () => void;\n}\n\n/**\n * Accordion is a collection of collapsible panels (bootstrap cards).\n *\n * It can ensure only one panel is opened at a time and allows to customize panel\n * headers.\n */\n@Component({\n  selector: 'ngb-accordion',\n  exportAs: 'ngbAccordion',\n  encapsulation: ViewEncapsulation.None,\n  host: {'class': 'accordion', 'role': 'tablist', '[attr.aria-multiselectable]': '!closeOtherPanels'},\n  template: `\n    <ng-template #t ngbPanelHeader let-panel>\n      <button class=\"btn btn-link\" [ngbPanelToggle]=\"panel\">\n        {{panel.title}}<ng-template [ngTemplateOutlet]=\"panel.titleTpl?.templateRef\"></ng-template>\n      </button>\n    </ng-template>\n    <ng-template ngFor let-panel [ngForOf]=\"panels\">\n      <div class=\"card\">\n        <div role=\"tab\" id=\"{{panel.id}}-header\" [class]=\"'card-header ' + (panel.type ? 'bg-'+panel.type: type ? 'bg-'+type : '')\">\n          <ng-template [ngTemplateOutlet]=\"panel.headerTpl?.templateRef || t\"\n                       [ngTemplateOutletContext]=\"{$implicit: panel, opened: panel.isOpen}\"></ng-template>\n        </div>\n        <div id=\"{{panel.id}}\" role=\"tabpanel\" [attr.aria-labelledby]=\"panel.id + '-header'\"\n             class=\"collapse\" [class.show]=\"panel.isOpen\" *ngIf=\"!destroyOnHide || panel.isOpen\">\n          <div class=\"card-body\">\n               <ng-template [ngTemplateOutlet]=\"panel.contentTpl?.templateRef\"></ng-template>\n          </div>\n        </div>\n      </div>\n    </ng-template>\n  `\n})\nexport class NgbAccordion implements AfterContentChecked {\n  @ContentChildren(NgbPanel) panels: QueryList<NgbPanel>;\n\n  /**\n   * An array or comma separated strings of panel ids that should be opened **initially**.\n   *\n   * For subsequent changes use methods like `expand()`, `collapse()`, etc. and\n   * the `(panelChange)` event.\n   */\n  @Input() activeIds: string | readonly string[] = [];\n\n  /**\n   *  If `true`, only one panel could be opened at a time.\n   *\n   *  Opening a new panel will close others.\n   */\n  @Input('closeOthers') closeOtherPanels: boolean;\n\n  /**\n   * If `true`, panel content will be detached from DOM and not simply hidden when the panel is collapsed.\n   */\n  @Input() destroyOnHide = true;\n\n  /**\n   * Type of panels.\n   *\n   * Bootstrap provides styles for the following types: `'success'`, `'info'`, `'warning'`, `'danger'`, `'primary'`,\n   * `'secondary'`, `'light'` and `'dark'`.\n   */\n  @Input() type: string;\n\n  /**\n   * Event emitted right before the panel toggle happens.\n   *\n   * See [NgbPanelChangeEvent](#/components/accordion/api#NgbPanelChangeEvent) for payload details.\n   */\n  @Output() panelChange = new EventEmitter<NgbPanelChangeEvent>();\n\n  constructor(config: NgbAccordionConfig) {\n    this.type = config.type;\n    this.closeOtherPanels = config.closeOthers;\n  }\n\n  /**\n   * Checks if a panel with a given id is expanded.\n   */\n  isExpanded(panelId: string): boolean { return this.activeIds.indexOf(panelId) > -1; }\n\n  /**\n   * Expands a panel with a given id.\n   *\n   * Has no effect if the panel is already expanded or disabled.\n   */\n  expand(panelId: string): void { this._changeOpenState(this._findPanelById(panelId), true); }\n\n  /**\n   * Expands all panels, if `[closeOthers]` is `false`.\n   *\n   * If `[closeOthers]` is `true`, it will expand the first panel, unless there is already a panel opened.\n   */\n  expandAll(): void {\n    if (this.closeOtherPanels) {\n      if (this.activeIds.length === 0 && this.panels.length) {\n        this._changeOpenState(this.panels.first, true);\n      }\n    } else {\n      this.panels.forEach(panel => this._changeOpenState(panel, true));\n    }\n  }\n\n  /**\n   * Collapses a panel with the given id.\n   *\n   * Has no effect if the panel is already collapsed or disabled.\n   */\n  collapse(panelId: string) { this._changeOpenState(this._findPanelById(panelId), false); }\n\n  /**\n   * Collapses all opened panels.\n   */\n  collapseAll() {\n    this.panels.forEach((panel) => { this._changeOpenState(panel, false); });\n  }\n\n  /**\n   * Toggles a panel with the given id.\n   *\n   * Has no effect if the panel is disabled.\n   */\n  toggle(panelId: string) {\n    const panel = this._findPanelById(panelId);\n    if (panel) {\n      this._changeOpenState(panel, !panel.isOpen);\n    }\n  }\n\n  ngAfterContentChecked() {\n    // active id updates\n    if (isString(this.activeIds)) {\n      this.activeIds = this.activeIds.split(/\\s*,\\s*/);\n    }\n\n    // update panels open states\n    this.panels.forEach(panel => panel.isOpen = !panel.disabled && this.activeIds.indexOf(panel.id) > -1);\n\n    // closeOthers updates\n    if (this.activeIds.length > 1 && this.closeOtherPanels) {\n      this._closeOthers(this.activeIds[0]);\n      this._updateActiveIds();\n    }\n  }\n\n  private _changeOpenState(panel: NgbPanel, nextState: boolean) {\n    if (panel && !panel.disabled && panel.isOpen !== nextState) {\n      let defaultPrevented = false;\n\n      this.panelChange.emit(\n          {panelId: panel.id, nextState: nextState, preventDefault: () => { defaultPrevented = true; }});\n\n      if (!defaultPrevented) {\n        panel.isOpen = nextState;\n\n        if (nextState && this.closeOtherPanels) {\n          this._closeOthers(panel.id);\n        }\n        this._updateActiveIds();\n      }\n    }\n  }\n\n  private _closeOthers(panelId: string) {\n    this.panels.forEach(panel => {\n      if (panel.id !== panelId) {\n        panel.isOpen = false;\n      }\n    });\n  }\n\n  private _findPanelById(panelId: string): NgbPanel | null { return this.panels.find(p => p.id === panelId); }\n\n  private _updateActiveIds() {\n    this.activeIds = this.panels.filter(panel => panel.isOpen && !panel.disabled).map(panel => panel.id);\n  }\n}\n\n/**\n * A directive to put on a button that toggles panel opening and closing.\n *\n * To be used inside the [`NgbPanelHeader`](#/components/accordion/api#NgbPanelHeader)\n *\n * @since 4.1.0\n */\n@Directive({\n  selector: 'button[ngbPanelToggle]',\n  host: {\n    'type': 'button',\n    '[disabled]': 'panel.disabled',\n    '[class.collapsed]': '!panel.isOpen',\n    '[attr.aria-expanded]': 'panel.isOpen',\n    '[attr.aria-controls]': 'panel.id',\n    '(click)': 'accordion.toggle(panel.id)'\n  }\n})\nexport class NgbPanelToggle {\n  @Input()\n  set ngbPanelToggle(panel: NgbPanel) {\n    if (panel) {\n      this.panel = panel;\n    }\n  }\n\n  constructor(public accordion: NgbAccordion, @Optional() @Host() public panel: NgbPanel) {}\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbAccordion, NgbPanel, NgbPanelTitle, NgbPanelContent, NgbPanelHeader, NgbPanelToggle} from './accordion';\n\nexport {\n  NgbAccordion,\n  NgbPanel,\n  NgbPanelTitle,\n  NgbPanelContent,\n  NgbPanelChangeEvent,\n  NgbPanelHeader,\n  NgbPanelHeaderContext,\n  NgbPanelToggle\n} from './accordion';\nexport {NgbAccordionConfig} from './accordion-config';\n\nconst NGB_ACCORDION_DIRECTIVES =\n    [NgbAccordion, NgbPanel, NgbPanelTitle, NgbPanelContent, NgbPanelHeader, NgbPanelToggle];\n\n@NgModule({declarations: NGB_ACCORDION_DIRECTIVES, exports: NGB_ACCORDION_DIRECTIVES, imports: [CommonModule]})\nexport class NgbAccordionModule {\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * A configuration service for the [NgbAlert](#/components/alert/api#NgbAlert) component.\n *\n * You can inject this service, typically in your root component, and customize its properties\n * to provide default values for all alerts used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbAlertConfig {\n  dismissible = true;\n  type = 'warning';\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  Renderer2,\n  ElementRef,\n  OnChanges,\n  OnInit,\n  SimpleChanges,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport {NgbAlertConfig} from './alert-config';\n\n/**\n * Alert is a component to provide contextual feedback messages for user.\n *\n * It supports several alert types and can be dismissed.\n */\n@Component({\n  selector: 'ngb-alert',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  host: {'role': 'alert', 'class': 'alert', '[class.alert-dismissible]': 'dismissible'},\n  template: `\n    <ng-content></ng-content>\n    <button *ngIf=\"dismissible\" type=\"button\" class=\"close\" aria-label=\"Close\" i18n-aria-label=\"@@ngb.alert.close\"\n      (click)=\"closeHandler()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    `,\n  styleUrls: ['./alert.scss']\n})\nexport class NgbAlert implements OnInit,\n    OnChanges {\n  /**\n   * If `true`, alert can be dismissed by the user.\n   *\n   * The close button (Ã) will be displayed and you can be notified\n   * of the event with the `(close)` output.\n   */\n  @Input() dismissible: boolean;\n  /**\n   * Type of the alert.\n   *\n   * Bootstrap provides styles for the following types: `'success'`, `'info'`, `'warning'`, `'danger'`, `'primary'`,\n   * `'secondary'`, `'light'` and `'dark'`.\n   */\n  @Input() type: string;\n  /**\n   * An event emitted when the close button is clicked. It has no payload and only relevant for dismissible alerts.\n   */\n  @Output() close = new EventEmitter<void>();\n\n  constructor(config: NgbAlertConfig, private _renderer: Renderer2, private _element: ElementRef) {\n    this.dismissible = config.dismissible;\n    this.type = config.type;\n  }\n\n  closeHandler() { this.close.emit(null); }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const typeChange = changes['type'];\n    if (typeChange && !typeChange.firstChange) {\n      this._renderer.removeClass(this._element.nativeElement, `alert-${typeChange.previousValue}`);\n      this._renderer.addClass(this._element.nativeElement, `alert-${typeChange.currentValue}`);\n    }\n  }\n\n  ngOnInit() { this._renderer.addClass(this._element.nativeElement, `alert-${this.type}`); }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbAlert} from './alert';\n\nexport {NgbAlert} from './alert';\nexport {NgbAlertConfig} from './alert-config';\n\n@NgModule({declarations: [NgbAlert], exports: [NgbAlert], imports: [CommonModule], entryComponents: [NgbAlert]})\nexport class NgbAlertModule {\n}\n","import {Directive} from '@angular/core';\n\n@Directive({\n  selector: '[ngbButtonLabel]',\n  host:\n      {'[class.btn]': 'true', '[class.active]': 'active', '[class.disabled]': 'disabled', '[class.focus]': 'focused'}\n})\nexport class NgbButtonLabel {\n  active: boolean;\n  disabled: boolean;\n  focused: boolean;\n}\n","import {ChangeDetectorRef, Directive, forwardRef, Input} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\n\nimport {NgbButtonLabel} from './label';\n\nconst NGB_CHECKBOX_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbCheckBox),\n  multi: true\n};\n\n\n/**\n * Allows to easily create Bootstrap-style checkbox buttons.\n *\n * Integrates with forms, so the value of a checked button is bound to the underlying form control\n * either in a reactive or template-driven way.\n */\n@Directive({\n  selector: '[ngbButton][type=checkbox]',\n  host: {\n    '[checked]': 'checked',\n    '[disabled]': 'disabled',\n    '(change)': 'onInputChange($event)',\n    '(focus)': 'focused = true',\n    '(blur)': 'focused = false'\n  },\n  providers: [NGB_CHECKBOX_VALUE_ACCESSOR]\n})\nexport class NgbCheckBox implements ControlValueAccessor {\n  checked;\n\n  /**\n   * If `true`, the checkbox button will be disabled\n   */\n  @Input() disabled = false;\n\n  /**\n   * The form control value when the checkbox is checked.\n   */\n  @Input() valueChecked = true;\n\n  /**\n   * The form control value when the checkbox is unchecked.\n   */\n  @Input() valueUnChecked = false;\n\n  onChange = (_: any) => {};\n  onTouched = () => {};\n\n  set focused(isFocused: boolean) {\n    this._label.focused = isFocused;\n    if (!isFocused) {\n      this.onTouched();\n    }\n  }\n\n  constructor(private _label: NgbButtonLabel, private _cd: ChangeDetectorRef) {}\n\n  onInputChange($event) {\n    const modelToPropagate = $event.target.checked ? this.valueChecked : this.valueUnChecked;\n    this.onChange(modelToPropagate);\n    this.onTouched();\n    this.writeValue(modelToPropagate);\n  }\n\n  registerOnChange(fn: (value: any) => any): void { this.onChange = fn; }\n\n  registerOnTouched(fn: () => any): void { this.onTouched = fn; }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n    this._label.disabled = isDisabled;\n  }\n\n  writeValue(value) {\n    this.checked = value === this.valueChecked;\n    this._label.active = this.checked;\n\n    // label won't be updated, if it is inside the OnPush component when [ngModel] changes\n    this._cd.markForCheck();\n  }\n}\n","import {ChangeDetectorRef, Directive, ElementRef, forwardRef, Input, OnDestroy, Renderer2} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\n\nimport {NgbButtonLabel} from './label';\n\nconst NGB_RADIO_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbRadioGroup),\n  multi: true\n};\n\nlet nextId = 0;\n\n/**\n * Allows to easily create Bootstrap-style radio buttons.\n *\n * Integrates with forms, so the value of a checked button is bound to the underlying form control\n * either in a reactive or template-driven way.\n */\n@Directive({selector: '[ngbRadioGroup]', host: {'role': 'radiogroup'}, providers: [NGB_RADIO_VALUE_ACCESSOR]})\nexport class NgbRadioGroup implements ControlValueAccessor {\n  private _radios: Set<NgbRadio> = new Set<NgbRadio>();\n  private _value = null;\n  private _disabled: boolean;\n\n  get disabled() { return this._disabled; }\n  set disabled(isDisabled: boolean) { this.setDisabledState(isDisabled); }\n\n  /**\n   * Name of the radio group applied to radio input elements.\n   *\n   * Will be applied to all radio input elements inside the group,\n   * unless [`NgbRadio`](#/components/buttons/api#NgbRadio)'s specify names themselves.\n   *\n   * If not provided, will be generated in the `ngb-radio-xx` format.\n   */\n  @Input() name = `ngb-radio-${nextId++}`;\n\n  onChange = (_: any) => {};\n  onTouched = () => {};\n\n  onRadioChange(radio: NgbRadio) {\n    this.writeValue(radio.value);\n    this.onChange(radio.value);\n  }\n\n  onRadioValueUpdate() { this._updateRadiosValue(); }\n\n  register(radio: NgbRadio) { this._radios.add(radio); }\n\n  registerOnChange(fn: (value: any) => any): void { this.onChange = fn; }\n\n  registerOnTouched(fn: () => any): void { this.onTouched = fn; }\n\n  setDisabledState(isDisabled: boolean): void {\n    this._disabled = isDisabled;\n    this._updateRadiosDisabled();\n  }\n\n  unregister(radio: NgbRadio) { this._radios.delete(radio); }\n\n  writeValue(value) {\n    this._value = value;\n    this._updateRadiosValue();\n  }\n\n  private _updateRadiosValue() { this._radios.forEach((radio) => radio.updateValue(this._value)); }\n  private _updateRadiosDisabled() { this._radios.forEach((radio) => radio.updateDisabled()); }\n}\n\n\n/**\n * A directive that marks an input of type \"radio\" as a part of the\n * [`NgbRadioGroup`](#/components/buttons/api#NgbRadioGroup).\n */\n@Directive({\n  selector: '[ngbButton][type=radio]',\n  host: {\n    '[checked]': 'checked',\n    '[disabled]': 'disabled',\n    '[name]': 'nameAttr',\n    '(change)': 'onChange()',\n    '(focus)': 'focused = true',\n    '(blur)': 'focused = false'\n  }\n})\nexport class NgbRadio implements OnDestroy {\n  private _checked: boolean;\n  private _disabled: boolean;\n  private _value: any = null;\n\n  /**\n   * The value for the 'name' property of the input element.\n   *\n   * All inputs of the radio group should have the same name. If not specified,\n   * the name of the enclosing group is used.\n   */\n  @Input() name: string;\n\n  /**\n   * The form control value when current radio button is checked.\n   */\n  @Input('value')\n  set value(value: any) {\n    this._value = value;\n    const stringValue = value ? value.toString() : '';\n    this._renderer.setProperty(this._element.nativeElement, 'value', stringValue);\n    this._group.onRadioValueUpdate();\n  }\n\n  /**\n   * If `true`, current radio button will be disabled.\n   */\n  @Input('disabled')\n  set disabled(isDisabled: boolean) {\n    this._disabled = isDisabled !== false;\n    this.updateDisabled();\n  }\n\n  set focused(isFocused: boolean) {\n    if (this._label) {\n      this._label.focused = isFocused;\n    }\n    if (!isFocused) {\n      this._group.onTouched();\n    }\n  }\n\n  get checked() { return this._checked; }\n\n  get disabled() { return this._group.disabled || this._disabled; }\n\n  get value() { return this._value; }\n\n  get nameAttr() { return this.name || this._group.name; }\n\n  constructor(\n      private _group: NgbRadioGroup, private _label: NgbButtonLabel, private _renderer: Renderer2,\n      private _element: ElementRef<HTMLInputElement>, private _cd: ChangeDetectorRef) {\n    this._group.register(this);\n    this.updateDisabled();\n  }\n\n  ngOnDestroy() { this._group.unregister(this); }\n\n  onChange() { this._group.onRadioChange(this); }\n\n  updateValue(value) {\n    // label won't be updated, if it is inside the OnPush component when [ngModel] changes\n    if (this.value !== value) {\n      this._cd.markForCheck();\n    }\n\n    this._checked = this.value === value;\n    this._label.active = this._checked;\n  }\n\n  updateDisabled() { this._label.disabled = this.disabled; }\n}\n","import {NgModule} from '@angular/core';\nimport {NgbButtonLabel} from './label';\nimport {NgbCheckBox} from './checkbox';\nimport {NgbRadio, NgbRadioGroup} from './radio';\n\nexport {NgbButtonLabel} from './label';\nexport {NgbCheckBox} from './checkbox';\nexport {NgbRadio, NgbRadioGroup} from './radio';\n\n\nconst NGB_BUTTON_DIRECTIVES = [NgbButtonLabel, NgbCheckBox, NgbRadioGroup, NgbRadio];\n\n@NgModule({declarations: NGB_BUTTON_DIRECTIVES, exports: NGB_BUTTON_DIRECTIVES})\nexport class NgbButtonsModule {\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * A configuration service for the [NgbCarousel](#/components/carousel/api#NgbCarousel) component.\n *\n * You can inject this service, typically in your root component, and customize its properties\n * to provide default values for all carousels used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbCarouselConfig {\n  interval = 5000;\n  wrap = true;\n  keyboard = true;\n  pauseOnHover = true;\n  showNavigationArrows = true;\n  showNavigationIndicators = true;\n}\n","import {\n  AfterContentChecked,\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  Directive,\n  EventEmitter,\n  HostListener,\n  Inject,\n  Input,\n  NgZone,\n  OnDestroy,\n  Output,\n  PLATFORM_ID,\n  QueryList,\n  TemplateRef,\n  ViewEncapsulation\n} from '@angular/core';\nimport {isPlatformBrowser} from '@angular/common';\n\nimport {NgbCarouselConfig} from './carousel-config';\n\nimport {BehaviorSubject, combineLatest, NEVER, Subject, timer} from 'rxjs';\nimport {distinctUntilChanged, map, startWith, switchMap, takeUntil} from 'rxjs/operators';\n\nlet nextId = 0;\n\n/**\n * A directive that wraps the individual carousel slide.\n */\n@Directive({selector: 'ng-template[ngbSlide]'})\nexport class NgbSlide {\n  /**\n   * Slide id that must be unique for the entire document.\n   *\n   * If not provided, will be generated in the `ngb-slide-xx` format.\n   */\n  @Input() id = `ngb-slide-${nextId++}`;\n  constructor(public tplRef: TemplateRef<any>) {}\n}\n\n/**\n * Carousel is a component to easily create and control slideshows.\n *\n * Allows to set intervals, change the way user interacts with the slides and provides a programmatic API.\n */\n@Component({\n  selector: 'ngb-carousel',\n  exportAs: 'ngbCarousel',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  host: {\n    'class': 'carousel slide',\n    '[style.display]': '\"block\"',\n    'tabIndex': '0',\n    '(keydown.arrowLeft)': 'keyboard && prev(NgbSlideEventSource.ARROW_LEFT)',\n    '(keydown.arrowRight)': 'keyboard && next(NgbSlideEventSource.ARROW_RIGHT)'\n  },\n  template: `\n    <ol class=\"carousel-indicators\" *ngIf=\"showNavigationIndicators\">\n      <li *ngFor=\"let slide of slides\" [id]=\"slide.id\" [class.active]=\"slide.id === activeId\"\n          (click)=\"select(slide.id, NgbSlideEventSource.INDICATOR)\"></li>\n    </ol>\n    <div class=\"carousel-inner\">\n      <div *ngFor=\"let slide of slides\" class=\"carousel-item\" [class.active]=\"slide.id === activeId\">\n        <ng-template [ngTemplateOutlet]=\"slide.tplRef\"></ng-template>\n      </div>\n    </div>\n    <a class=\"carousel-control-prev\" role=\"button\" (click)=\"prev(NgbSlideEventSource.ARROW_LEFT)\" *ngIf=\"showNavigationArrows\">\n      <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n      <span class=\"sr-only\" i18n=\"@@ngb.carousel.previous\">Previous</span>\n    </a>\n    <a class=\"carousel-control-next\" role=\"button\" (click)=\"next(NgbSlideEventSource.ARROW_RIGHT)\" *ngIf=\"showNavigationArrows\">\n      <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n      <span class=\"sr-only\" i18n=\"@@ngb.carousel.next\">Next</span>\n    </a>\n  `\n})\nexport class NgbCarousel implements AfterContentChecked,\n    AfterContentInit, OnDestroy {\n  @ContentChildren(NgbSlide) slides: QueryList<NgbSlide>;\n\n  public NgbSlideEventSource = NgbSlideEventSource;\n\n  private _destroy$ = new Subject<void>();\n  private _interval$ = new BehaviorSubject(0);\n  private _mouseHover$ = new BehaviorSubject(false);\n  private _pauseOnHover$ = new BehaviorSubject(false);\n  private _pause$ = new BehaviorSubject(false);\n  private _wrap$ = new BehaviorSubject(false);\n\n  /**\n   * The slide id that should be displayed **initially**.\n   *\n   * For subsequent interactions use methods `select()`, `next()`, etc. and the `(slide)` output.\n   */\n  @Input() activeId: string;\n\n  /**\n   * Time in milliseconds before the next slide is shown.\n   */\n  @Input()\n  set interval(value: number) {\n    this._interval$.next(value);\n  }\n\n  get interval() { return this._interval$.value; }\n\n  /**\n   * If `true`, will 'wrap' the carousel by switching from the last slide back to the first.\n   */\n  @Input()\n  set wrap(value: boolean) {\n    this._wrap$.next(value);\n  }\n\n  get wrap() { return this._wrap$.value; }\n\n  /**\n   * If `true`, allows to interact with carousel using keyboard 'arrow left' and 'arrow right'.\n   */\n  @Input() keyboard: boolean;\n\n  /**\n   * If `true`, will pause slide switching when mouse cursor hovers the slide.\n   *\n   * @since 2.2.0\n   */\n  @Input()\n  set pauseOnHover(value: boolean) {\n    this._pauseOnHover$.next(value);\n  }\n\n  get pauseOnHover() { return this._pauseOnHover$.value; }\n\n  /**\n   * If `true`, 'previous' and 'next' navigation arrows will be visible on the slide.\n   *\n   * @since 2.2.0\n   */\n  @Input() showNavigationArrows: boolean;\n\n  /**\n   * If `true`, navigation indicators at the bottom of the slide will be visible.\n   *\n   * @since 2.2.0\n   */\n  @Input() showNavigationIndicators: boolean;\n\n  /**\n   * An event emitted right after the slide transition is completed.\n   *\n   * See [`NgbSlideEvent`](#/components/carousel/api#NgbSlideEvent) for payload details.\n   */\n  @Output() slide = new EventEmitter<NgbSlideEvent>();\n\n  constructor(\n      config: NgbCarouselConfig, @Inject(PLATFORM_ID) private _platformId, private _ngZone: NgZone,\n      private _cd: ChangeDetectorRef) {\n    this.interval = config.interval;\n    this.wrap = config.wrap;\n    this.keyboard = config.keyboard;\n    this.pauseOnHover = config.pauseOnHover;\n    this.showNavigationArrows = config.showNavigationArrows;\n    this.showNavigationIndicators = config.showNavigationIndicators;\n  }\n\n  @HostListener('mouseenter')\n  mouseEnter() {\n    this._mouseHover$.next(true);\n  }\n\n  @HostListener('mouseleave')\n  mouseLeave() {\n    this._mouseHover$.next(false);\n  }\n\n  ngAfterContentInit() {\n    // setInterval() doesn't play well with SSR and protractor,\n    // so we should run it in the browser and outside Angular\n    if (isPlatformBrowser(this._platformId)) {\n      this._ngZone.runOutsideAngular(() => {\n        const hasNextSlide$ = combineLatest(\n                                  this.slide.pipe(map(slideEvent => slideEvent.current), startWith(this.activeId)),\n                                  this._wrap$, this.slides.changes.pipe(startWith(null)))\n                                  .pipe(\n                                      map(([currentSlideId, wrap]) => {\n                                        const slideArr = this.slides.toArray();\n                                        const currentSlideIdx = this._getSlideIdxById(currentSlideId);\n                                        return wrap ? slideArr.length > 1 : currentSlideIdx < slideArr.length - 1;\n                                      }),\n                                      distinctUntilChanged());\n        combineLatest(this._pause$, this._pauseOnHover$, this._mouseHover$, this._interval$, hasNextSlide$)\n            .pipe(\n                map(([pause, pauseOnHover, mouseHover, interval, hasNextSlide]) =>\n                        ((pause || (pauseOnHover && mouseHover) || !hasNextSlide) ? 0 : interval)),\n\n                distinctUntilChanged(), switchMap(interval => interval > 0 ? timer(interval, interval) : NEVER),\n                takeUntil(this._destroy$))\n            .subscribe(() => this._ngZone.run(() => this.next(NgbSlideEventSource.TIMER)));\n      });\n    }\n\n    this.slides.changes.pipe(takeUntil(this._destroy$)).subscribe(() => this._cd.markForCheck());\n  }\n\n  ngAfterContentChecked() {\n    let activeSlide = this._getSlideById(this.activeId);\n    this.activeId = activeSlide ? activeSlide.id : (this.slides.length ? this.slides.first.id : null);\n  }\n\n  ngOnDestroy() { this._destroy$.next(); }\n\n  /**\n   * Navigates to a slide with the specified identifier.\n   */\n  select(slideId: string, source?: NgbSlideEventSource) {\n    this._cycleToSelected(slideId, this._getSlideEventDirection(this.activeId, slideId), source);\n  }\n\n  /**\n   * Navigates to the previous slide.\n   */\n  prev(source?: NgbSlideEventSource) {\n    this._cycleToSelected(this._getPrevSlide(this.activeId), NgbSlideEventDirection.RIGHT, source);\n  }\n\n  /**\n   * Navigates to the next slide.\n   */\n  next(source?: NgbSlideEventSource) {\n    this._cycleToSelected(this._getNextSlide(this.activeId), NgbSlideEventDirection.LEFT, source);\n  }\n\n  /**\n   * Pauses cycling through the slides.\n   */\n  pause() { this._pause$.next(true); }\n\n  /**\n   * Restarts cycling through the slides from left to right.\n   */\n  cycle() { this._pause$.next(false); }\n\n  private _cycleToSelected(slideIdx: string, direction: NgbSlideEventDirection, source?: NgbSlideEventSource) {\n    let selectedSlide = this._getSlideById(slideIdx);\n    if (selectedSlide && selectedSlide.id !== this.activeId) {\n      this.slide.emit(\n          {prev: this.activeId, current: selectedSlide.id, direction: direction, paused: this._pause$.value, source});\n      this.activeId = selectedSlide.id;\n    }\n\n    // we get here after the interval fires or any external API call like next(), prev() or select()\n    this._cd.markForCheck();\n  }\n\n  private _getSlideEventDirection(currentActiveSlideId: string, nextActiveSlideId: string): NgbSlideEventDirection {\n    const currentActiveSlideIdx = this._getSlideIdxById(currentActiveSlideId);\n    const nextActiveSlideIdx = this._getSlideIdxById(nextActiveSlideId);\n\n    return currentActiveSlideIdx > nextActiveSlideIdx ? NgbSlideEventDirection.RIGHT : NgbSlideEventDirection.LEFT;\n  }\n\n  private _getSlideById(slideId: string): NgbSlide { return this.slides.find(slide => slide.id === slideId); }\n\n  private _getSlideIdxById(slideId: string): number {\n    return this.slides.toArray().indexOf(this._getSlideById(slideId));\n  }\n\n  private _getNextSlide(currentSlideId: string): string {\n    const slideArr = this.slides.toArray();\n    const currentSlideIdx = this._getSlideIdxById(currentSlideId);\n    const isLastSlide = currentSlideIdx === slideArr.length - 1;\n\n    return isLastSlide ? (this.wrap ? slideArr[0].id : slideArr[slideArr.length - 1].id) :\n                         slideArr[currentSlideIdx + 1].id;\n  }\n\n  private _getPrevSlide(currentSlideId: string): string {\n    const slideArr = this.slides.toArray();\n    const currentSlideIdx = this._getSlideIdxById(currentSlideId);\n    const isFirstSlide = currentSlideIdx === 0;\n\n    return isFirstSlide ? (this.wrap ? slideArr[slideArr.length - 1].id : slideArr[0].id) :\n                          slideArr[currentSlideIdx - 1].id;\n  }\n}\n\n/**\n * A slide change event emitted right after the slide transition is completed.\n */\nexport interface NgbSlideEvent {\n  /**\n   * The previous slide id.\n   */\n  prev: string;\n\n  /**\n   * The current slide id.\n   */\n  current: string;\n\n  /**\n   * The slide event direction.\n   *\n   * Possible values are `'left' | 'right'`.\n   */\n  direction: NgbSlideEventDirection;\n\n  /**\n   * Whether the pause() method was called (and no cycle() call was done afterwards).\n   *\n   * @since 5.1.0\n   */\n  paused: boolean;\n\n  /**\n   * Source triggering the slide change event.\n   *\n   * Possible values are `'timer' | 'arrowLeft' | 'arrowRight' | 'indicator'`\n   *\n   * @since 5.1.0\n   */\n  source?: NgbSlideEventSource;\n}\n\n/**\n * Defines the carousel slide transition direction.\n */\nexport enum NgbSlideEventDirection {\n  LEFT = <any>'left',\n  RIGHT = <any>'right'\n}\n\nexport enum NgbSlideEventSource {\n  TIMER = 'timer',\n  ARROW_LEFT = 'arrowLeft',\n  ARROW_RIGHT = 'arrowRight',\n  INDICATOR = 'indicator'\n}\n\nexport const NGB_CAROUSEL_DIRECTIVES = [NgbCarousel, NgbSlide];\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NGB_CAROUSEL_DIRECTIVES} from './carousel';\n\nexport {NgbCarousel, NgbSlide, NgbSlideEvent, NgbSlideEventDirection, NgbSlideEventSource} from './carousel';\nexport {NgbCarouselConfig} from './carousel-config';\n\n@NgModule({declarations: NGB_CAROUSEL_DIRECTIVES, exports: NGB_CAROUSEL_DIRECTIVES, imports: [CommonModule]})\nexport class NgbCarouselModule {\n}\n","import {Directive, Input} from '@angular/core';\n\n/**\n * A directive to provide a simple way of hiding and showing elements on the page.\n */\n@Directive({\n  selector: '[ngbCollapse]',\n  exportAs: 'ngbCollapse',\n  host: {'[class.collapse]': 'true', '[class.show]': '!collapsed'}\n})\nexport class NgbCollapse {\n  /**\n   * If `true`, will collapse the element or show it otherwise.\n   */\n  @Input('ngbCollapse') collapsed = false;\n}\n","import {NgModule} from '@angular/core';\nimport {NgbCollapse} from './collapse';\n\nexport {NgbCollapse} from './collapse';\n\n@NgModule({declarations: [NgbCollapse], exports: [NgbCollapse]})\nexport class NgbCollapseModule {\n}\n","import {NgbDateStruct} from './ngb-date-struct';\nimport {isInteger} from '../util/util';\n\n/**\n * A simple class that represents a date that datepicker also uses internally.\n *\n * It is the implementation of the `NgbDateStruct` interface that adds some convenience methods,\n * like `.equals()`, `.before()`, etc.\n *\n * All datepicker APIs consume `NgbDateStruct`, but return `NgbDate`.\n *\n * In many cases it is simpler to manipulate these objects together with\n * [`NgbCalendar`](#/components/datepicker/api#NgbCalendar) than native JS Dates.\n *\n * See the [date format overview](#/components/datepicker/overview#date-model) for more details.\n *\n * @since 3.0.0\n */\nexport class NgbDate implements NgbDateStruct {\n  /**\n   * The year, for example 2016\n   */\n  year: number;\n\n  /**\n   * The month, for example 1=Jan ... 12=Dec as in ISO 8601\n   */\n  month: number;\n\n  /**\n   * The day of month, starting with 1\n   */\n  day: number;\n\n  /**\n   * A **static method** that creates a new date object from the `NgbDateStruct`,\n   *\n   * ex. `NgbDate.from({year: 2000, month: 5, day: 1})`.\n   *\n   * If the `date` is already of `NgbDate` type, the method will return the same object.\n   */\n  static from(date: NgbDateStruct): NgbDate {\n    if (date instanceof NgbDate) {\n      return date;\n    }\n    return date ? new NgbDate(date.year, date.month, date.day) : null;\n  }\n\n  constructor(year: number, month: number, day: number) {\n    this.year = isInteger(year) ? year : null;\n    this.month = isInteger(month) ? month : null;\n    this.day = isInteger(day) ? day : null;\n  }\n\n  /**\n   * Checks if the current date is equal to another date.\n   */\n  equals(other: NgbDateStruct): boolean {\n    return other && this.year === other.year && this.month === other.month && this.day === other.day;\n  }\n\n  /**\n   * Checks if the current date is before another date.\n   */\n  before(other: NgbDateStruct): boolean {\n    if (!other) {\n      return false;\n    }\n\n    if (this.year === other.year) {\n      if (this.month === other.month) {\n        return this.day === other.day ? false : this.day < other.day;\n      } else {\n        return this.month < other.month;\n      }\n    } else {\n      return this.year < other.year;\n    }\n  }\n\n  /**\n   * Checks if the current date is after another date.\n   */\n  after(other: NgbDateStruct): boolean {\n    if (!other) {\n      return false;\n    }\n    if (this.year === other.year) {\n      if (this.month === other.month) {\n        return this.day === other.day ? false : this.day > other.day;\n      } else {\n        return this.month > other.month;\n      }\n    } else {\n      return this.year > other.year;\n    }\n  }\n}\n","import {NgbDate} from './ngb-date';\nimport {Injectable} from '@angular/core';\nimport {isInteger} from '../util/util';\n\nexport function fromJSDate(jsDate: Date) {\n  return new NgbDate(jsDate.getFullYear(), jsDate.getMonth() + 1, jsDate.getDate());\n}\nexport function toJSDate(date: NgbDate) {\n  const jsDate = new Date(date.year, date.month - 1, date.day, 12);\n  // this is done avoid 30 -> 1930 conversion\n  if (!isNaN(jsDate.getTime())) {\n    jsDate.setFullYear(date.year);\n  }\n  return jsDate;\n}\n\nexport type NgbPeriod = 'y' | 'm' | 'd';\n\nexport function NGB_DATEPICKER_CALENDAR_FACTORY() {\n  return new NgbCalendarGregorian();\n}\n\n/**\n * A service that represents the calendar used by the datepicker.\n *\n * The default implementation uses the Gregorian calendar. You can inject it in your own\n * implementations if necessary to simplify `NgbDate` calculations.\n */\n@Injectable({providedIn: 'root', useFactory: NGB_DATEPICKER_CALENDAR_FACTORY})\nexport abstract class NgbCalendar {\n  /**\n   * Returns the number of days per week.\n   */\n  abstract getDaysPerWeek(): number;\n\n  /**\n   * Returns an array of months per year.\n   *\n   * With default calendar we use ISO 8601 and return [1, 2, ..., 12];\n   */\n  abstract getMonths(year?: number): number[];\n\n  /**\n   * Returns the number of weeks per month.\n   */\n  abstract getWeeksPerMonth(): number;\n\n  /**\n   * Returns the weekday number for a given day.\n   *\n   * With the default calendar we use ISO 8601: 'weekday' is 1=Mon ... 7=Sun\n   */\n  abstract getWeekday(date: NgbDate): number;\n\n  /**\n   * Adds a number of years, months or days to a given date.\n   *\n   * * `period` can be `y`, `m` or `d` and defaults to day.\n   * * `number` defaults to 1.\n   *\n   * Always returns a new date.\n   */\n  abstract getNext(date: NgbDate, period?: NgbPeriod, number?: number): NgbDate;\n\n  /**\n   * Subtracts a number of years, months or days from a given date.\n   *\n   * * `period` can be `y`, `m` or `d` and defaults to day.\n   * * `number` defaults to 1.\n   *\n   * Always returns a new date.\n   */\n  abstract getPrev(date: NgbDate, period?: NgbPeriod, number?: number): NgbDate;\n\n  /**\n   * Returns the week number for a given week.\n   */\n  abstract getWeekNumber(week: readonly NgbDate[], firstDayOfWeek: number): number;\n\n  /**\n   * Returns the today's date.\n   */\n  abstract getToday(): NgbDate;\n\n  /**\n   * Checks if a date is valid in the current calendar.\n   */\n  abstract isValid(date: NgbDate): boolean;\n}\n\n@Injectable()\nexport class NgbCalendarGregorian extends NgbCalendar {\n  getDaysPerWeek() { return 7; }\n\n  getMonths() { return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]; }\n\n  getWeeksPerMonth() { return 6; }\n\n  getNext(date: NgbDate, period: NgbPeriod = 'd', number = 1) {\n    let jsDate = toJSDate(date);\n    let checkMonth = true;\n    let expectedMonth = jsDate.getMonth();\n\n    switch (period) {\n      case 'y':\n        jsDate.setFullYear(jsDate.getFullYear() + number);\n        break;\n      case 'm':\n        expectedMonth += number;\n        jsDate.setMonth(expectedMonth);\n        expectedMonth = expectedMonth % 12;\n        if (expectedMonth < 0) {\n          expectedMonth = expectedMonth + 12;\n        }\n        break;\n      case 'd':\n        jsDate.setDate(jsDate.getDate() + number);\n        checkMonth = false;\n        break;\n      default:\n        return date;\n    }\n\n    if (checkMonth && jsDate.getMonth() !== expectedMonth) {\n      // this means the destination month has less days than the initial month\n      // let's go back to the end of the previous month:\n      jsDate.setDate(0);\n    }\n\n    return fromJSDate(jsDate);\n  }\n\n  getPrev(date: NgbDate, period: NgbPeriod = 'd', number = 1) { return this.getNext(date, period, -number); }\n\n  getWeekday(date: NgbDate) {\n    let jsDate = toJSDate(date);\n    let day = jsDate.getDay();\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    return day === 0 ? 7 : day;\n  }\n\n  getWeekNumber(week: readonly NgbDate[], firstDayOfWeek: number) {\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    if (firstDayOfWeek === 7) {\n      firstDayOfWeek = 0;\n    }\n\n    const thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n    let date = week[thursdayIndex];\n\n    const jsDate = toJSDate(date);\n    jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7));  // Thursday\n    const time = jsDate.getTime();\n    jsDate.setMonth(0);  // Compare with Jan 1\n    jsDate.setDate(1);\n    return Math.floor(Math.round((time - jsDate.getTime()) / 86400000) / 7) + 1;\n  }\n\n  getToday(): NgbDate { return fromJSDate(new Date()); }\n\n  isValid(date: NgbDate): boolean {\n    if (!date || !isInteger(date.year) || !isInteger(date.month) || !isInteger(date.day)) {\n      return false;\n    }\n\n    // year 0 doesn't exist in Gregorian calendar\n    if (date.year === 0) {\n      return false;\n    }\n\n    const jsDate = toJSDate(date);\n\n    return !isNaN(jsDate.getTime()) && jsDate.getFullYear() === date.year && jsDate.getMonth() + 1 === date.month &&\n        jsDate.getDate() === date.day;\n  }\n}\n","import {NgbDate} from './ngb-date';\nimport {DatepickerViewModel, DayViewModel, MonthViewModel} from './datepicker-view-model';\nimport {NgbCalendar} from './ngb-calendar';\nimport {isDefined} from '../util/util';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\n\nexport function isChangedDate(prev: NgbDate, next: NgbDate) {\n  return !dateComparator(prev, next);\n}\n\nexport function isChangedMonth(prev: NgbDate, next: NgbDate) {\n  return !prev && !next ? false : !prev || !next ? true : prev.year !== next.year || prev.month !== next.month;\n}\n\nexport function dateComparator(prev: NgbDate, next: NgbDate) {\n  return (!prev && !next) || (!!prev && !!next && prev.equals(next));\n}\n\nexport function checkMinBeforeMax(minDate: NgbDate, maxDate: NgbDate) {\n  if (maxDate && minDate && maxDate.before(minDate)) {\n    throw new Error(`'maxDate' ${maxDate} should be greater than 'minDate' ${minDate}`);\n  }\n}\n\nexport function checkDateInRange(date: NgbDate, minDate: NgbDate, maxDate: NgbDate): NgbDate {\n  if (date && minDate && date.before(minDate)) {\n    return minDate;\n  }\n  if (date && maxDate && date.after(maxDate)) {\n    return maxDate;\n  }\n\n  return date;\n}\n\nexport function isDateSelectable(date: NgbDate, state: DatepickerViewModel) {\n  const {minDate, maxDate, disabled, markDisabled} = state;\n  // clang-format off\n  return !(\n    !isDefined(date) ||\n    disabled ||\n    (markDisabled && markDisabled(date, {year: date.year, month: date.month})) ||\n    (minDate && date.before(minDate)) ||\n    (maxDate && date.after(maxDate))\n  );\n  // clang-format on\n}\n\nexport function generateSelectBoxMonths(calendar: NgbCalendar, date: NgbDate, minDate: NgbDate, maxDate: NgbDate) {\n  if (!date) {\n    return [];\n  }\n\n  let months = calendar.getMonths(date.year);\n\n  if (minDate && date.year === minDate.year) {\n    const index = months.findIndex(month => month === minDate.month);\n    months = months.slice(index);\n  }\n\n  if (maxDate && date.year === maxDate.year) {\n    const index = months.findIndex(month => month === maxDate.month);\n    months = months.slice(0, index + 1);\n  }\n\n  return months;\n}\n\nexport function generateSelectBoxYears(date: NgbDate, minDate: NgbDate, maxDate: NgbDate) {\n  if (!date) {\n    return [];\n  }\n\n  const start = minDate ? Math.max(minDate.year, date.year - 500) : date.year - 10;\n  const end = maxDate ? Math.min(maxDate.year, date.year + 500) : date.year + 10;\n\n  const length = end - start + 1;\n  const numbers = Array(length);\n  for (let i = 0; i < length; i++) {\n    numbers[i] = start + i;\n  }\n\n  return numbers;\n}\n\nexport function nextMonthDisabled(calendar: NgbCalendar, date: NgbDate, maxDate: NgbDate) {\n  const nextDate = Object.assign(calendar.getNext(date, 'm'), {day: 1});\n  return maxDate && nextDate.after(maxDate);\n}\n\nexport function prevMonthDisabled(calendar: NgbCalendar, date: NgbDate, minDate: NgbDate) {\n  const prevDate = Object.assign(calendar.getPrev(date, 'm'), {day: 1});\n  return minDate && (prevDate.year === minDate.year && prevDate.month < minDate.month ||\n                     prevDate.year < minDate.year && minDate.month === 1);\n}\n\nexport function buildMonths(\n    calendar: NgbCalendar, date: NgbDate, state: DatepickerViewModel, i18n: NgbDatepickerI18n,\n    force: boolean): MonthViewModel[] {\n  const {displayMonths, months} = state;\n  // move old months to a temporary array\n  const monthsToReuse = months.splice(0, months.length);\n\n  // generate new first dates, nullify or reuse months\n  const firstDates = Array.from({length: displayMonths}, (_, i) => {\n    const firstDate = Object.assign(calendar.getNext(date, 'm', i), {day: 1});\n    months[i] = null;\n\n    if (!force) {\n      const reusedIndex = monthsToReuse.findIndex(month => month.firstDate.equals(firstDate));\n      // move reused month back to months\n      if (reusedIndex !== -1) {\n        months[i] = monthsToReuse.splice(reusedIndex, 1)[0];\n      }\n    }\n\n    return firstDate;\n  });\n\n  // rebuild nullified months\n  firstDates.forEach((firstDate, i) => {\n    if (months[i] === null) {\n      months[i] = buildMonth(calendar, firstDate, state, i18n, monthsToReuse.shift() || {} as MonthViewModel);\n    }\n  });\n\n  return months;\n}\n\nexport function buildMonth(\n    calendar: NgbCalendar, date: NgbDate, state: DatepickerViewModel, i18n: NgbDatepickerI18n,\n    month: MonthViewModel = {} as MonthViewModel): MonthViewModel {\n  const {dayTemplateData, minDate, maxDate, firstDayOfWeek, markDisabled, outsideDays} = state;\n  const calendarToday = calendar.getToday();\n\n  month.firstDate = null;\n  month.lastDate = null;\n  month.number = date.month;\n  month.year = date.year;\n  month.weeks = month.weeks || [];\n  month.weekdays = month.weekdays || [];\n\n  date = getFirstViewDate(calendar, date, firstDayOfWeek);\n\n  // month has weeks\n  for (let week = 0; week < calendar.getWeeksPerMonth(); week++) {\n    let weekObject = month.weeks[week];\n    if (!weekObject) {\n      weekObject = month.weeks[week] = {number: 0, days: [], collapsed: true};\n    }\n    const days = weekObject.days;\n\n    // week has days\n    for (let day = 0; day < calendar.getDaysPerWeek(); day++) {\n      if (week === 0) {\n        month.weekdays[day] = calendar.getWeekday(date);\n      }\n\n      const newDate = new NgbDate(date.year, date.month, date.day);\n      const nextDate = calendar.getNext(newDate);\n\n      const ariaLabel = i18n.getDayAriaLabel(newDate);\n\n      // marking date as disabled\n      let disabled = !!((minDate && newDate.before(minDate)) || (maxDate && newDate.after(maxDate)));\n      if (!disabled && markDisabled) {\n        disabled = markDisabled(newDate, {month: month.number, year: month.year});\n      }\n\n      // today\n      let today = newDate.equals(calendarToday);\n\n      // adding user-provided data to the context\n      let contextUserData =\n          dayTemplateData ? dayTemplateData(newDate, {month: month.number, year: month.year}) : undefined;\n\n      // saving first date of the month\n      if (month.firstDate === null && newDate.month === month.number) {\n        month.firstDate = newDate;\n      }\n\n      // saving last date of the month\n      if (newDate.month === month.number && nextDate.month !== month.number) {\n        month.lastDate = newDate;\n      }\n\n      let dayObject = days[day];\n      if (!dayObject) {\n        dayObject = days[day] = {} as DayViewModel;\n      }\n      dayObject.date = newDate;\n      dayObject.context = Object.assign(dayObject.context || {}, {\n        $implicit: newDate,\n        date: newDate,\n        data: contextUserData,\n        currentMonth: month.number,\n        currentYear: month.year, disabled,\n        focused: false,\n        selected: false, today\n      });\n      dayObject.tabindex = -1;\n      dayObject.ariaLabel = ariaLabel;\n      dayObject.hidden = false;\n\n      date = nextDate;\n    }\n\n    weekObject.number = calendar.getWeekNumber(days.map(day => day.date), firstDayOfWeek);\n\n    // marking week as collapsed\n    weekObject.collapsed = outsideDays === 'collapsed' && days[0].date.month !== month.number &&\n        days[days.length - 1].date.month !== month.number;\n  }\n\n  return month;\n}\n\nexport function getFirstViewDate(calendar: NgbCalendar, date: NgbDate, firstDayOfWeek: number): NgbDate {\n  const daysPerWeek = calendar.getDaysPerWeek();\n  const firstMonthDate = new NgbDate(date.year, date.month, 1);\n  const dayOfWeek = calendar.getWeekday(firstMonthDate) % daysPerWeek;\n  return calendar.getPrev(firstMonthDate, 'd', (daysPerWeek + dayOfWeek - firstDayOfWeek) % daysPerWeek);\n}\n","import {Inject, Injectable, LOCALE_ID} from '@angular/core';\nimport {FormStyle, getLocaleDayNames, getLocaleMonthNames, TranslationWidth, formatDate} from '@angular/common';\nimport {NgbDateStruct} from './ngb-date-struct';\n\nexport function NGB_DATEPICKER_18N_FACTORY(locale) {\n  return new NgbDatepickerI18nDefault(locale);\n}\n\n/**\n * A service supplying i18n data to the datepicker component.\n *\n * The default implementation of this service uses the Angular locale and registered locale data for\n * weekdays and month names (as explained in the Angular i18n guide).\n *\n * It also provides a way to i18n data that depends on calendar calculations, like aria labels, day, week and year\n * numerals. For other static labels the datepicker uses the default Angular i18n.\n *\n * See the [i18n demo](#/components/datepicker/examples#i18n) and\n * [Hebrew calendar demo](#/components/datepicker/calendars#hebrew) on how to extend this class and define\n * a custom provider for i18n.\n */\n@Injectable({providedIn: 'root', useFactory: NGB_DATEPICKER_18N_FACTORY, deps: [LOCALE_ID]})\nexport abstract class NgbDatepickerI18n {\n  /**\n   * Returns the short weekday name to display in the heading of the month view.\n   *\n   * With default calendar we use ISO 8601: 'weekday' is 1=Mon ... 7=Sun.\n   */\n  abstract getWeekdayShortName(weekday: number): string;\n\n  /**\n   * Returns the short month name to display in the date picker navigation.\n   *\n   * With default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n   */\n  abstract getMonthShortName(month: number, year?: number): string;\n\n  /**\n   * Returns the full month name to display in the date picker navigation.\n   *\n   * With default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n   */\n  abstract getMonthFullName(month: number, year?: number): string;\n\n  /**\n   * Returns the value of the `aria-label` attribute for a specific date.\n   *\n   * @since 2.0.0\n   */\n  abstract getDayAriaLabel(date: NgbDateStruct): string;\n\n  /**\n   * Returns the textual representation of a day that is rendered in a day cell.\n   *\n   * @since 3.0.0\n   */\n  getDayNumerals(date: NgbDateStruct): string { return `${date.day}`; }\n\n  /**\n   * Returns the textual representation of a week number rendered by datepicker.\n   *\n   * @since 3.0.0\n   */\n  getWeekNumerals(weekNumber: number): string { return `${weekNumber}`; }\n\n  /**\n   * Returns the textual representation of a year that is rendered in the datepicker year select box.\n   *\n   * @since 3.0.0\n   */\n  getYearNumerals(year: number): string { return `${year}`; }\n}\n\n@Injectable()\nexport class NgbDatepickerI18nDefault extends NgbDatepickerI18n {\n  private _weekdaysShort: Array<string>;\n  private _monthsShort: Array<string>;\n  private _monthsFull: Array<string>;\n\n  constructor(@Inject(LOCALE_ID) private _locale: string) {\n    super();\n\n    const weekdaysStartingOnSunday = getLocaleDayNames(_locale, FormStyle.Standalone, TranslationWidth.Short);\n    this._weekdaysShort = weekdaysStartingOnSunday.map((day, index) => weekdaysStartingOnSunday[(index + 1) % 7]);\n\n    this._monthsShort = getLocaleMonthNames(_locale, FormStyle.Standalone, TranslationWidth.Abbreviated);\n    this._monthsFull = getLocaleMonthNames(_locale, FormStyle.Standalone, TranslationWidth.Wide);\n  }\n\n  getWeekdayShortName(weekday: number): string { return this._weekdaysShort[weekday - 1]; }\n\n  getMonthShortName(month: number): string { return this._monthsShort[month - 1]; }\n\n  getMonthFullName(month: number): string { return this._monthsFull[month - 1]; }\n\n  getDayAriaLabel(date: NgbDateStruct): string {\n    const jsDate = new Date(date.year, date.month - 1, date.day);\n    return formatDate(jsDate, 'fullDate', this._locale);\n  }\n}\n","import {NgbCalendar} from './ngb-calendar';\nimport {NgbDate} from './ngb-date';\nimport {NgbDateStruct} from './ngb-date-struct';\nimport {DatepickerViewModel, NgbDayTemplateData, NgbMarkDisabled} from './datepicker-view-model';\nimport {Injectable} from '@angular/core';\nimport {isInteger, toInteger} from '../util/util';\nimport {Observable, Subject} from 'rxjs';\nimport {\n  buildMonths,\n  checkDateInRange,\n  checkMinBeforeMax,\n  isChangedDate,\n  isChangedMonth,\n  isDateSelectable,\n  generateSelectBoxYears,\n  generateSelectBoxMonths,\n  prevMonthDisabled,\n  nextMonthDisabled\n} from './datepicker-tools';\n\nimport {filter} from 'rxjs/operators';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\n\nexport interface DatepickerServiceInputs extends\n    Partial<Pick<DatepickerViewModel, 'dayTemplateData' | 'displayMonths' | 'disabled' | 'firstDayOfWeek' |\n                     'focusVisible' | 'markDisabled' | 'maxDate' | 'minDate' | 'navigation' | 'outsideDays'>> {}\n\n@Injectable()\nexport class NgbDatepickerService {\n  private _VALIDATORS:\n      {[K in keyof DatepickerServiceInputs]: (v: DatepickerServiceInputs[K]) => Partial<DatepickerViewModel>} = {\n        dayTemplateData: (dayTemplateData: NgbDayTemplateData) => {\n          if (this._state.dayTemplateData !== dayTemplateData) {\n            return {dayTemplateData};\n          }\n        },\n        displayMonths: (displayMonths: number) => {\n          displayMonths = toInteger(displayMonths);\n          if (isInteger(displayMonths) && displayMonths > 0 && this._state.displayMonths !== displayMonths) {\n            return {displayMonths};\n          }\n        },\n        disabled: (disabled: boolean) => {\n          if (this._state.disabled !== disabled) {\n            return {disabled};\n          }\n        },\n        firstDayOfWeek: (firstDayOfWeek: number) => {\n          firstDayOfWeek = toInteger(firstDayOfWeek);\n          if (isInteger(firstDayOfWeek) && firstDayOfWeek >= 0 && this._state.firstDayOfWeek !== firstDayOfWeek) {\n            return {firstDayOfWeek};\n          }\n        },\n        focusVisible: (focusVisible: boolean) => {\n          if (this._state.focusVisible !== focusVisible && !this._state.disabled) {\n            return {focusVisible};\n          }\n        },\n        markDisabled: (markDisabled: NgbMarkDisabled) => {\n          if (this._state.markDisabled !== markDisabled) {\n            return {markDisabled};\n          }\n        },\n        maxDate: (date: NgbDate) => {\n          const maxDate = this.toValidDate(date, null);\n          if (isChangedDate(this._state.maxDate, maxDate)) {\n            return {maxDate};\n          }\n        },\n        minDate: (date: NgbDate) => {\n          const minDate = this.toValidDate(date, null);\n          if (isChangedDate(this._state.minDate, minDate)) {\n            return {minDate};\n          }\n        },\n        navigation: (navigation: 'select' | 'arrows' | 'none') => {\n          if (this._state.navigation !== navigation) {\n            return {navigation};\n          }\n        },\n        outsideDays: (outsideDays: 'visible' | 'collapsed' | 'hidden') => {\n          if (this._state.outsideDays !== outsideDays) {\n            return {outsideDays};\n          }\n        }\n      };\n\n  private _model$ = new Subject<DatepickerViewModel>();\n\n  private _dateSelect$ = new Subject<NgbDate>();\n\n  private _state: DatepickerViewModel = {\n    disabled: false,\n    displayMonths: 1,\n    firstDayOfWeek: 1,\n    focusVisible: false,\n    months: [],\n    navigation: 'select',\n    outsideDays: 'visible',\n    prevDisabled: false,\n    nextDisabled: false,\n    selectBoxes: {years: [], months: []},\n    selectedDate: null\n  };\n\n  get model$(): Observable<DatepickerViewModel> { return this._model$.pipe(filter(model => model.months.length > 0)); }\n\n  get dateSelect$(): Observable<NgbDate> { return this._dateSelect$.pipe(filter(date => date !== null)); }\n\n  set(options: DatepickerServiceInputs) {\n    let patch = Object.keys(options)\n                    .map(key => this._VALIDATORS[key](options[key]))\n                    .reduce((obj, part) => ({...obj, ...part}), {});\n\n    if (Object.keys(patch).length > 0) {\n      this._nextState(patch);\n    }\n  }\n\n  constructor(private _calendar: NgbCalendar, private _i18n: NgbDatepickerI18n) {}\n\n  focus(date: NgbDate) {\n    if (!this._state.disabled && this._calendar.isValid(date) && isChangedDate(this._state.focusDate, date)) {\n      this._nextState({focusDate: date});\n    }\n  }\n\n  focusSelect() {\n    if (isDateSelectable(this._state.focusDate, this._state)) {\n      this.select(this._state.focusDate, {emitEvent: true});\n    }\n  }\n\n  open(date: NgbDate) {\n    const firstDate = this.toValidDate(date, this._calendar.getToday());\n    if (!this._state.disabled && (!this._state.firstDate || isChangedMonth(this._state.firstDate, date))) {\n      this._nextState({firstDate});\n    }\n  }\n\n  select(date: NgbDate, options: {emitEvent?: boolean} = {}) {\n    const selectedDate = this.toValidDate(date, null);\n    if (!this._state.disabled) {\n      if (isChangedDate(this._state.selectedDate, selectedDate)) {\n        this._nextState({selectedDate});\n      }\n\n      if (options.emitEvent && isDateSelectable(selectedDate, this._state)) {\n        this._dateSelect$.next(selectedDate);\n      }\n    }\n  }\n\n  toValidDate(date: NgbDateStruct, defaultValue?: NgbDate): NgbDate {\n    const ngbDate = NgbDate.from(date);\n    if (defaultValue === undefined) {\n      defaultValue = this._calendar.getToday();\n    }\n    return this._calendar.isValid(ngbDate) ? ngbDate : defaultValue;\n  }\n\n  private _nextState(patch: Partial<DatepickerViewModel>) {\n    const newState = this._updateState(patch);\n    this._patchContexts(newState);\n    this._state = newState;\n    this._model$.next(this._state);\n  }\n\n  private _patchContexts(state: DatepickerViewModel) {\n    const {months, displayMonths, selectedDate, focusDate, focusVisible, disabled, outsideDays} = state;\n    state.months.forEach(month => {\n      month.weeks.forEach(week => {\n        week.days.forEach(day => {\n\n          // patch focus flag\n          if (focusDate) {\n            day.context.focused = focusDate.equals(day.date) && focusVisible;\n          }\n\n          // calculating tabindex\n          day.tabindex = !disabled && day.date.equals(focusDate) && focusDate.month === month.number ? 0 : -1;\n\n          // override context disabled\n          if (disabled === true) {\n            day.context.disabled = true;\n          }\n\n          // patch selection flag\n          if (selectedDate !== undefined) {\n            day.context.selected = selectedDate !== null && selectedDate.equals(day.date);\n          }\n\n          // visibility\n          if (month.number !== day.date.month) {\n            day.hidden = outsideDays === 'hidden' || outsideDays === 'collapsed' ||\n                (displayMonths > 1 && day.date.after(months[0].firstDate) &&\n                 day.date.before(months[displayMonths - 1].lastDate));\n          }\n        });\n      });\n    });\n  }\n\n  private _updateState(patch: Partial<DatepickerViewModel>): DatepickerViewModel {\n    // patching fields\n    const state = Object.assign({}, this._state, patch);\n\n    let startDate = state.firstDate;\n\n    // min/max dates changed\n    if ('minDate' in patch || 'maxDate' in patch) {\n      checkMinBeforeMax(state.minDate, state.maxDate);\n      state.focusDate = checkDateInRange(state.focusDate, state.minDate, state.maxDate);\n      state.firstDate = checkDateInRange(state.firstDate, state.minDate, state.maxDate);\n      startDate = state.focusDate;\n    }\n\n    // disabled\n    if ('disabled' in patch) {\n      state.focusVisible = false;\n    }\n\n    // initial rebuild via 'select()'\n    if ('selectedDate' in patch && this._state.months.length === 0) {\n      startDate = state.selectedDate;\n    }\n\n    // terminate early if only focus visibility was changed\n    if ('focusVisible' in patch) {\n      return state;\n    }\n\n    // focus date changed\n    if ('focusDate' in patch) {\n      state.focusDate = checkDateInRange(state.focusDate, state.minDate, state.maxDate);\n      startDate = state.focusDate;\n\n      // nothing to rebuild if only focus changed and it is still visible\n      if (state.months.length !== 0 && !state.focusDate.before(state.firstDate) &&\n          !state.focusDate.after(state.lastDate)) {\n        return state;\n      }\n    }\n\n    // first date changed\n    if ('firstDate' in patch) {\n      state.firstDate = checkDateInRange(state.firstDate, state.minDate, state.maxDate);\n      startDate = state.firstDate;\n    }\n\n    // rebuilding months\n    if (startDate) {\n      const forceRebuild = 'dayTemplateData' in patch || 'firstDayOfWeek' in patch || 'markDisabled' in patch ||\n          'minDate' in patch || 'maxDate' in patch || 'disabled' in patch || 'outsideDays' in patch;\n\n      const months = buildMonths(this._calendar, startDate, state, this._i18n, forceRebuild);\n\n      // updating months and boundary dates\n      state.months = months;\n      state.firstDate = months.length > 0 ? months[0].firstDate : undefined;\n      state.lastDate = months.length > 0 ? months[months.length - 1].lastDate : undefined;\n\n      // reset selected date if 'markDisabled' returns true\n      if ('selectedDate' in patch && !isDateSelectable(state.selectedDate, state)) {\n        state.selectedDate = null;\n      }\n\n      // adjusting focus after months were built\n      if ('firstDate' in patch) {\n        if (state.focusDate === undefined || state.focusDate.before(state.firstDate) ||\n            state.focusDate.after(state.lastDate)) {\n          state.focusDate = startDate;\n        }\n      }\n\n      // adjusting months/years for the select box navigation\n      const yearChanged = !this._state.firstDate || this._state.firstDate.year !== state.firstDate.year;\n      const monthChanged = !this._state.firstDate || this._state.firstDate.month !== state.firstDate.month;\n      if (state.navigation === 'select') {\n        // years ->  boundaries (min/max were changed)\n        if ('minDate' in patch || 'maxDate' in patch || state.selectBoxes.years.length === 0 || yearChanged) {\n          state.selectBoxes.years = generateSelectBoxYears(state.firstDate, state.minDate, state.maxDate);\n        }\n\n        // months -> when current year or boundaries change\n        if ('minDate' in patch || 'maxDate' in patch || state.selectBoxes.months.length === 0 || yearChanged) {\n          state.selectBoxes.months =\n              generateSelectBoxMonths(this._calendar, state.firstDate, state.minDate, state.maxDate);\n        }\n      } else {\n        state.selectBoxes = {years: [], months: []};\n      }\n\n      // updating navigation arrows -> boundaries change (min/max) or month/year changes\n      if ((state.navigation === 'arrows' || state.navigation === 'select') &&\n          (monthChanged || yearChanged || 'minDate' in patch || 'maxDate' in patch || 'disabled' in patch)) {\n        state.prevDisabled = state.disabled || prevMonthDisabled(this._calendar, state.firstDate, state.minDate);\n        state.nextDisabled = state.disabled || nextMonthDisabled(this._calendar, state.lastDate, state.maxDate);\n      }\n    }\n\n    return state;\n  }\n}\n","export enum Key {\n  Tab = 9,\n  Enter = 13,\n  Escape = 27,\n  Space = 32,\n  PageUp = 33,\n  PageDown = 34,\n  End = 35,\n  Home = 36,\n  ArrowLeft = 37,\n  ArrowUp = 38,\n  ArrowRight = 39,\n  ArrowDown = 40\n}\n","import {Injectable} from '@angular/core';\nimport {NgbCalendar} from './ngb-calendar';\nimport {NgbDatepicker} from './datepicker';\nimport {Key} from '../util/key';\n\n/**\n * A service that represents the keyboard navigation.\n *\n * Default keyboard shortcuts [are documented in the overview](#/components/datepicker/overview#keyboard-shortcuts)\n *\n * @since 5.2.0\n */\n@Injectable({providedIn: 'root'})\nexport class NgbDatepickerKeyboardService {\n  /**\n   * Processes a keyboard event.\n   */\n  processKey(event: KeyboardEvent, datepicker: NgbDatepicker, calendar: NgbCalendar) {\n    const state = datepicker.state;\n    // tslint:disable-next-line:deprecation\n    switch (event.which) {\n      case Key.PageUp:\n        datepicker.focusDate(calendar.getPrev(state.focusedDate, event.shiftKey ? 'y' : 'm', 1));\n        break;\n      case Key.PageDown:\n        datepicker.focusDate(calendar.getNext(state.focusedDate, event.shiftKey ? 'y' : 'm', 1));\n        break;\n      case Key.End:\n        datepicker.focusDate(event.shiftKey ? state.maxDate : state.lastDate);\n        break;\n      case Key.Home:\n        datepicker.focusDate(event.shiftKey ? state.minDate : state.firstDate);\n        break;\n      case Key.ArrowLeft:\n        datepicker.focusDate(calendar.getPrev(state.focusedDate, 'd', 1));\n        break;\n      case Key.ArrowUp:\n        datepicker.focusDate(calendar.getPrev(state.focusedDate, 'd', calendar.getDaysPerWeek()));\n        break;\n      case Key.ArrowRight:\n        datepicker.focusDate(calendar.getNext(state.focusedDate, 'd', 1));\n        break;\n      case Key.ArrowDown:\n        datepicker.focusDate(calendar.getNext(state.focusedDate, 'd', calendar.getDaysPerWeek()));\n        break;\n      case Key.Enter:\n      case Key.Space:\n        datepicker.focusSelect();\n        break;\n      default:\n        return;\n    }\n    event.preventDefault();\n    event.stopPropagation();\n  }\n}\n","import {NgbDate} from './ngb-date';\nimport {NgbDateStruct} from './ngb-date-struct';\nimport {DayTemplateContext} from './datepicker-day-template-context';\n\nexport type NgbMarkDisabled = (date: NgbDateStruct, current: {year: number, month: number}) => boolean;\nexport type NgbDayTemplateData = (date: NgbDateStruct, current: {year: number, month: number}) => any;\n\nexport type DayViewModel = {\n  date: NgbDate,\n  context: DayTemplateContext,\n  tabindex: number,\n  ariaLabel: string,\n  hidden: boolean\n};\n\nexport type WeekViewModel = {\n  number: number,\n  days: DayViewModel[],\n  collapsed: boolean\n};\n\nexport type MonthViewModel = {\n  firstDate: NgbDate,\n  lastDate: NgbDate,\n  number: number,\n  year: number,\n  weeks: WeekViewModel[],\n  weekdays: number[]\n};\n\n// clang-format off\nexport type DatepickerViewModel = {\n  dayTemplateData?: NgbDayTemplateData,\n  disabled: boolean,\n  displayMonths: number,\n  firstDate?: NgbDate,\n  firstDayOfWeek: number,\n  focusDate?: NgbDate,\n  focusVisible: boolean,\n  lastDate?: NgbDate,\n  markDisabled?: NgbMarkDisabled,\n  maxDate?: NgbDate,\n  minDate?: NgbDate,\n  months: MonthViewModel[],\n  navigation: 'select' | 'arrows' | 'none',\n  outsideDays: 'visible' | 'collapsed' | 'hidden',\n  prevDisabled: boolean,\n  nextDisabled: boolean,\n  selectBoxes: {\n    years: number[],\n    months: number[]\n  },\n  selectedDate: NgbDate\n};\n// clang-format on\n\nexport enum NavigationEvent {\n  PREV,\n  NEXT\n}\n","import {Injectable, TemplateRef} from '@angular/core';\nimport {DayTemplateContext} from './datepicker-day-template-context';\nimport {NgbDateStruct} from './ngb-date-struct';\n\n/**\n * A configuration service for the [`NgbDatepicker`](#/components/datepicker/api#NgbDatepicker) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the datepickers used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbDatepickerConfig {\n  dayTemplate: TemplateRef<DayTemplateContext>;\n  dayTemplateData: (date: NgbDateStruct, current: {year: number, month: number}) => any;\n  footerTemplate: TemplateRef<any>;\n  displayMonths = 1;\n  firstDayOfWeek = 1;\n  markDisabled: (date: NgbDateStruct, current: {year: number, month: number}) => boolean;\n  minDate: NgbDateStruct;\n  maxDate: NgbDateStruct;\n  navigation: 'select' | 'arrows' | 'none' = 'select';\n  outsideDays: 'visible' | 'collapsed' | 'hidden' = 'visible';\n  showWeekdays = true;\n  showWeekNumbers = false;\n  startDate: {year: number, month: number};\n}\n","import {Injectable} from '@angular/core';\nimport {NgbDateStruct} from '../ngb-date-struct';\nimport {isInteger} from '../../util/util';\n\nexport function NGB_DATEPICKER_DATE_ADAPTER_FACTORY() {\n  return new NgbDateStructAdapter();\n}\n\n/**\n * An abstract service that does the conversion between the internal datepicker `NgbDateStruct` model and\n * any provided user date model `D`, ex. a string, a native date, etc.\n *\n * The adapter is used **only** for conversion when binding datepicker to a form control,\n * ex. `[(ngModel)]=\"userDateModel\"`. Here `userDateModel` can be of any type.\n *\n * The default datepicker implementation assumes we use `NgbDateStruct` as a user model.\n *\n * See the [date format overview](#/components/datepicker/overview#date-model) for more details\n * and the [custom adapter demo](#/components/datepicker/examples#adapter) for an example.\n */\n@Injectable({providedIn: 'root', useFactory: NGB_DATEPICKER_DATE_ADAPTER_FACTORY})\nexport abstract class NgbDateAdapter<D> {\n  /**\n   * Converts a user-model date of type `D` to an `NgbDateStruct` for internal use.\n   */\n  abstract fromModel(value: D): NgbDateStruct;\n\n  /**\n   * Converts an internal `NgbDateStruct` date to a user-model date of type `D`.\n   */\n  abstract toModel(date: NgbDateStruct): D;\n}\n\n@Injectable()\nexport class NgbDateStructAdapter extends NgbDateAdapter<NgbDateStruct> {\n  /**\n   * Converts a NgbDateStruct value into NgbDateStruct value\n   */\n  fromModel(date: NgbDateStruct): NgbDateStruct {\n    return (date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day)) ?\n        {year: date.year, month: date.month, day: date.day} :\n        null;\n  }\n\n  /**\n   * Converts a NgbDateStruct value into NgbDateStruct value\n   */\n  toModel(date: NgbDateStruct): NgbDateStruct {\n    return (date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day)) ?\n        {year: date.year, month: date.month, day: date.day} :\n        null;\n  }\n}\n","import {fromEvent, merge, Subject} from 'rxjs';\nimport {filter, take, takeUntil} from 'rxjs/operators';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChanges,\n  TemplateRef,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {NgbCalendar} from './ngb-calendar';\nimport {NgbDate} from './ngb-date';\nimport {DatepickerServiceInputs, NgbDatepickerService} from './datepicker-service';\nimport {NgbDatepickerKeyboardService} from './datepicker-keyboard-service';\nimport {DatepickerViewModel, NavigationEvent} from './datepicker-view-model';\nimport {DayTemplateContext} from './datepicker-day-template-context';\nimport {NgbDatepickerConfig} from './datepicker-config';\nimport {NgbDateAdapter} from './adapters/ngb-date-adapter';\nimport {NgbDateStruct} from './ngb-date-struct';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\nimport {isChangedDate, isChangedMonth} from './datepicker-tools';\nimport {hasClassName} from '../util/util';\n\nconst NGB_DATEPICKER_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbDatepicker),\n  multi: true\n};\n\n/**\n * An event emitted right before the navigation happens and the month displayed by the datepicker changes.\n */\nexport interface NgbDatepickerNavigateEvent {\n  /**\n   * The currently displayed month.\n   */\n  current: {year: number, month: number};\n\n  /**\n   * The month we're navigating to.\n   */\n  next: {year: number, month: number};\n\n  /**\n   * Calling this function will prevent navigation from happening.\n   *\n   * @since 4.1.0\n   */\n  preventDefault: () => void;\n}\n\n/**\n * An interface that represents the readonly public state of the datepicker.\n *\n * Accessible via the `datepicker.state` getter\n *\n * @since 5.2.0\n */\nexport interface NgbDatepickerState {\n  /**\n   * The earliest date that can be displayed or selected\n   */\n  readonly minDate: NgbDate;\n\n  /**\n   * The latest date that can be displayed or selected\n   */\n  readonly maxDate: NgbDate;\n\n  /**\n   * The first visible date of currently displayed months\n   */\n  readonly firstDate: NgbDate;\n\n  /**\n   * The last visible date of currently displayed months\n   */\n  readonly lastDate: NgbDate;\n\n  /**\n   * The date currently focused by the datepicker\n   */\n  readonly focusedDate: NgbDate;\n}\n\n/**\n * A highly configurable component that helps you with selecting calendar dates.\n *\n * `NgbDatepicker` is meant to be displayed inline on a page or put inside a popup.\n */\n@Component({\n  exportAs: 'ngbDatepicker',\n  selector: 'ngb-datepicker',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  styleUrls: ['./datepicker.scss'],\n  template: `\n    <ng-template #dt let-date=\"date\" let-currentMonth=\"currentMonth\" let-selected=\"selected\" let-disabled=\"disabled\" let-focused=\"focused\">\n      <div ngbDatepickerDayView\n        [date]=\"date\"\n        [currentMonth]=\"currentMonth\"\n        [selected]=\"selected\"\n        [disabled]=\"disabled\"\n        [focused]=\"focused\">\n      </div>\n    </ng-template>\n\n    <div class=\"ngb-dp-header\">\n      <ngb-datepicker-navigation *ngIf=\"navigation !== 'none'\"\n        [date]=\"model.firstDate\"\n        [months]=\"model.months\"\n        [disabled]=\"model.disabled\"\n        [showSelect]=\"model.navigation === 'select'\"\n        [prevDisabled]=\"model.prevDisabled\"\n        [nextDisabled]=\"model.nextDisabled\"\n        [selectBoxes]=\"model.selectBoxes\"\n        (navigate)=\"onNavigateEvent($event)\"\n        (select)=\"onNavigateDateSelect($event)\">\n      </ngb-datepicker-navigation>\n    </div>\n\n    <div #months class=\"ngb-dp-months\" (keydown)=\"onKeyDown($event)\">\n      <ng-template ngFor let-month [ngForOf]=\"model.months\" let-i=\"index\">\n        <div class=\"ngb-dp-month\">\n          <div *ngIf=\"navigation === 'none' || (displayMonths > 1 && navigation === 'select')\"\n                class=\"ngb-dp-month-name\">\n            {{ i18n.getMonthFullName(month.number, month.year) }} {{ i18n.getYearNumerals(month.year) }}\n          </div>\n          <ngb-datepicker-month-view\n            [month]=\"month\"\n            [dayTemplate]=\"dayTemplate || dt\"\n            [showWeekdays]=\"showWeekdays\"\n            [showWeekNumbers]=\"showWeekNumbers\"\n            (select)=\"onDateSelect($event)\">\n          </ngb-datepicker-month-view>\n        </div>\n      </ng-template>\n    </div>\n\n    <ng-template [ngTemplateOutlet]=\"footerTemplate\"></ng-template>\n  `,\n  providers: [NGB_DATEPICKER_VALUE_ACCESSOR, NgbDatepickerService]\n})\nexport class NgbDatepicker implements OnDestroy,\n    OnChanges, OnInit, AfterViewInit, ControlValueAccessor {\n  model: DatepickerViewModel;\n\n  @ViewChild('months', {static: true}) private _monthsEl: ElementRef<HTMLElement>;\n  private _controlValue: NgbDate;\n  private _destroyed$ = new Subject<void>();\n  private _publicState: NgbDatepickerState = <any>{};\n\n  /**\n   * The reference to a custom template for the day.\n   *\n   * Allows to completely override the way a day 'cell' in the calendar is displayed.\n   *\n   * See [`DayTemplateContext`](#/components/datepicker/api#DayTemplateContext) for the data you get inside.\n   */\n  @Input() dayTemplate: TemplateRef<DayTemplateContext>;\n\n  /**\n   * The callback to pass any arbitrary data to the template cell via the\n   * [`DayTemplateContext`](#/components/datepicker/api#DayTemplateContext)'s `data` parameter.\n   *\n   * `current` is the month that is currently displayed by the datepicker.\n   *\n   * @since 3.3.0\n   */\n  @Input() dayTemplateData: (date: NgbDate, current: {year: number, month: number}) => any;\n\n  /**\n   * The number of months to display.\n   */\n  @Input() displayMonths: number;\n\n  /**\n   * The first day of the week.\n   *\n   * With default calendar we use ISO 8601: 'weekday' is 1=Mon ... 7=Sun.\n   */\n  @Input() firstDayOfWeek: number;\n\n  /**\n   * The reference to the custom template for the datepicker footer.\n   *\n   * @since 3.3.0\n   */\n  @Input() footerTemplate: TemplateRef<any>;\n\n  /**\n   * The callback to mark some dates as disabled.\n   *\n   * It is called for each new date when navigating to a different month.\n   *\n   * `current` is the month that is currently displayed by the datepicker.\n   */\n  @Input() markDisabled: (date: NgbDate, current: {year: number, month: number}) => boolean;\n\n  /**\n   * The latest date that can be displayed or selected.\n   *\n   * If not provided, 'year' select box will display 10 years after the current month.\n   */\n  @Input() maxDate: NgbDateStruct;\n\n  /**\n   * The earliest date that can be displayed or selected.\n   *\n   * If not provided, 'year' select box will display 10 years before the current month.\n   */\n  @Input() minDate: NgbDateStruct;\n\n  /**\n   * Navigation type.\n   *\n   * * `\"select\"` - select boxes for month and navigation arrows\n   * * `\"arrows\"` - only navigation arrows\n   * * `\"none\"` - no navigation visible at all\n   */\n  @Input() navigation: 'select' | 'arrows' | 'none';\n\n  /**\n   * The way of displaying days that don't belong to the current month.\n   *\n   * * `\"visible\"` - days are visible\n   * * `\"hidden\"` - days are hidden, white space preserved\n   * * `\"collapsed\"` - days are collapsed, so the datepicker height might change between months\n   *\n   * For the 2+ months view, days in between months are never shown.\n   */\n  @Input() outsideDays: 'visible' | 'collapsed' | 'hidden';\n\n  /**\n   * If `true`, weekdays will be displayed.\n   */\n  @Input() showWeekdays: boolean;\n\n  /**\n   * If `true`, week numbers will be displayed.\n   */\n  @Input() showWeekNumbers: boolean;\n\n  /**\n   * The date to open calendar with.\n   *\n   * With the default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n   * If nothing or invalid date is provided, calendar will open with current month.\n   *\n   * You could use `navigateTo(date)` method as an alternative.\n   */\n  @Input() startDate: {year: number, month: number, day?: number};\n\n  /**\n   * An event emitted right before the navigation happens and displayed month changes.\n   *\n   * See [`NgbDatepickerNavigateEvent`](#/components/datepicker/api#NgbDatepickerNavigateEvent) for the payload info.\n   */\n  @Output() navigate = new EventEmitter<NgbDatepickerNavigateEvent>();\n\n  /**\n   * An event emitted when user selects a date using keyboard or mouse.\n   *\n   * The payload of the event is currently selected `NgbDate`.\n   *\n   * @since 5.2.0\n   */\n  @Output() dateSelect = new EventEmitter<NgbDate>();\n\n  /**\n   * An event emitted when user selects a date using keyboard or mouse.\n   *\n   * The payload of the event is currently selected `NgbDate`.\n   *\n   * Please use 'dateSelect' output instead, this will be deprecated in version 6.0 due to collision with native\n   * 'select' event.\n   */\n  @Output() select = this.dateSelect;\n\n  onChange = (_: any) => {};\n  onTouched = () => {};\n\n  constructor(\n      private _service: NgbDatepickerService, private _calendar: NgbCalendar, public i18n: NgbDatepickerI18n,\n      config: NgbDatepickerConfig, private _keyboardService: NgbDatepickerKeyboardService, cd: ChangeDetectorRef,\n      private _elementRef: ElementRef<HTMLElement>, private _ngbDateAdapter: NgbDateAdapter<any>,\n      private _ngZone: NgZone) {\n    ['dayTemplate', 'dayTemplateData', 'displayMonths', 'firstDayOfWeek', 'footerTemplate', 'markDisabled', 'minDate',\n     'maxDate', 'navigation', 'outsideDays', 'showWeekdays', 'showWeekNumbers', 'startDate']\n        .forEach(input => this[input] = config[input]);\n\n    _service.dateSelect$.pipe(takeUntil(this._destroyed$)).subscribe(date => { this.dateSelect.emit(date); });\n\n    _service.model$.pipe(takeUntil(this._destroyed$)).subscribe(model => {\n      const newDate = model.firstDate;\n      const oldDate = this.model ? this.model.firstDate : null;\n\n      // update public state\n      this._publicState = {\n        maxDate: model.maxDate,\n        minDate: model.minDate,\n        firstDate: model.firstDate,\n        lastDate: model.lastDate,\n        focusedDate: model.focusDate\n      };\n\n      let navigationPrevented = false;\n      // emitting navigation event if the first month changes\n      if (!newDate.equals(oldDate)) {\n        this.navigate.emit({\n          current: oldDate ? {year: oldDate.year, month: oldDate.month} : null,\n          next: {year: newDate.year, month: newDate.month},\n          preventDefault: () => navigationPrevented = true\n        });\n\n        // can't prevent the very first navigation\n        if (navigationPrevented && oldDate !== null) {\n          this._service.open(oldDate);\n          return;\n        }\n      }\n\n      const newSelectedDate = model.selectedDate;\n      const newFocusedDate = model.focusDate;\n      const oldFocusedDate = this.model ? this.model.focusDate : null;\n\n      this.model = model;\n\n      // handling selection change\n      if (isChangedDate(newSelectedDate, this._controlValue)) {\n        this._controlValue = newSelectedDate;\n        this.onTouched();\n        this.onChange(this._ngbDateAdapter.toModel(newSelectedDate));\n      }\n\n      // handling focus change\n      if (isChangedDate(newFocusedDate, oldFocusedDate) && oldFocusedDate && model.focusVisible) {\n        this.focus();\n      }\n\n      cd.markForCheck();\n    });\n  }\n\n  /**\n   *  Returns the readonly public state of the datepicker\n   *\n   * @since 5.2.0\n   */\n  get state(): NgbDatepickerState { return this._publicState; }\n\n  /**\n   *  Focuses on given date.\n   */\n  focusDate(date: NgbDateStruct): void { this._service.focus(NgbDate.from(date)); }\n\n  /**\n   *  Selects focused date.\n   */\n  focusSelect(): void { this._service.focusSelect(); }\n\n  focus() {\n    this._ngZone.onStable.asObservable().pipe(take(1)).subscribe(() => {\n      const elementToFocus =\n          this._elementRef.nativeElement.querySelector<HTMLDivElement>('div.ngb-dp-day[tabindex=\"0\"]');\n      if (elementToFocus) {\n        elementToFocus.focus();\n      }\n    });\n  }\n\n  /**\n   * Navigates to the provided date.\n   *\n   * With the default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n   * If nothing or invalid date provided calendar will open current month.\n   *\n   * Use the `[startDate]` input as an alternative.\n   */\n  navigateTo(date?: {year: number, month: number, day?: number}) {\n    this._service.open(NgbDate.from(date ? date.day ? date as NgbDateStruct : {...date, day: 1} : null));\n  }\n\n  ngAfterViewInit() {\n    this._ngZone.runOutsideAngular(() => {\n      const focusIns$ = fromEvent<FocusEvent>(this._monthsEl.nativeElement, 'focusin');\n      const focusOuts$ = fromEvent<FocusEvent>(this._monthsEl.nativeElement, 'focusout');\n      const {nativeElement} = this._elementRef;\n\n      // we're changing 'focusVisible' only when entering or leaving months view\n      // and ignoring all focus events where both 'target' and 'related' target are day cells\n      merge(focusIns$, focusOuts$)\n          .pipe(\n              filter(\n                  ({target, relatedTarget}) =>\n                      !(hasClassName(target, 'ngb-dp-day') && hasClassName(relatedTarget, 'ngb-dp-day') &&\n                        nativeElement.contains(target as Node) && nativeElement.contains(relatedTarget as Node))),\n              takeUntil(this._destroyed$))\n          .subscribe(({type}) => this._ngZone.run(() => this._service.set({focusVisible: type === 'focusin'})));\n    });\n  }\n\n  ngOnDestroy() { this._destroyed$.next(); }\n\n  ngOnInit() {\n    if (this.model === undefined) {\n      const inputs: DatepickerServiceInputs = {};\n      ['dayTemplateData', 'displayMonths', 'markDisabled', 'firstDayOfWeek', 'navigation', 'minDate', 'maxDate',\n       'outsideDays']\n          .forEach(name => inputs[name] = this[name]);\n      this._service.set(inputs);\n\n      this.navigateTo(this.startDate);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const inputs: DatepickerServiceInputs = {};\n    ['dayTemplateData', 'displayMonths', 'markDisabled', 'firstDayOfWeek', 'navigation', 'minDate', 'maxDate',\n     'outsideDays']\n        .filter(name => name in changes)\n        .forEach(name => inputs[name] = this[name]);\n    this._service.set(inputs);\n\n    if ('startDate' in changes) {\n      const {currentValue, previousValue} = changes.startDate;\n      if (isChangedMonth(previousValue, currentValue)) {\n        this.navigateTo(this.startDate);\n      }\n    }\n  }\n\n  onDateSelect(date: NgbDate) {\n    this._service.focus(date);\n    this._service.select(date, {emitEvent: true});\n  }\n\n  onKeyDown(event: KeyboardEvent) { this._keyboardService.processKey(event, this, this._calendar); }\n\n  onNavigateDateSelect(date: NgbDate) { this._service.open(date); }\n\n  onNavigateEvent(event: NavigationEvent) {\n    switch (event) {\n      case NavigationEvent.PREV:\n        this._service.open(this._calendar.getPrev(this.model.firstDate, 'm', 1));\n        break;\n      case NavigationEvent.NEXT:\n        this._service.open(this._calendar.getNext(this.model.firstDate, 'm', 1));\n        break;\n    }\n  }\n\n  registerOnChange(fn: (value: any) => any): void { this.onChange = fn; }\n\n  registerOnTouched(fn: () => any): void { this.onTouched = fn; }\n\n  setDisabledState(disabled: boolean) { this._service.set({disabled}); }\n\n  writeValue(value) {\n    this._controlValue = NgbDate.from(this._ngbDateAdapter.fromModel(value));\n    this._service.select(this._controlValue);\n  }\n}\n","import {Component, Input, TemplateRef, Output, EventEmitter, ViewEncapsulation} from '@angular/core';\nimport {MonthViewModel, DayViewModel} from './datepicker-view-model';\nimport {NgbDate} from './ngb-date';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\nimport {DayTemplateContext} from './datepicker-day-template-context';\n\n@Component({\n  selector: 'ngb-datepicker-month-view',\n  host: {'role': 'grid'},\n  encapsulation: ViewEncapsulation.None,\n  styleUrls: ['./datepicker-month-view.scss'],\n  template: `\n    <div *ngIf=\"showWeekdays\" class=\"ngb-dp-week ngb-dp-weekdays\" role=\"row\">\n      <div *ngIf=\"showWeekNumbers\" class=\"ngb-dp-weekday ngb-dp-showweek\"></div>\n      <div *ngFor=\"let w of month.weekdays\" class=\"ngb-dp-weekday small\" role=\"columnheader\">\n        {{ i18n.getWeekdayShortName(w) }}\n      </div>\n    </div>\n    <ng-template ngFor let-week [ngForOf]=\"month.weeks\">\n      <div *ngIf=\"!week.collapsed\" class=\"ngb-dp-week\" role=\"row\">\n        <div *ngIf=\"showWeekNumbers\" class=\"ngb-dp-week-number small text-muted\">{{ i18n.getWeekNumerals(week.number) }}</div>\n        <div *ngFor=\"let day of week.days\" (click)=\"doSelect(day); $event.preventDefault()\" class=\"ngb-dp-day\" role=\"gridcell\"\n          [class.disabled]=\"day.context.disabled\"\n          [tabindex]=\"day.tabindex\"\n          [class.hidden]=\"day.hidden\"\n          [class.ngb-dp-today]=\"day.context.today\"\n          [attr.aria-label]=\"day.ariaLabel\">\n          <ng-template [ngIf]=\"!day.hidden\">\n            <ng-template [ngTemplateOutlet]=\"dayTemplate\" [ngTemplateOutletContext]=\"day.context\"></ng-template>\n          </ng-template>\n        </div>\n      </div>\n    </ng-template>\n  `\n})\nexport class NgbDatepickerMonthView {\n  @Input() dayTemplate: TemplateRef<DayTemplateContext>;\n  @Input() month: MonthViewModel;\n  @Input() showWeekdays;\n  @Input() showWeekNumbers;\n\n  @Output() select = new EventEmitter<NgbDate>();\n\n  constructor(public i18n: NgbDatepickerI18n) {}\n\n  doSelect(day: DayViewModel) {\n    if (!day.context.disabled && !day.hidden) {\n      this.select.emit(day.date);\n    }\n  }\n}\n","import {Component, Input, Output, EventEmitter, ChangeDetectionStrategy, ViewEncapsulation} from '@angular/core';\nimport {NavigationEvent, MonthViewModel} from './datepicker-view-model';\nimport {NgbDate} from './ngb-date';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\n\n@Component({\n  selector: 'ngb-datepicker-navigation',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  styleUrls: ['./datepicker-navigation.scss'],\n  template: `\n    <div class=\"ngb-dp-arrow\">\n      <button type=\"button\" class=\"btn btn-link ngb-dp-arrow-btn\" (click)=\"onClickPrev($event)\" [disabled]=\"prevDisabled\"\n              i18n-aria-label=\"@@ngb.datepicker.previous-month\" aria-label=\"Previous month\"\n              i18n-title=\"@@ngb.datepicker.previous-month\" title=\"Previous month\">\n        <span class=\"ngb-dp-navigation-chevron\"></span>\n      </button>\n    </div>\n    <ngb-datepicker-navigation-select *ngIf=\"showSelect\" class=\"ngb-dp-navigation-select\"\n      [date]=\"date\"\n      [disabled] = \"disabled\"\n      [months]=\"selectBoxes.months\"\n      [years]=\"selectBoxes.years\"\n      (select)=\"select.emit($event)\">\n    </ngb-datepicker-navigation-select>\n\n    <ng-template *ngIf=\"!showSelect\" ngFor let-month [ngForOf]=\"months\" let-i=\"index\">\n      <div class=\"ngb-dp-arrow\" *ngIf=\"i > 0\"></div>\n      <div class=\"ngb-dp-month-name\">\n        {{ i18n.getMonthFullName(month.number, month.year) }} {{ i18n.getYearNumerals(month.year) }}\n      </div>\n      <div class=\"ngb-dp-arrow\" *ngIf=\"i !== months.length - 1\"></div>\n    </ng-template>\n    <div class=\"ngb-dp-arrow right\">\n      <button type=\"button\" class=\"btn btn-link ngb-dp-arrow-btn\" (click)=\"onClickNext($event)\" [disabled]=\"nextDisabled\"\n              i18n-aria-label=\"@@ngb.datepicker.next-month\" aria-label=\"Next month\"\n              i18n-title=\"@@ngb.datepicker.next-month\" title=\"Next month\">\n        <span class=\"ngb-dp-navigation-chevron\"></span>\n      </button>\n    </div>\n    `\n})\nexport class NgbDatepickerNavigation {\n  navigation = NavigationEvent;\n\n  @Input() date: NgbDate;\n  @Input() disabled: boolean;\n  @Input() months: MonthViewModel[] = [];\n  @Input() showSelect: boolean;\n  @Input() prevDisabled: boolean;\n  @Input() nextDisabled: boolean;\n  @Input() selectBoxes: {years: number[], months: number[]};\n\n  @Output() navigate = new EventEmitter<NavigationEvent>();\n  @Output() select = new EventEmitter<NgbDate>();\n\n  constructor(public i18n: NgbDatepickerI18n) {}\n\n  onClickPrev(event: MouseEvent) {\n    (event.currentTarget as HTMLElement).focus();\n    this.navigate.emit(this.navigation.PREV);\n  }\n\n  onClickNext(event: MouseEvent) {\n    (event.currentTarget as HTMLElement).focus();\n    this.navigate.emit(this.navigation.NEXT);\n  }\n}\n","import {NgZone} from '@angular/core';\nimport {fromEvent, Observable, race} from 'rxjs';\nimport {delay, filter, map, takeUntil, tap, withLatestFrom} from 'rxjs/operators';\nimport {Key} from './key';\nimport {closest} from './util';\n\nconst isContainedIn = (element: HTMLElement, array?: HTMLElement[]) =>\n    array ? array.some(item => item.contains(element)) : false;\n\nconst matchesSelectorIfAny = (element: HTMLElement, selector?: string) =>\n    !selector || closest(element, selector) != null;\n\n// we have to add a more significant delay to avoid re-opening when handling (click) on a toggling element\n// TODO: use proper Angular platform detection when NgbAutoClose becomes a service and we can inject PLATFORM_ID\nconst isMobile = () => typeof navigator !== 'undefined' ?\n    !!navigator.userAgent && /iPad|iPhone|iPod|Android/.test(navigator.userAgent) :\n    false;\n\n// setting 'ngbAutoClose' synchronously on mobile results in immediate popup closing\n// when tapping on the triggering element\nconst wrapAsyncForMobile = fn => isMobile() ? () => setTimeout(() => fn(), 100) : fn;\n\nexport function ngbAutoClose(\n    zone: NgZone, document: any, type: boolean | 'inside' | 'outside', close: () => void, closed$: Observable<any>,\n    insideElements: HTMLElement[], ignoreElements?: HTMLElement[], insideSelector?: string) {\n  // closing on ESC and outside clicks\n  if (type) {\n    zone.runOutsideAngular(wrapAsyncForMobile(() => {\n\n      const shouldCloseOnClick = (event: MouseEvent) => {\n        const element = event.target as HTMLElement;\n        if (event.button === 2 || isContainedIn(element, ignoreElements)) {\n          return false;\n        }\n        if (type === 'inside') {\n          return isContainedIn(element, insideElements) && matchesSelectorIfAny(element, insideSelector);\n        } else if (type === 'outside') {\n          return !isContainedIn(element, insideElements);\n        } else /* if (type === true) */ {\n          return matchesSelectorIfAny(element, insideSelector) || !isContainedIn(element, insideElements);\n        }\n      };\n\n      const escapes$ = fromEvent<KeyboardEvent>(document, 'keydown')\n                           .pipe(\n                               takeUntil(closed$),\n                               // tslint:disable-next-line:deprecation\n                               filter(e => e.which === Key.Escape), tap(e => e.preventDefault()));\n\n\n      // we have to pre-calculate 'shouldCloseOnClick' on 'mousedown',\n      // because on 'mouseup' DOM nodes might be detached\n      const mouseDowns$ =\n          fromEvent<MouseEvent>(document, 'mousedown').pipe(map(shouldCloseOnClick), takeUntil(closed$));\n\n      const closeableClicks$ = fromEvent<MouseEvent>(document, 'mouseup')\n                                   .pipe(\n                                       withLatestFrom(mouseDowns$), filter(([_, shouldClose]) => shouldClose), delay(0),\n                                       takeUntil(closed$)) as Observable<MouseEvent>;\n\n\n      race<Event>([escapes$, closeableClicks$]).subscribe(() => zone.run(close));\n    }));\n  }\n}\n","import {NgZone} from '@angular/core';\n\nimport {fromEvent, Observable} from 'rxjs';\nimport {filter, map, takeUntil, withLatestFrom} from 'rxjs/operators';\n\nimport {Key} from './key';\n\n\nconst FOCUSABLE_ELEMENTS_SELECTOR = [\n  'a[href]', 'button:not([disabled])', 'input:not([disabled]):not([type=\"hidden\"])', 'select:not([disabled])',\n  'textarea:not([disabled])', '[contenteditable]', '[tabindex]:not([tabindex=\"-1\"])'\n].join(', ');\n\n/**\n * Returns first and last focusable elements inside of a given element based on specific CSS selector\n */\nexport function getFocusableBoundaryElements(element: HTMLElement): HTMLElement[] {\n  const list: HTMLElement[] =\n      Array.from(element.querySelectorAll(FOCUSABLE_ELEMENTS_SELECTOR) as NodeListOf<HTMLElement>)\n          .filter(el => el.tabIndex !== -1);\n  return [list[0], list[list.length - 1]];\n}\n\n/**\n * Function that enforces browser focus to be trapped inside a DOM element.\n *\n * Works only for clicks inside the element and navigation with 'Tab', ignoring clicks outside of the element\n *\n * @param zone Angular zone\n * @param element The element around which focus will be trapped inside\n * @param stopFocusTrap$ The observable stream. When completed the focus trap will clean up listeners\n * and free internal resources\n * @param refocusOnClick Put the focus back to the last focused element whenever a click occurs on element (default to\n * false)\n */\nexport const ngbFocusTrap =\n    (zone: NgZone, element: HTMLElement, stopFocusTrap$: Observable<any>, refocusOnClick = false) => {\n      zone.runOutsideAngular(() => {\n        // last focused element\n        const lastFocusedElement$ =\n            fromEvent<FocusEvent>(element, 'focusin').pipe(takeUntil(stopFocusTrap$), map(e => e.target));\n\n        // 'tab' / 'shift+tab' stream\n        fromEvent<KeyboardEvent>(element, 'keydown')\n            .pipe(\n                takeUntil(stopFocusTrap$),\n                // tslint:disable:deprecation\n                filter(e => e.which === Key.Tab),\n                // tslint:enable:deprecation\n                withLatestFrom(lastFocusedElement$))\n            .subscribe(([tabEvent, focusedElement]) => {\n              const[first, last] = getFocusableBoundaryElements(element);\n\n              if ((focusedElement === first || focusedElement === element) && tabEvent.shiftKey) {\n                last.focus();\n                tabEvent.preventDefault();\n              }\n\n              if (focusedElement === last && !tabEvent.shiftKey) {\n                first.focus();\n                tabEvent.preventDefault();\n              }\n            });\n\n        // inside click\n        if (refocusOnClick) {\n          fromEvent(element, 'click')\n              .pipe(takeUntil(stopFocusTrap$), withLatestFrom(lastFocusedElement$), map(arr => arr[1] as HTMLElement))\n              .subscribe(lastFocusedElement => lastFocusedElement.focus());\n        }\n      });\n    };\n","// previous version:\n// https://github.com/angular-ui/bootstrap/blob/07c31d0731f7cb068a1932b8e01d2312b796b4ec/src/position/position.js\nexport class Positioning {\n  private getAllStyles(element: HTMLElement) { return window.getComputedStyle(element); }\n\n  private getStyle(element: HTMLElement, prop: string): string { return this.getAllStyles(element)[prop]; }\n\n  private isStaticPositioned(element: HTMLElement): boolean {\n    return (this.getStyle(element, 'position') || 'static') === 'static';\n  }\n\n  private offsetParent(element: HTMLElement): HTMLElement {\n    let offsetParentEl = <HTMLElement>element.offsetParent || document.documentElement;\n\n    while (offsetParentEl && offsetParentEl !== document.documentElement && this.isStaticPositioned(offsetParentEl)) {\n      offsetParentEl = <HTMLElement>offsetParentEl.offsetParent;\n    }\n\n    return offsetParentEl || document.documentElement;\n  }\n\n  position(element: HTMLElement, round = true): ClientRect {\n    let elPosition: ClientRect;\n    let parentOffset: ClientRect = {width: 0, height: 0, top: 0, bottom: 0, left: 0, right: 0};\n\n    if (this.getStyle(element, 'position') === 'fixed') {\n      elPosition = element.getBoundingClientRect();\n      elPosition = {\n        top: elPosition.top,\n        bottom: elPosition.bottom,\n        left: elPosition.left,\n        right: elPosition.right,\n        height: elPosition.height,\n        width: elPosition.width\n      };\n    } else {\n      const offsetParentEl = this.offsetParent(element);\n\n      elPosition = this.offset(element, false);\n\n      if (offsetParentEl !== document.documentElement) {\n        parentOffset = this.offset(offsetParentEl, false);\n      }\n\n      parentOffset.top += offsetParentEl.clientTop;\n      parentOffset.left += offsetParentEl.clientLeft;\n    }\n\n    elPosition.top -= parentOffset.top;\n    elPosition.bottom -= parentOffset.top;\n    elPosition.left -= parentOffset.left;\n    elPosition.right -= parentOffset.left;\n\n    if (round) {\n      elPosition.top = Math.round(elPosition.top);\n      elPosition.bottom = Math.round(elPosition.bottom);\n      elPosition.left = Math.round(elPosition.left);\n      elPosition.right = Math.round(elPosition.right);\n    }\n\n    return elPosition;\n  }\n\n  offset(element: HTMLElement, round = true): ClientRect {\n    const elBcr = element.getBoundingClientRect();\n    const viewportOffset = {\n      top: window.pageYOffset - document.documentElement.clientTop,\n      left: window.pageXOffset - document.documentElement.clientLeft\n    };\n\n    let elOffset = {\n      height: elBcr.height || element.offsetHeight,\n      width: elBcr.width || element.offsetWidth,\n      top: elBcr.top + viewportOffset.top,\n      bottom: elBcr.bottom + viewportOffset.top,\n      left: elBcr.left + viewportOffset.left,\n      right: elBcr.right + viewportOffset.left\n    };\n\n    if (round) {\n      elOffset.height = Math.round(elOffset.height);\n      elOffset.width = Math.round(elOffset.width);\n      elOffset.top = Math.round(elOffset.top);\n      elOffset.bottom = Math.round(elOffset.bottom);\n      elOffset.left = Math.round(elOffset.left);\n      elOffset.right = Math.round(elOffset.right);\n    }\n\n    return elOffset;\n  }\n\n  /*\n    Return false if the element to position is outside the viewport\n  */\n  positionElements(hostElement: HTMLElement, targetElement: HTMLElement, placement: string, appendToBody?: boolean):\n      boolean {\n    const[placementPrimary = 'top', placementSecondary = 'center'] = placement.split('-');\n\n    const hostElPosition = appendToBody ? this.offset(hostElement, false) : this.position(hostElement, false);\n    const targetElStyles = this.getAllStyles(targetElement);\n\n    const marginTop = parseFloat(targetElStyles.marginTop);\n    const marginBottom = parseFloat(targetElStyles.marginBottom);\n    const marginLeft = parseFloat(targetElStyles.marginLeft);\n    const marginRight = parseFloat(targetElStyles.marginRight);\n\n    let topPosition = 0;\n    let leftPosition = 0;\n\n    switch (placementPrimary) {\n      case 'top':\n        topPosition = (hostElPosition.top - (targetElement.offsetHeight + marginTop + marginBottom));\n        break;\n      case 'bottom':\n        topPosition = (hostElPosition.top + hostElPosition.height);\n        break;\n      case 'left':\n        leftPosition = (hostElPosition.left - (targetElement.offsetWidth + marginLeft + marginRight));\n        break;\n      case 'right':\n        leftPosition = (hostElPosition.left + hostElPosition.width);\n        break;\n    }\n\n    switch (placementSecondary) {\n      case 'top':\n        topPosition = hostElPosition.top;\n        break;\n      case 'bottom':\n        topPosition = hostElPosition.top + hostElPosition.height - targetElement.offsetHeight;\n        break;\n      case 'left':\n        leftPosition = hostElPosition.left;\n        break;\n      case 'right':\n        leftPosition = hostElPosition.left + hostElPosition.width - targetElement.offsetWidth;\n        break;\n      case 'center':\n        if (placementPrimary === 'top' || placementPrimary === 'bottom') {\n          leftPosition = (hostElPosition.left + hostElPosition.width / 2 - targetElement.offsetWidth / 2);\n        } else {\n          topPosition = (hostElPosition.top + hostElPosition.height / 2 - targetElement.offsetHeight / 2);\n        }\n        break;\n    }\n\n    /// The translate3d/gpu acceleration render a blurry text on chrome, the next line is commented until a browser fix\n    // targetElement.style.transform = `translate3d(${Math.round(leftPosition)}px, ${Math.floor(topPosition)}px, 0px)`;\n    targetElement.style.transform = `translate(${Math.round(leftPosition)}px, ${Math.round(topPosition)}px)`;\n\n    // Check if the targetElement is inside the viewport\n    const targetElBCR = targetElement.getBoundingClientRect();\n    const html = document.documentElement;\n    const windowHeight = window.innerHeight || html.clientHeight;\n    const windowWidth = window.innerWidth || html.clientWidth;\n\n    return targetElBCR.left >= 0 && targetElBCR.top >= 0 && targetElBCR.right <= windowWidth &&\n        targetElBCR.bottom <= windowHeight;\n  }\n}\n\nconst placementSeparator = /\\s+/;\nconst positionService = new Positioning();\n\n/*\n * Accept the placement array and applies the appropriate placement dependent on the viewport.\n * Returns the applied placement.\n * In case of auto placement, placements are selected in order\n *   'top', 'bottom', 'left', 'right',\n *   'top-left', 'top-right',\n *   'bottom-left', 'bottom-right',\n *   'left-top', 'left-bottom',\n *   'right-top', 'right-bottom'.\n * */\nexport function positionElements(\n    hostElement: HTMLElement, targetElement: HTMLElement, placement: string | Placement | PlacementArray,\n    appendToBody?: boolean, baseClass?: string): Placement {\n  let placementVals: Array<Placement> =\n      Array.isArray(placement) ? placement : placement.split(placementSeparator) as Array<Placement>;\n\n  const allowedPlacements = [\n    'top', 'bottom', 'left', 'right', 'top-left', 'top-right', 'bottom-left', 'bottom-right', 'left-top', 'left-bottom',\n    'right-top', 'right-bottom'\n  ];\n\n  const classList = targetElement.classList;\n  const addClassesToTarget = (targetPlacement: Placement): Array<string> => {\n    const[primary, secondary] = targetPlacement.split('-');\n    const classes = [];\n    if (baseClass) {\n      classes.push(`${baseClass}-${primary}`);\n      if (secondary) {\n        classes.push(`${baseClass}-${primary}-${secondary}`);\n      }\n\n      classes.forEach((classname) => { classList.add(classname); });\n    }\n    return classes;\n  };\n\n  // Remove old placement classes to avoid issues\n  if (baseClass) {\n    allowedPlacements.forEach((placementToRemove) => { classList.remove(`${baseClass}-${placementToRemove}`); });\n  }\n\n  // replace auto placement with other placements\n  let hasAuto = placementVals.findIndex(val => val === 'auto');\n  if (hasAuto >= 0) {\n    allowedPlacements.forEach(function(obj) {\n      if (placementVals.find(val => val.search('^' + obj) !== -1) == null) {\n        placementVals.splice(hasAuto++, 1, obj as Placement);\n      }\n    });\n  }\n\n  // coordinates where to position\n\n  // Required for transform:\n  const style = targetElement.style;\n  style.position = 'absolute';\n  style.top = '0';\n  style.left = '0';\n  style['will-change'] = 'transform';\n\n  let testPlacement: Placement;\n  let isInViewport = false;\n  for (testPlacement of placementVals) {\n    let addedClasses = addClassesToTarget(testPlacement);\n\n    if (positionService.positionElements(hostElement, targetElement, testPlacement, appendToBody)) {\n      isInViewport = true;\n      break;\n    }\n\n    // Remove the baseClasses for further calculation\n    if (baseClass) {\n      addedClasses.forEach((classname) => { classList.remove(classname); });\n    }\n  }\n\n  if (!isInViewport) {\n    // If nothing match, the first placement is the default one\n    testPlacement = placementVals[0];\n    addClassesToTarget(testPlacement);\n    positionService.positionElements(hostElement, targetElement, testPlacement, appendToBody);\n  }\n\n  return testPlacement;\n}\n\nexport type Placement = 'auto' | 'top' | 'bottom' | 'left' | 'right' | 'top-left' | 'top-right' | 'bottom-left' |\n    'bottom-right' | 'left-top' | 'left-bottom' | 'right-top' | 'right-bottom';\n\nexport type PlacementArray = Placement | Array<Placement>| string;\n","import {padNumber, toInteger, isNumber} from '../util/util';\nimport {NgbDateStruct} from './ngb-date-struct';\nimport {Injectable} from '@angular/core';\n\nexport function NGB_DATEPICKER_PARSER_FORMATTER_FACTORY() {\n  return new NgbDateISOParserFormatter();\n}\n\n/**\n * An abstract service for parsing and formatting dates for the\n * [`NgbInputDatepicker`](#/components/datepicker/api#NgbInputDatepicker) directive.\n * Converts between the internal `NgbDateStruct` model presentation and a `string` that is displayed in the\n * input element.\n *\n * When user types something in the input this service attempts to parse it into a `NgbDateStruct` object.\n * And vice versa, when users selects a date in the calendar with the mouse, it must be displayed as a `string`\n * in the input.\n *\n * Default implementation uses the ISO 8601 format, but you can provide another implementation via DI\n * to use an alternative string format or a custom parsing logic.\n *\n * See the [date format overview](#/components/datepicker/overview#date-model) for more details.\n */\n@Injectable({providedIn: 'root', useFactory: NGB_DATEPICKER_PARSER_FORMATTER_FACTORY})\nexport abstract class NgbDateParserFormatter {\n  /**\n   * Parses the given `string` to an `NgbDateStruct`.\n   *\n   * Implementations should try their best to provide a result, even\n   * partial. They must return `null` if the value can't be parsed.\n   */\n  abstract parse(value: string): NgbDateStruct;\n\n  /**\n   * Formats the given `NgbDateStruct` to a `string`.\n   *\n   * Implementations should return an empty string if the given date is `null`,\n   * and try their best to provide a partial result if the given date is incomplete or invalid.\n   */\n  abstract format(date: NgbDateStruct): string;\n}\n\n@Injectable()\nexport class NgbDateISOParserFormatter extends NgbDateParserFormatter {\n  parse(value: string): NgbDateStruct {\n    if (value) {\n      const dateParts = value.trim().split('-');\n      if (dateParts.length === 1 && isNumber(dateParts[0])) {\n        return {year: toInteger(dateParts[0]), month: null, day: null};\n      } else if (dateParts.length === 2 && isNumber(dateParts[0]) && isNumber(dateParts[1])) {\n        return {year: toInteger(dateParts[0]), month: toInteger(dateParts[1]), day: null};\n      } else if (dateParts.length === 3 && isNumber(dateParts[0]) && isNumber(dateParts[1]) && isNumber(dateParts[2])) {\n        return {year: toInteger(dateParts[0]), month: toInteger(dateParts[1]), day: toInteger(dateParts[2])};\n      }\n    }\n    return null;\n  }\n\n  format(date: NgbDateStruct): string {\n    return date ?\n        `${date.year}-${isNumber(date.month) ? padNumber(date.month) : ''}-${isNumber(date.day) ? padNumber(date.day) : ''}` :\n        '';\n  }\n}\n","import {Injectable} from '@angular/core';\n\nimport {NgbDatepickerConfig} from './datepicker-config';\nimport {PlacementArray} from '../util/positioning';\n\n/**\n * A configuration service for the [`NgbDatepickerInput`](#/components/datepicker/api#NgbDatepicker) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the datepicker inputs used in the application.\n *\n * @since 5.2.0\n */\n@Injectable({providedIn: 'root'})\nexport class NgbInputDatepickerConfig extends NgbDatepickerConfig {\n  autoClose: boolean | 'inside' | 'outside' = true;\n  container: null | 'body';\n  positionTarget: string | HTMLElement;\n  placement: PlacementArray = ['bottom-left', 'bottom-right', 'top-left', 'top-right'];\n  restoreFocus: true | HTMLElement | string = true;\n}\n","import {\n  ChangeDetectorRef,\n  ComponentFactoryResolver,\n  ComponentRef,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  Output,\n  Renderer2,\n  SimpleChanges,\n  TemplateRef,\n  ViewContainerRef\n} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\nimport {AbstractControl, ControlValueAccessor, NG_VALIDATORS, NG_VALUE_ACCESSOR, Validator} from '@angular/forms';\n\nimport {ngbAutoClose} from '../util/autoclose';\nimport {ngbFocusTrap} from '../util/focus-trap';\nimport {PlacementArray, positionElements} from '../util/positioning';\n\nimport {NgbDateAdapter} from './adapters/ngb-date-adapter';\nimport {NgbDatepicker, NgbDatepickerNavigateEvent} from './datepicker';\nimport {DayTemplateContext} from './datepicker-day-template-context';\nimport {NgbCalendar} from './ngb-calendar';\nimport {NgbDate} from './ngb-date';\nimport {NgbDateParserFormatter} from './ngb-date-parser-formatter';\nimport {NgbDateStruct} from './ngb-date-struct';\nimport {NgbInputDatepickerConfig} from './datepicker-input-config';\nimport {NgbDatepickerConfig} from './datepicker-config';\nimport {isString} from '../util/util';\n\nconst NGB_DATEPICKER_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbInputDatepicker),\n  multi: true\n};\n\nconst NGB_DATEPICKER_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => NgbInputDatepicker),\n  multi: true\n};\n\n/**\n * A directive that allows to stick a datepicker popup to an input field.\n *\n * Manages interaction with the input field itself, does value formatting and provides forms integration.\n */\n@Directive({\n  selector: 'input[ngbDatepicker]',\n  exportAs: 'ngbDatepicker',\n  host: {\n    '(input)': 'manualDateChange($event.target.value)',\n    '(change)': 'manualDateChange($event.target.value, true)',\n    '(focus)': 'onFocus()',\n    '(blur)': 'onBlur()',\n    '[disabled]': 'disabled'\n  },\n  providers: [\n    NGB_DATEPICKER_VALUE_ACCESSOR, NGB_DATEPICKER_VALIDATOR,\n    {provide: NgbDatepickerConfig, useExisting: NgbInputDatepickerConfig}\n  ],\n})\nexport class NgbInputDatepicker implements OnChanges,\n    OnDestroy, ControlValueAccessor, Validator {\n  private _cRef: ComponentRef<NgbDatepicker> = null;\n  private _disabled = false;\n  private _elWithFocus = null;\n  private _model: NgbDate;\n  private _inputValue: string;\n  private _zoneSubscription: any;\n\n  /**\n   * Indicates whether the datepicker popup should be closed automatically after date selection / outside click or not.\n   *\n   * * `true` - the popup will close on both date selection and outside click.\n   * * `false` - the popup can only be closed manually via `close()` or `toggle()` methods.\n   * * `\"inside\"` - the popup will close on date selection, but not outside clicks.\n   * * `\"outside\"` - the popup will close only on the outside click and not on date selection/inside clicks.\n   *\n   * @since 3.0.0\n   */\n  @Input() autoClose: boolean | 'inside' | 'outside';\n\n  /**\n   * The reference to a custom template for the day.\n   *\n   * Allows to completely override the way a day 'cell' in the calendar is displayed.\n   *\n   * See [`DayTemplateContext`](#/components/datepicker/api#DayTemplateContext) for the data you get inside.\n   */\n  @Input() dayTemplate: TemplateRef<DayTemplateContext>;\n\n  /**\n   * The callback to pass any arbitrary data to the template cell via the\n   * [`DayTemplateContext`](#/components/datepicker/api#DayTemplateContext)'s `data` parameter.\n   *\n   * `current` is the month that is currently displayed by the datepicker.\n   *\n   * @since 3.3.0\n   */\n  @Input() dayTemplateData: (date: NgbDate, current: {year: number, month: number}) => any;\n\n  /**\n   * The number of months to display.\n   */\n  @Input() displayMonths: number;\n\n  /**\n   * The first day of the week.\n   *\n   * With default calendar we use ISO 8601: 'weekday' is 1=Mon ... 7=Sun.\n   */\n  @Input() firstDayOfWeek: number;\n\n  /**\n   * The reference to the custom template for the datepicker footer.\n   *\n   * @since 3.3.0\n   */\n  @Input() footerTemplate: TemplateRef<any>;\n\n  /**\n   * The callback to mark some dates as disabled.\n   *\n   * It is called for each new date when navigating to a different month.\n   *\n   * `current` is the month that is currently displayed by the datepicker.\n   */\n  @Input() markDisabled: (date: NgbDate, current: {year: number, month: number}) => boolean;\n\n  /**\n   * The earliest date that can be displayed or selected. Also used for form validation.\n   *\n   * If not provided, 'year' select box will display 10 years before the current month.\n   */\n  @Input() minDate: NgbDateStruct;\n\n  /**\n   * The latest date that can be displayed or selected. Also used for form validation.\n   *\n   * If not provided, 'year' select box will display 10 years after the current month.\n   */\n  @Input() maxDate: NgbDateStruct;\n\n  /**\n   * Navigation type.\n   *\n   * * `\"select\"` - select boxes for month and navigation arrows\n   * * `\"arrows\"` - only navigation arrows\n   * * `\"none\"` - no navigation visible at all\n   */\n  @Input() navigation: 'select' | 'arrows' | 'none';\n\n  /**\n   * The way of displaying days that don't belong to the current month.\n   *\n   * * `\"visible\"` - days are visible\n   * * `\"hidden\"` - days are hidden, white space preserved\n   * * `\"collapsed\"` - days are collapsed, so the datepicker height might change between months\n   *\n   * For the 2+ months view, days in between months are never shown.\n   */\n  @Input() outsideDays: 'visible' | 'collapsed' | 'hidden';\n\n  /**\n   * The preferred placement of the datepicker popup.\n   *\n   * Possible values are `\"top\"`, `\"top-left\"`, `\"top-right\"`, `\"bottom\"`, `\"bottom-left\"`,\n   * `\"bottom-right\"`, `\"left\"`, `\"left-top\"`, `\"left-bottom\"`, `\"right\"`, `\"right-top\"`,\n   * `\"right-bottom\"`\n   *\n   * Accepts an array of strings or a string with space separated possible values.\n   *\n   * The default order of preference is `\"bottom-left bottom-right top-left top-right\"`\n   *\n   * Please see the [positioning overview](#/positioning) for more details.\n   */\n  @Input() placement: PlacementArray;\n\n  /**\n   * If `true`, when closing datepicker will focus element that was focused before datepicker was opened.\n   *\n   * Alternatively you could provide a selector or an `HTMLElement` to focus. If the element doesn't exist or invalid,\n   * we'll fallback to focus document body.\n   *\n   * @since 5.2.0\n   */\n  @Input() restoreFocus: true | string | HTMLElement;\n\n  /**\n   * If `true`, weekdays will be displayed.\n   */\n  @Input() showWeekdays: boolean;\n\n  /**\n   * If `true`, week numbers will be displayed.\n   */\n  @Input() showWeekNumbers: boolean;\n\n  /**\n   * The date to open calendar with.\n   *\n   * With the default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n   * If nothing or invalid date is provided, calendar will open with current month.\n   *\n   * You could use `navigateTo(date)` method as an alternative.\n   */\n  @Input() startDate: {year: number, month: number, day?: number};\n\n  /**\n   * A selector specifying the element the datepicker popup should be appended to.\n   *\n   * Currently only supports `\"body\"`.\n   */\n  @Input() container: string;\n\n  /**\n   * A css selector or html element specifying the element the datepicker popup should be positioned against.\n   *\n   * By default the input is used as a target.\n   *\n   * @since 4.2.0\n   */\n  @Input() positionTarget: string | HTMLElement;\n\n  /**\n   * An event emitted when user selects a date using keyboard or mouse.\n   *\n   * The payload of the event is currently selected `NgbDate`.\n   *\n   * @since 1.1.1\n   */\n  @Output() dateSelect = new EventEmitter<NgbDate>();\n\n  /**\n   * Event emitted right after the navigation happens and displayed month changes.\n   *\n   * See [`NgbDatepickerNavigateEvent`](#/components/datepicker/api#NgbDatepickerNavigateEvent) for the payload info.\n   */\n  @Output() navigate = new EventEmitter<NgbDatepickerNavigateEvent>();\n\n  /**\n   * An event fired after closing datepicker window.\n   *\n   * @since 4.2.0\n   */\n  @Output() closed = new EventEmitter<void>();\n\n  @Input()\n  get disabled() {\n    return this._disabled;\n  }\n  set disabled(value: any) {\n    this._disabled = value === '' || (value && value !== 'false');\n\n    if (this.isOpen()) {\n      this._cRef.instance.setDisabledState(this._disabled);\n    }\n  }\n\n  private _onChange = (_: any) => {};\n  private _onTouched = () => {};\n  private _validatorChange = () => {};\n\n\n  constructor(\n      private _parserFormatter: NgbDateParserFormatter, private _elRef: ElementRef<HTMLInputElement>,\n      private _vcRef: ViewContainerRef, private _renderer: Renderer2, private _cfr: ComponentFactoryResolver,\n      private _ngZone: NgZone, private _calendar: NgbCalendar, private _dateAdapter: NgbDateAdapter<any>,\n      @Inject(DOCUMENT) private _document: any, private _changeDetector: ChangeDetectorRef,\n      config: NgbInputDatepickerConfig) {\n    ['autoClose', 'container', 'positionTarget', 'placement'].forEach(input => this[input] = config[input]);\n    this._zoneSubscription = _ngZone.onStable.subscribe(() => this._updatePopupPosition());\n  }\n\n  registerOnChange(fn: (value: any) => any): void { this._onChange = fn; }\n\n  registerOnTouched(fn: () => any): void { this._onTouched = fn; }\n\n  registerOnValidatorChange(fn: () => void): void { this._validatorChange = fn; }\n\n  setDisabledState(isDisabled: boolean): void { this.disabled = isDisabled; }\n\n  validate(c: AbstractControl): {[key: string]: any} {\n    const value = c.value;\n\n    if (value === null || value === undefined) {\n      return null;\n    }\n\n    const ngbDate = this._fromDateStruct(this._dateAdapter.fromModel(value));\n\n    if (!this._calendar.isValid(ngbDate)) {\n      return {'ngbDate': {invalid: c.value}};\n    }\n\n    if (this.minDate && ngbDate.before(NgbDate.from(this.minDate))) {\n      return {'ngbDate': {requiredBefore: this.minDate}};\n    }\n\n    if (this.maxDate && ngbDate.after(NgbDate.from(this.maxDate))) {\n      return {'ngbDate': {requiredAfter: this.maxDate}};\n    }\n  }\n\n  writeValue(value) {\n    this._model = this._fromDateStruct(this._dateAdapter.fromModel(value));\n    this._writeModelValue(this._model);\n  }\n\n  manualDateChange(value: string, updateView = false) {\n    const inputValueChanged = value !== this._inputValue;\n    if (inputValueChanged) {\n      this._inputValue = value;\n      this._model = this._fromDateStruct(this._parserFormatter.parse(value));\n    }\n    if (inputValueChanged || !updateView) {\n      this._onChange(this._model ? this._dateAdapter.toModel(this._model) : (value === '' ? null : value));\n    }\n    if (updateView && this._model) {\n      this._writeModelValue(this._model);\n    }\n  }\n\n  isOpen() { return !!this._cRef; }\n\n  /**\n   * Opens the datepicker popup.\n   *\n   * If the related form control contains a valid date, the corresponding month will be opened.\n   */\n  open() {\n    if (!this.isOpen()) {\n      const cf = this._cfr.resolveComponentFactory(NgbDatepicker);\n      this._cRef = this._vcRef.createComponent(cf);\n\n      this._applyPopupStyling(this._cRef.location.nativeElement);\n      this._applyDatepickerInputs(this._cRef.instance);\n      this._subscribeForDatepickerOutputs(this._cRef.instance);\n      this._cRef.instance.ngOnInit();\n      this._cRef.instance.writeValue(this._dateAdapter.toModel(this._model));\n\n      // date selection event handling\n      this._cRef.instance.registerOnChange((selectedDate) => {\n        this.writeValue(selectedDate);\n        this._onChange(selectedDate);\n        this._onTouched();\n      });\n\n      this._cRef.changeDetectorRef.detectChanges();\n\n      this._cRef.instance.setDisabledState(this.disabled);\n\n      if (this.container === 'body') {\n        window.document.querySelector(this.container).appendChild(this._cRef.location.nativeElement);\n      }\n\n      // focus handling\n      this._elWithFocus = this._document.activeElement;\n      ngbFocusTrap(this._ngZone, this._cRef.location.nativeElement, this.closed, true);\n      this._cRef.instance.focus();\n\n      ngbAutoClose(\n          this._ngZone, this._document, this.autoClose, () => this.close(), this.closed, [],\n          [this._elRef.nativeElement, this._cRef.location.nativeElement]);\n    }\n  }\n\n  /**\n   * Closes the datepicker popup.\n   */\n  close() {\n    if (this.isOpen()) {\n      this._vcRef.remove(this._vcRef.indexOf(this._cRef.hostView));\n      this._cRef = null;\n      this.closed.emit();\n      this._changeDetector.markForCheck();\n\n      // restore focus\n      let elementToFocus = this._elWithFocus;\n      if (isString(this.restoreFocus)) {\n        elementToFocus = this._document.querySelector(this.restoreFocus);\n      } else if (this.restoreFocus !== undefined) {\n        elementToFocus = this.restoreFocus;\n      }\n\n      // in IE document.activeElement can contain an object without 'focus()' sometimes\n      if (elementToFocus && elementToFocus['focus']) {\n        elementToFocus.focus();\n      } else {\n        this._document.body.focus();\n      }\n    }\n  }\n\n  /**\n   * Toggles the datepicker popup.\n   */\n  toggle() {\n    if (this.isOpen()) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  /**\n   * Navigates to the provided date.\n   *\n   * With the default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n   * If nothing or invalid date provided calendar will open current month.\n   *\n   * Use the `[startDate]` input as an alternative.\n   */\n  navigateTo(date?: {year: number, month: number, day?: number}) {\n    if (this.isOpen()) {\n      this._cRef.instance.navigateTo(date);\n    }\n  }\n\n  onBlur() { this._onTouched(); }\n\n  onFocus() { this._elWithFocus = this._elRef.nativeElement; }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['minDate'] || changes['maxDate']) {\n      this._validatorChange();\n\n      if (this.isOpen()) {\n        if (changes['minDate']) {\n          this._cRef.instance.minDate = this._dateAdapter.toModel(changes.minDate.currentValue);\n        }\n        if (changes['maxDate']) {\n          this._cRef.instance.maxDate = this._dateAdapter.toModel(changes.maxDate.currentValue);\n        }\n        this._cRef.instance.ngOnChanges(changes);\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this.close();\n    this._zoneSubscription.unsubscribe();\n  }\n\n  private _applyDatepickerInputs(datepickerInstance: NgbDatepicker): void {\n    ['dayTemplate', 'dayTemplateData', 'displayMonths', 'firstDayOfWeek', 'footerTemplate', 'markDisabled', 'minDate',\n     'maxDate', 'navigation', 'outsideDays', 'showNavigation', 'showWeekdays', 'showWeekNumbers']\n        .forEach((optionName: string) => {\n          if (this[optionName] !== undefined) {\n            datepickerInstance[optionName] = this[optionName];\n          }\n        });\n    datepickerInstance.startDate = this.startDate || this._model;\n  }\n\n  private _applyPopupStyling(nativeElement: any) {\n    this._renderer.addClass(nativeElement, 'dropdown-menu');\n    this._renderer.addClass(nativeElement, 'show');\n\n    if (this.container === 'body') {\n      this._renderer.addClass(nativeElement, 'ngb-dp-body');\n    }\n  }\n\n  private _subscribeForDatepickerOutputs(datepickerInstance: NgbDatepicker) {\n    datepickerInstance.navigate.subscribe(navigateEvent => this.navigate.emit(navigateEvent));\n    datepickerInstance.dateSelect.subscribe(date => {\n      this.dateSelect.emit(date);\n      if (this.autoClose === true || this.autoClose === 'inside') {\n        this.close();\n      }\n    });\n  }\n\n  private _writeModelValue(model: NgbDate) {\n    const value = this._parserFormatter.format(model);\n    this._inputValue = value;\n    this._renderer.setProperty(this._elRef.nativeElement, 'value', value);\n    if (this.isOpen()) {\n      this._cRef.instance.writeValue(this._dateAdapter.toModel(model));\n      this._onTouched();\n    }\n  }\n\n  private _fromDateStruct(date: NgbDateStruct): NgbDate {\n    const ngbDate = date ? new NgbDate(date.year, date.month, date.day) : null;\n    return this._calendar.isValid(ngbDate) ? ngbDate : null;\n  }\n\n  private _updatePopupPosition() {\n    if (!this._cRef) {\n      return;\n    }\n\n    let hostElement: HTMLElement;\n    if (isString(this.positionTarget)) {\n      hostElement = this._document.querySelector(this.positionTarget);\n    } else if (this.positionTarget instanceof HTMLElement) {\n      hostElement = this.positionTarget;\n    } else {\n      hostElement = this._elRef.nativeElement;\n    }\n\n    if (this.positionTarget && !hostElement) {\n      throw new Error('ngbDatepicker could not find element declared in [positionTarget] to position against.');\n    }\n\n    positionElements(hostElement, this._cRef.location.nativeElement, this.placement, this.container === 'body');\n  }\n}\n","import {ChangeDetectionStrategy, Component, Input, ViewEncapsulation} from '@angular/core';\nimport {NgbDate} from './ngb-date';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\n\n@Component({\n  selector: '[ngbDatepickerDayView]',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  styleUrls: ['./datepicker-day-view.scss'],\n  host: {\n    'class': 'btn-light',\n    '[class.bg-primary]': 'selected',\n    '[class.text-white]': 'selected',\n    '[class.text-muted]': 'isMuted()',\n    '[class.outside]': 'isMuted()',\n    '[class.active]': 'focused'\n  },\n  template: `{{ i18n.getDayNumerals(date) }}`\n})\nexport class NgbDatepickerDayView {\n  @Input() currentMonth: number;\n  @Input() date: NgbDate;\n  @Input() disabled: boolean;\n  @Input() focused: boolean;\n  @Input() selected: boolean;\n\n  constructor(public i18n: NgbDatepickerI18n) {}\n\n  isMuted() { return !this.selected && (this.date.month !== this.currentMonth || this.disabled); }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n  AfterViewChecked,\n  ViewChild,\n  ElementRef,\n  Renderer2\n} from '@angular/core';\nimport {NgbDate} from './ngb-date';\nimport {toInteger} from '../util/util';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\n\n@Component({\n  selector: 'ngb-datepicker-navigation-select',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  styleUrls: ['./datepicker-navigation-select.scss'],\n  template: `\n    <select #month\n      [disabled]=\"disabled\"\n      class=\"custom-select\"\n      i18n-aria-label=\"@@ngb.datepicker.select-month\" aria-label=\"Select month\"\n      i18n-title=\"@@ngb.datepicker.select-month\" title=\"Select month\"\n      (change)=\"changeMonth($event.target.value)\">\n        <option *ngFor=\"let m of months\" [attr.aria-label]=\"i18n.getMonthFullName(m, date?.year)\"\n                [value]=\"m\">{{ i18n.getMonthShortName(m, date?.year) }}</option>\n    </select><select #year\n      [disabled]=\"disabled\"\n      class=\"custom-select\"\n      i18n-aria-label=\"@@ngb.datepicker.select-year\" aria-label=\"Select year\"\n      i18n-title=\"@@ngb.datepicker.select-year\" title=\"Select year\"\n      (change)=\"changeYear($event.target.value)\">\n        <option *ngFor=\"let y of years\" [value]=\"y\">{{ i18n.getYearNumerals(y) }}</option>\n    </select>\n  `\n})\nexport class NgbDatepickerNavigationSelect implements AfterViewChecked {\n  @Input() date: NgbDate;\n  @Input() disabled: boolean;\n  @Input() months: number[];\n  @Input() years: number[];\n\n  @Output() select = new EventEmitter<NgbDate>();\n\n  @ViewChild('month', {static: true, read: ElementRef}) monthSelect: ElementRef;\n  @ViewChild('year', {static: true, read: ElementRef}) yearSelect: ElementRef;\n\n  private _month = -1;\n  private _year = -1;\n\n  constructor(public i18n: NgbDatepickerI18n, private _renderer: Renderer2) {}\n\n  changeMonth(month: string) { this.select.emit(new NgbDate(this.date.year, toInteger(month), 1)); }\n\n  changeYear(year: string) { this.select.emit(new NgbDate(toInteger(year), this.date.month, 1)); }\n\n  ngAfterViewChecked() {\n    if (this.date) {\n      if (this.date.month !== this._month) {\n        this._month = this.date.month;\n        this._renderer.setProperty(this.monthSelect.nativeElement, 'value', this._month);\n      }\n      if (this.date.year !== this._year) {\n        this._year = this.date.year;\n        this._renderer.setProperty(this.yearSelect.nativeElement, 'value', this._year);\n      }\n    }\n  }\n}\n","import {NgbDate} from '../ngb-date';\nimport {NgbPeriod, NgbCalendar} from '../ngb-calendar';\nimport {Injectable} from '@angular/core';\nimport {isNumber} from '../../util/util';\n\n@Injectable()\nexport abstract class NgbCalendarHijri extends NgbCalendar {\n  /**\n   * Returns the number of days in a specific Hijri month.\n   * `month` is 1 for Muharram, 2 for Safar, etc.\n   * `year` is any Hijri year.\n   */\n  abstract getDaysPerMonth(month: number, year: number): number;\n\n  /**\n   * Returns the equivalent Hijri date value for a give input Gregorian date.\n   * `gDate` is s JS Date to be converted to Hijri.\n   */\n  abstract fromGregorian(gDate: Date): NgbDate;\n\n  /**\n   * Converts the current Hijri date to Gregorian.\n   */\n  abstract toGregorian(hDate: NgbDate): Date;\n\n  getDaysPerWeek() { return 7; }\n\n  getMonths() { return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]; }\n\n  getWeeksPerMonth() { return 6; }\n\n  getNext(date: NgbDate, period: NgbPeriod = 'd', number = 1) {\n    date = new NgbDate(date.year, date.month, date.day);\n\n    switch (period) {\n      case 'y':\n        date = this._setYear(date, date.year + number);\n        date.month = 1;\n        date.day = 1;\n        return date;\n      case 'm':\n        date = this._setMonth(date, date.month + number);\n        date.day = 1;\n        return date;\n      case 'd':\n        return this._setDay(date, date.day + number);\n      default:\n        return date;\n    }\n  }\n\n  getPrev(date: NgbDate, period: NgbPeriod = 'd', number = 1) { return this.getNext(date, period, -number); }\n\n  getWeekday(date: NgbDate) {\n    const day = this.toGregorian(date).getDay();\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    return day === 0 ? 7 : day;\n  }\n\n  getWeekNumber(week: readonly NgbDate[], firstDayOfWeek: number) {\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    if (firstDayOfWeek === 7) {\n      firstDayOfWeek = 0;\n    }\n\n    const thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n    const date = week[thursdayIndex];\n\n    const jsDate = this.toGregorian(date);\n    jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7));  // Thursday\n    const time = jsDate.getTime();\n    const MuhDate = this.toGregorian(new NgbDate(date.year, 1, 1));  // Compare with Muharram 1\n    return Math.floor(Math.round((time - MuhDate.getTime()) / 86400000) / 7) + 1;\n  }\n\n  getToday(): NgbDate { return this.fromGregorian(new Date()); }\n\n\n  isValid(date: NgbDate): boolean {\n    return date && isNumber(date.year) && isNumber(date.month) && isNumber(date.day) &&\n        !isNaN(this.toGregorian(date).getTime());\n  }\n\n  private _setDay(date: NgbDate, day: number): NgbDate {\n    day = +day;\n    let mDays = this.getDaysPerMonth(date.month, date.year);\n    if (day <= 0) {\n      while (day <= 0) {\n        date = this._setMonth(date, date.month - 1);\n        mDays = this.getDaysPerMonth(date.month, date.year);\n        day += mDays;\n      }\n    } else if (day > mDays) {\n      while (day > mDays) {\n        day -= mDays;\n        date = this._setMonth(date, date.month + 1);\n        mDays = this.getDaysPerMonth(date.month, date.year);\n      }\n    }\n    date.day = day;\n    return date;\n  }\n\n  private _setMonth(date: NgbDate, month: number): NgbDate {\n    month = +month;\n    date.year = date.year + Math.floor((month - 1) / 12);\n    date.month = Math.floor(((month - 1) % 12 + 12) % 12) + 1;\n    return date;\n  }\n\n  private _setYear(date: NgbDate, year: number): NgbDate {\n    date.year = +year;\n    return date;\n  }\n}\n","import {NgbCalendarHijri} from './ngb-calendar-hijri';\nimport {NgbDate} from '../ngb-date';\nimport {Injectable} from '@angular/core';\n\n/**\n * Checks if islamic year is a leap year\n */\nfunction isIslamicLeapYear(hYear: number): boolean {\n  return (14 + 11 * hYear) % 30 < 11;\n}\n\n/**\n * Checks if gregorian years is a leap year\n */\nfunction isGregorianLeapYear(gDate: Date): boolean {\n  const year = gDate.getFullYear();\n  return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n}\n\n/**\n * Returns the start of Hijri Month.\n * `hMonth` is 0 for Muharram, 1 for Safar, etc.\n * `hYear` is any Hijri hYear.\n */\nfunction getIslamicMonthStart(hYear: number, hMonth: number): number {\n  return Math.ceil(29.5 * hMonth) + (hYear - 1) * 354 + Math.floor((3 + 11 * hYear) / 30.0);\n}\n\n/**\n * Returns the start of Hijri year.\n * `year` is any Hijri year.\n */\nfunction getIslamicYearStart(year: number): number {\n  return (year - 1) * 354 + Math.floor((3 + 11 * year) / 30.0);\n}\n\nfunction mod(a: number, b: number): number {\n  return a - b * Math.floor(a / b);\n}\n\n/**\n * The civil calendar is one type of Hijri calendars used in islamic countries.\n * Uses a fixed cycle of alternating 29- and 30-day months,\n * with a leap day added to the last month of 11 out of every 30 years.\n * http://cldr.unicode.org/development/development-process/design-proposals/islamic-calendar-types\n * All the calculations here are based on the equations from \"Calendrical Calculations\" By Edward M. Reingold, Nachum\n * Dershowitz.\n */\n\nconst GREGORIAN_EPOCH = 1721425.5;\nconst ISLAMIC_EPOCH = 1948439.5;\n\n@Injectable()\nexport class NgbCalendarIslamicCivil extends NgbCalendarHijri {\n  /**\n   * Returns the equivalent islamic(civil) date value for a give input Gregorian date.\n   * `gDate` is a JS Date to be converted to Hijri.\n   */\n  fromGregorian(gDate: Date): NgbDate {\n    const gYear = gDate.getFullYear(), gMonth = gDate.getMonth(), gDay = gDate.getDate();\n\n    let julianDay = GREGORIAN_EPOCH - 1 + 365 * (gYear - 1) + Math.floor((gYear - 1) / 4) +\n        -Math.floor((gYear - 1) / 100) + Math.floor((gYear - 1) / 400) +\n        Math.floor(\n            (367 * (gMonth + 1) - 362) / 12 + (gMonth + 1 <= 2 ? 0 : isGregorianLeapYear(gDate) ? -1 : -2) + gDay);\n    julianDay = Math.floor(julianDay) + 0.5;\n\n    const days = julianDay - ISLAMIC_EPOCH;\n    const hYear = Math.floor((30 * days + 10646) / 10631.0);\n    let hMonth = Math.ceil((days - 29 - getIslamicYearStart(hYear)) / 29.5);\n    hMonth = Math.min(hMonth, 11);\n    const hDay = Math.ceil(days - getIslamicMonthStart(hYear, hMonth)) + 1;\n    return new NgbDate(hYear, hMonth + 1, hDay);\n  }\n\n  /**\n   * Returns the equivalent JS date value for a give input islamic(civil) date.\n   * `hDate` is an islamic(civil) date to be converted to Gregorian.\n   */\n  toGregorian(hDate: NgbDate): Date {\n    const hYear = hDate.year;\n    const hMonth = hDate.month - 1;\n    const hDay = hDate.day;\n    const julianDay =\n        hDay + Math.ceil(29.5 * hMonth) + (hYear - 1) * 354 + Math.floor((3 + 11 * hYear) / 30) + ISLAMIC_EPOCH - 1;\n\n    const wjd = Math.floor(julianDay - 0.5) + 0.5, depoch = wjd - GREGORIAN_EPOCH,\n          quadricent = Math.floor(depoch / 146097), dqc = mod(depoch, 146097), cent = Math.floor(dqc / 36524),\n          dcent = mod(dqc, 36524), quad = Math.floor(dcent / 1461), dquad = mod(dcent, 1461),\n          yindex = Math.floor(dquad / 365);\n    let year = quadricent * 400 + cent * 100 + quad * 4 + yindex;\n    if (!(cent === 4 || yindex === 4)) {\n      year++;\n    }\n\n    const gYearStart = GREGORIAN_EPOCH + 365 * (year - 1) + Math.floor((year - 1) / 4) - Math.floor((year - 1) / 100) +\n        Math.floor((year - 1) / 400);\n\n    const yearday = wjd - gYearStart;\n\n    const tjd = GREGORIAN_EPOCH - 1 + 365 * (year - 1) + Math.floor((year - 1) / 4) - Math.floor((year - 1) / 100) +\n        Math.floor((year - 1) / 400) + Math.floor(739 / 12 + (isGregorianLeapYear(new Date(year, 3, 1)) ? -1 : -2) + 1);\n\n    const leapadj = wjd < tjd ? 0 : isGregorianLeapYear(new Date(year, 3, 1)) ? 1 : 2;\n\n    const month = Math.floor(((yearday + leapadj) * 12 + 373) / 367);\n    const tjd2 = GREGORIAN_EPOCH - 1 + 365 * (year - 1) + Math.floor((year - 1) / 4) - Math.floor((year - 1) / 100) +\n        Math.floor((year - 1) / 400) +\n        Math.floor(\n            (367 * month - 362) / 12 + (month <= 2 ? 0 : isGregorianLeapYear(new Date(year, month - 1, 1)) ? -1 : -2) +\n            1);\n\n    const day = wjd - tjd2 + 1;\n\n    return new Date(year, month - 1, day);\n  }\n\n  /**\n   * Returns the number of days in a specific Hijri month.\n   * `month` is 1 for Muharram, 2 for Safar, etc.\n   * `year` is any Hijri year.\n   */\n  getDaysPerMonth(month: number, year: number): number {\n    year = year + Math.floor(month / 13);\n    month = ((month - 1) % 12) + 1;\n    let length = 29 + month % 2;\n    if (month === 12 && isIslamicLeapYear(year)) {\n      length++;\n    }\n    return length;\n  }\n}\n","import {NgbCalendarIslamicCivil} from './ngb-calendar-islamic-civil';\nimport {NgbDate} from '../ngb-date';\nimport {Injectable} from '@angular/core';\n\n/**\n * Umalqura calendar is one type of Hijri calendars used in islamic countries.\n * This Calendar is used by Saudi Arabia for administrative purpose.\n * Unlike tabular calendars, the algorithm involves astronomical calculation, but it's still deterministic.\n * http://cldr.unicode.org/development/development-process/design-proposals/islamic-calendar-types\n */\n\nconst GREGORIAN_FIRST_DATE = new Date(1882, 10, 12);\nconst GREGORIAN_LAST_DATE = new Date(2174, 10, 25);\nconst HIJRI_BEGIN = 1300;\nconst HIJRI_END = 1600;\nconst ONE_DAY = 1000 * 60 * 60 * 24;\n\nconst MONTH_LENGTH = [\n  // 1300-1304\n  '101010101010', '110101010100', '111011001001', '011011010100', '011011101010',\n  // 1305-1309\n  '001101101100', '101010101101', '010101010101', '011010101001', '011110010010',\n  // 1310-1314\n  '101110101001', '010111010100', '101011011010', '010101011100', '110100101101',\n  // 1315-1319\n  '011010010101', '011101001010', '101101010100', '101101101010', '010110101101',\n  // 1320-1324\n  '010010101110', '101001001111', '010100010111', '011010001011', '011010100101',\n  // 1325-1329\n  '101011010101', '001011010110', '100101011011', '010010011101', '101001001101',\n  // 1330-1334\n  '110100100110', '110110010101', '010110101100', '100110110110', '001010111010',\n  // 1335-1339\n  '101001011011', '010100101011', '101010010101', '011011001010', '101011101001',\n  // 1340-1344\n  '001011110100', '100101110110', '001010110110', '100101010110', '101011001010',\n  // 1345-1349\n  '101110100100', '101111010010', '010111011001', '001011011100', '100101101101',\n  // 1350-1354\n  '010101001101', '101010100101', '101101010010', '101110100101', '010110110100',\n  // 1355-1359\n  '100110110110', '010101010111', '001010010111', '010101001011', '011010100011',\n  // 1360-1364\n  '011101010010', '101101100101', '010101101010', '101010101011', '010100101011',\n  // 1365-1369\n  '110010010101', '110101001010', '110110100101', '010111001010', '101011010110',\n  // 1370-1374\n  '100101010111', '010010101011', '100101001011', '101010100101', '101101010010',\n  // 1375-1379\n  '101101101010', '010101110101', '001001110110', '100010110111', '010001011011',\n  // 1380-1384\n  '010101010101', '010110101001', '010110110100', '100111011010', '010011011101',\n  // 1385-1389\n  '001001101110', '100100110110', '101010101010', '110101010100', '110110110010',\n  // 1390-1394\n  '010111010101', '001011011010', '100101011011', '010010101011', '101001010101',\n  // 1395-1399\n  '101101001001', '101101100100', '101101110001', '010110110100', '101010110101',\n  // 1400-1404\n  '101001010101', '110100100101', '111010010010', '111011001001', '011011010100',\n  // 1405-1409\n  '101011101001', '100101101011', '010010101011', '101010010011', '110101001001',\n  // 1410-1414\n  '110110100100', '110110110010', '101010111001', '010010111010', '101001011011',\n  // 1415-1419\n  '010100101011', '101010010101', '101100101010', '101101010101', '010101011100',\n  // 1420-1424\n  '010010111101', '001000111101', '100100011101', '101010010101', '101101001010',\n  // 1425-1429\n  '101101011010', '010101101101', '001010110110', '100100111011', '010010011011',\n  // 1430-1434\n  '011001010101', '011010101001', '011101010100', '101101101010', '010101101100',\n  // 1435-1439\n  '101010101101', '010101010101', '101100101001', '101110010010', '101110101001',\n  // 1440-1444\n  '010111010100', '101011011010', '010101011010', '101010101011', '010110010101',\n  // 1445-1449\n  '011101001001', '011101100100', '101110101010', '010110110101', '001010110110',\n  // 1450-1454\n  '101001010110', '111001001101', '101100100101', '101101010010', '101101101010',\n  // 1455-1459\n  '010110101101', '001010101110', '100100101111', '010010010111', '011001001011',\n  // 1460-1464\n  '011010100101', '011010101100', '101011010110', '010101011101', '010010011101',\n  // 1465-1469\n  '101001001101', '110100010110', '110110010101', '010110101010', '010110110101',\n  // 1470-1474\n  '001011011010', '100101011011', '010010101101', '010110010101', '011011001010',\n  // 1475-1479\n  '011011100100', '101011101010', '010011110101', '001010110110', '100101010110',\n  // 1480-1484\n  '101010101010', '101101010100', '101111010010', '010111011001', '001011101010',\n  // 1485-1489\n  '100101101101', '010010101101', '101010010101', '101101001010', '101110100101',\n  // 1490-1494\n  '010110110010', '100110110101', '010011010110', '101010010111', '010101000111',\n  // 1495-1499\n  '011010010011', '011101001001', '101101010101', '010101101010', '101001101011',\n  // 1500-1504\n  '010100101011', '101010001011', '110101000110', '110110100011', '010111001010',\n  // 1505-1509\n  '101011010110', '010011011011', '001001101011', '100101001011', '101010100101',\n  // 1510-1514\n  '101101010010', '101101101001', '010101110101', '000101110110', '100010110111',\n  // 1515-1519\n  '001001011011', '010100101011', '010101100101', '010110110100', '100111011010',\n  // 1520-1524\n  '010011101101', '000101101101', '100010110110', '101010100110', '110101010010',\n  // 1525-1529\n  '110110101001', '010111010100', '101011011010', '100101011011', '010010101011',\n  // 1530-1534\n  '011001010011', '011100101001', '011101100010', '101110101001', '010110110010',\n  // 1535-1539\n  '101010110101', '010101010101', '101100100101', '110110010010', '111011001001',\n  // 1540-1544\n  '011011010010', '101011101001', '010101101011', '010010101011', '101001010101',\n  // 1545-1549\n  '110100101001', '110101010100', '110110101010', '100110110101', '010010111010',\n  // 1550-1554\n  '101000111011', '010010011011', '101001001101', '101010101010', '101011010101',\n  // 1555-1559\n  '001011011010', '100101011101', '010001011110', '101000101110', '110010011010',\n  // 1560-1564\n  '110101010101', '011010110010', '011010111001', '010010111010', '101001011101',\n  // 1565-1569\n  '010100101101', '101010010101', '101101010010', '101110101000', '101110110100',\n  // 1570-1574\n  '010110111001', '001011011010', '100101011010', '101101001010', '110110100100',\n  // 1575-1579\n  '111011010001', '011011101000', '101101101010', '010101101101', '010100110101',\n  // 1580-1584\n  '011010010101', '110101001010', '110110101000', '110111010100', '011011011010',\n  // 1585-1589\n  '010101011011', '001010011101', '011000101011', '101100010101', '101101001010',\n  // 1590-1594\n  '101110010101', '010110101010', '101010101110', '100100101110', '110010001111',\n  // 1595-1599\n  '010100100111', '011010010101', '011010101010', '101011010110', '010101011101',\n  // 1600\n  '001010011101'\n];\n\nfunction getDaysDiff(date1: Date, date2: Date): number {\n  // Ignores the time part in date1 and date2:\n  const time1 = Date.UTC(date1.getFullYear(), date1.getMonth(), date1.getDate());\n  const time2 = Date.UTC(date2.getFullYear(), date2.getMonth(), date2.getDate());\n  const diff = Math.abs(time1 - time2);\n  return Math.round(diff / ONE_DAY);\n}\n\n@Injectable()\nexport class NgbCalendarIslamicUmalqura extends NgbCalendarIslamicCivil {\n  /**\n  * Returns the equivalent islamic(Umalqura) date value for a give input Gregorian date.\n  * `gdate` is s JS Date to be converted to Hijri.\n  */\n  fromGregorian(gDate: Date): NgbDate {\n    let hDay = 1, hMonth = 0, hYear = 1300;\n    let daysDiff = getDaysDiff(gDate, GREGORIAN_FIRST_DATE);\n    if (gDate.getTime() - GREGORIAN_FIRST_DATE.getTime() >= 0 && gDate.getTime() - GREGORIAN_LAST_DATE.getTime() <= 0) {\n      let year = 1300;\n      for (let i = 0; i < MONTH_LENGTH.length; i++, year++) {\n        for (let j = 0; j < 12; j++) {\n          let numOfDays = +MONTH_LENGTH[i][j] + 29;\n          if (daysDiff <= numOfDays) {\n            hDay = daysDiff + 1;\n            if (hDay > numOfDays) {\n              hDay = 1;\n              j++;\n            }\n            if (j > 11) {\n              j = 0;\n              year++;\n            }\n            hMonth = j;\n            hYear = year;\n            return new NgbDate(hYear, hMonth + 1, hDay);\n          }\n          daysDiff = daysDiff - numOfDays;\n        }\n      }\n    } else {\n      return super.fromGregorian(gDate);\n    }\n  }\n  /**\n  * Converts the current Hijri date to Gregorian.\n  */\n  toGregorian(hDate: NgbDate): Date {\n    const hYear = hDate.year;\n    const hMonth = hDate.month - 1;\n    const hDay = hDate.day;\n    let gDate = new Date(GREGORIAN_FIRST_DATE);\n    let dayDiff = hDay - 1;\n    if (hYear >= HIJRI_BEGIN && hYear <= HIJRI_END) {\n      for (let y = 0; y < hYear - HIJRI_BEGIN; y++) {\n        for (let m = 0; m < 12; m++) {\n          dayDiff += +MONTH_LENGTH[y][m] + 29;\n        }\n      }\n      for (let m = 0; m < hMonth; m++) {\n        dayDiff += +MONTH_LENGTH[hYear - HIJRI_BEGIN][m] + 29;\n      }\n      gDate.setDate(GREGORIAN_FIRST_DATE.getDate() + dayDiff);\n    } else {\n      gDate = super.toGregorian(hDate);\n    }\n    return gDate;\n  }\n  /**\n  * Returns the number of days in a specific Hijri hMonth.\n  * `hMonth` is 1 for Muharram, 2 for Safar, etc.\n  * `hYear` is any Hijri hYear.\n  */\n  getDaysPerMonth(hMonth: number, hYear: number): number {\n    if (hYear >= HIJRI_BEGIN && hYear <= HIJRI_END) {\n      const pos = hYear - HIJRI_BEGIN;\n      return +MONTH_LENGTH[pos][hMonth - 1] + 29;\n    }\n    return super.getDaysPerMonth(hMonth, hYear);\n  }\n}\n","import {NgbDate} from '../ngb-date';\n\n/**\n * Returns the equivalent JS date value for a give input Jalali date.\n * `jalaliDate` is an Jalali date to be converted to Gregorian.\n */\nexport function toGregorian(jalaliDate: NgbDate): Date {\n  let jdn = jalaliToJulian(jalaliDate.year, jalaliDate.month, jalaliDate.day);\n  let date = julianToGregorian(jdn);\n  date.setHours(6, 30, 3, 200);\n  return date;\n}\n\n/**\n * Returns the equivalent jalali date value for a give input Gregorian date.\n * `gdate` is a JS Date to be converted to jalali.\n * utc to local\n */\nexport function fromGregorian(gdate: Date): NgbDate {\n  let g2d = gregorianToJulian(gdate.getFullYear(), gdate.getMonth() + 1, gdate.getDate());\n  return julianToJalali(g2d);\n}\n\nexport function setJalaliYear(date: NgbDate, yearValue: number): NgbDate {\n  date.year = +yearValue;\n  return date;\n}\n\nexport function setJalaliMonth(date: NgbDate, month: number): NgbDate {\n  month = +month;\n  date.year = date.year + Math.floor((month - 1) / 12);\n  date.month = Math.floor(((month - 1) % 12 + 12) % 12) + 1;\n  return date;\n}\n\nexport function setJalaliDay(date: NgbDate, day: number): NgbDate {\n  let mDays = getDaysPerMonth(date.month, date.year);\n  if (day <= 0) {\n    while (day <= 0) {\n      date = setJalaliMonth(date, date.month - 1);\n      mDays = getDaysPerMonth(date.month, date.year);\n      day += mDays;\n    }\n  } else if (day > mDays) {\n    while (day > mDays) {\n      day -= mDays;\n      date = setJalaliMonth(date, date.month + 1);\n      mDays = getDaysPerMonth(date.month, date.year);\n    }\n  }\n  date.day = day;\n  return date;\n}\n\nfunction mod(a: number, b: number): number {\n  return a - b * Math.floor(a / b);\n}\n\nfunction div(a: number, b: number) {\n  return Math.trunc(a / b);\n}\n\n/*\n This function determines if the Jalali (Persian) year is\n leap (366-day long) or is the common year (365 days), and\n finds the day in March (Gregorian calendar) of the first\n day of the Jalali year (jalaliYear).\n @param jalaliYear Jalali calendar year (-61 to 3177)\n @return\n leap: number of years since the last leap year (0 to 4)\n gYear: Gregorian year of the beginning of Jalali year\n march: the March day of Farvardin the 1st (1st day of jalaliYear)\n @see: http://www.astro.uni.torun.pl/~kb/Papers/EMP/PersianC-EMP.htm\n @see: http://www.fourmilab.ch/documents/calendar/\n */\nfunction jalCal(jalaliYear: number) {\n  // Jalali years starting the 33-year rule.\n  let breaks =\n      [-61, 9, 38, 199, 426, 686, 756, 818, 1111, 1181, 1210, 1635, 2060, 2097, 2192, 2262, 2324, 2394, 2456, 3178];\n  const breaksLength = breaks.length;\n  const gYear = jalaliYear + 621;\n  let leapJ = -14;\n  let jp = breaks[0];\n\n  if (jalaliYear < jp || jalaliYear >= breaks[breaksLength - 1]) {\n    throw new Error('Invalid Jalali year ' + jalaliYear);\n  }\n\n  // Find the limiting years for the Jalali year jalaliYear.\n  let jump;\n  for (let i = 1; i < breaksLength; i += 1) {\n    const jm = breaks[i];\n    jump = jm - jp;\n    if (jalaliYear < jm) {\n      break;\n    }\n    leapJ = leapJ + div(jump, 33) * 8 + div(mod(jump, 33), 4);\n    jp = jm;\n  }\n  let n = jalaliYear - jp;\n\n  // Find the number of leap years from AD 621 to the beginning\n  // of the current Jalali year in the Persian calendar.\n  leapJ = leapJ + div(n, 33) * 8 + div(mod(n, 33) + 3, 4);\n  if (mod(jump, 33) === 4 && jump - n === 4) {\n    leapJ += 1;\n  }\n\n  // And the same in the Gregorian calendar (until the year gYear).\n  const leapG = div(gYear, 4) - div((div(gYear, 100) + 1) * 3, 4) - 150;\n\n  // Determine the Gregorian date of Farvardin the 1st.\n  const march = 20 + leapJ - leapG;\n\n  // Find how many years have passed since the last leap year.\n  if (jump - n < 6) {\n    n = n - jump + div(jump + 4, 33) * 33;\n  }\n  let leap = mod(mod(n + 1, 33) - 1, 4);\n  if (leap === -1) {\n    leap = 4;\n  }\n\n  return {leap: leap, gy: gYear, march: march};\n}\n\n/*\n Calculates Gregorian and Julian calendar dates from the Julian Day number\n (jdn) for the period since jdn=-34839655 (i.e. the year -100100 of both\n calendars) to some millions years ahead of the present.\n @param jdn Julian Day number\n @return\n gYear: Calendar year (years BC numbered 0, -1, -2, ...)\n gMonth: Calendar month (1 to 12)\n gDay: Calendar day of the month M (1 to 28/29/30/31)\n */\nfunction julianToGregorian(julianDayNumber: number) {\n  let j = 4 * julianDayNumber + 139361631;\n  j = j + div(div(4 * julianDayNumber + 183187720, 146097) * 3, 4) * 4 - 3908;\n  const i = div(mod(j, 1461), 4) * 5 + 308;\n  const gDay = div(mod(i, 153), 5) + 1;\n  const gMonth = mod(div(i, 153), 12) + 1;\n  const gYear = div(j, 1461) - 100100 + div(8 - gMonth, 6);\n\n  return new Date(gYear, gMonth - 1, gDay);\n}\n\n/*\n Converts a date of the Jalali calendar to the Julian Day number.\n @param jy Jalali year (1 to 3100)\n @param jm Jalali month (1 to 12)\n @param jd Jalali day (1 to 29/31)\n @return Julian Day number\n */\nfunction gregorianToJulian(gy: number, gm: number, gd: number) {\n  let d = div((gy + div(gm - 8, 6) + 100100) * 1461, 4) + div(153 * mod(gm + 9, 12) + 2, 5) + gd - 34840408;\n  d = d - div(div(gy + 100100 + div(gm - 8, 6), 100) * 3, 4) + 752;\n  return d;\n}\n\n/*\n Converts the Julian Day number to a date in the Jalali calendar.\n @param julianDayNumber Julian Day number\n @return\n jalaliYear: Jalali year (1 to 3100)\n jalaliMonth: Jalali month (1 to 12)\n jalaliDay: Jalali day (1 to 29/31)\n */\nfunction julianToJalali(julianDayNumber: number) {\n  let gy = julianToGregorian(julianDayNumber).getFullYear()  // Calculate Gregorian year (gy).\n      ,\n      jalaliYear = gy - 621, r = jalCal(jalaliYear), gregorianDay = gregorianToJulian(gy, 3, r.march), jalaliDay,\n      jalaliMonth, numberOfDays;\n\n  // Find number of days that passed since 1 Farvardin.\n  numberOfDays = julianDayNumber - gregorianDay;\n  if (numberOfDays >= 0) {\n    if (numberOfDays <= 185) {\n      // The first 6 months.\n      jalaliMonth = 1 + div(numberOfDays, 31);\n      jalaliDay = mod(numberOfDays, 31) + 1;\n      return new NgbDate(jalaliYear, jalaliMonth, jalaliDay);\n    } else {\n      // The remaining months.\n      numberOfDays -= 186;\n    }\n  } else {\n    // Previous Jalali year.\n    jalaliYear -= 1;\n    numberOfDays += 179;\n    if (r.leap === 1) {\n      numberOfDays += 1;\n    }\n  }\n  jalaliMonth = 7 + div(numberOfDays, 30);\n  jalaliDay = mod(numberOfDays, 30) + 1;\n\n  return new NgbDate(jalaliYear, jalaliMonth, jalaliDay);\n}\n\n/*\n Converts a date of the Jalali calendar to the Julian Day number.\n @param jYear Jalali year (1 to 3100)\n @param jMonth Jalali month (1 to 12)\n @param jDay Jalali day (1 to 29/31)\n @return Julian Day number\n */\nfunction jalaliToJulian(jYear: number, jMonth: number, jDay: number) {\n  let r = jalCal(jYear);\n  return gregorianToJulian(r.gy, 3, r.march) + (jMonth - 1) * 31 - div(jMonth, 7) * (jMonth - 7) + jDay - 1;\n}\n\n/**\n * Returns the number of days in a specific jalali month.\n */\nfunction getDaysPerMonth(month: number, year: number): number {\n  if (month <= 6) {\n    return 31;\n  }\n  if (month <= 11) {\n    return 30;\n  }\n  if (jalCal(year).leap === 0) {\n    return 30;\n  }\n  return 29;\n}\n","import {Injectable} from '@angular/core';\nimport {NgbDate} from '../ngb-date';\nimport {NgbCalendar, NgbPeriod} from '../ngb-calendar';\nimport {isInteger} from '../../util/util';\n\nimport {fromGregorian, setJalaliDay, setJalaliMonth, setJalaliYear, toGregorian} from './jalali';\n\n@Injectable()\nexport class NgbCalendarPersian extends NgbCalendar {\n  getDaysPerWeek() { return 7; }\n\n  getMonths() { return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]; }\n\n  getWeeksPerMonth() { return 6; }\n\n  getNext(date: NgbDate, period: NgbPeriod = 'd', number = 1) {\n    date = new NgbDate(date.year, date.month, date.day);\n\n    switch (period) {\n      case 'y':\n        date = setJalaliYear(date, date.year + number);\n        date.month = 1;\n        date.day = 1;\n        return date;\n      case 'm':\n        date = setJalaliMonth(date, date.month + number);\n        date.day = 1;\n        return date;\n      case 'd':\n        return setJalaliDay(date, date.day + number);\n      default:\n        return date;\n    }\n  }\n\n  getPrev(date: NgbDate, period: NgbPeriod = 'd', number = 1) { return this.getNext(date, period, -number); }\n\n  getWeekday(date: NgbDate) {\n    const day = toGregorian(date).getDay();\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    return day === 0 ? 7 : day;\n  }\n\n  getWeekNumber(week: readonly NgbDate[], firstDayOfWeek: number) {\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    if (firstDayOfWeek === 7) {\n      firstDayOfWeek = 0;\n    }\n\n    const thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n    const date = week[thursdayIndex];\n\n    const jsDate = toGregorian(date);\n    jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7));  // Thursday\n    const time = jsDate.getTime();\n    const startDate = toGregorian(new NgbDate(date.year, 1, 1));\n    return Math.floor(Math.round((time - startDate.getTime()) / 86400000) / 7) + 1;\n  }\n\n  getToday(): NgbDate { return fromGregorian(new Date()); }\n\n  isValid(date: NgbDate): boolean {\n    return date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day) &&\n        !isNaN(toGregorian(date).getTime());\n  }\n}\n","import {NgbDate} from '../ngb-date';\nimport {NgbDateStruct} from '../ngb-date-struct';\n\nconst PARTS_PER_HOUR = 1080;\nconst PARTS_PER_DAY = 24 * PARTS_PER_HOUR;\nconst PARTS_FRACTIONAL_MONTH = 12 * PARTS_PER_HOUR + 793;\nconst PARTS_PER_MONTH = 29 * PARTS_PER_DAY + PARTS_FRACTIONAL_MONTH;\nconst BAHARAD = 11 * PARTS_PER_HOUR + 204;\nconst HEBREW_DAY_ON_JAN_1_1970 = 2092591;\nconst GREGORIAN_EPOCH = 1721425.5;\n\nfunction isGregorianLeapYear(year: number): boolean {\n  return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n}\n\nfunction numberOfFirstDayInYear(year: number): number {\n  let monthsBeforeYear = Math.floor((235 * year - 234) / 19);\n  let fractionalMonthsBeforeYear = monthsBeforeYear * PARTS_FRACTIONAL_MONTH + BAHARAD;\n  let dayNumber = monthsBeforeYear * 29 + Math.floor(fractionalMonthsBeforeYear / PARTS_PER_DAY);\n  let timeOfDay = fractionalMonthsBeforeYear % PARTS_PER_DAY;\n\n  let dayOfWeek = dayNumber % 7;  // 0 == Monday\n\n  if (dayOfWeek === 2 || dayOfWeek === 4 || dayOfWeek === 6) {\n    dayNumber++;\n    dayOfWeek = dayNumber % 7;\n  }\n  if (dayOfWeek === 1 && timeOfDay > 15 * PARTS_PER_HOUR + 204 && !isHebrewLeapYear(year)) {\n    dayNumber += 2;\n  } else if (dayOfWeek === 0 && timeOfDay > 21 * PARTS_PER_HOUR + 589 && isHebrewLeapYear(year - 1)) {\n    dayNumber++;\n  }\n  return dayNumber;\n}\n\nfunction getDaysInGregorianMonth(month: number, year: number): number {\n  let days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n  if (isGregorianLeapYear(year)) {\n    days[1]++;\n  }\n  return days[month - 1];\n}\n\nfunction getHebrewMonths(year: number): number {\n  return isHebrewLeapYear(year) ? 13 : 12;\n}\n\n/**\n * Returns the number of days in a specific Hebrew year.\n * `year` is any Hebrew year.\n */\nfunction getDaysInHebrewYear(year: number): number {\n  return numberOfFirstDayInYear(year + 1) - numberOfFirstDayInYear(year);\n}\n\nexport function isHebrewLeapYear(year: number): boolean {\n  let b = (year * 12 + 17) % 19;\n  return b >= ((b < 0) ? -7 : 12);\n}\n\n/**\n * Returns the number of days in a specific Hebrew month.\n * `month` is 1 for Nisan, 2 for Iyar etc. Note: Hebrew leap year contains 13 months.\n * `year` is any Hebrew year.\n */\nexport function getDaysInHebrewMonth(month: number, year: number): number {\n  let yearLength = numberOfFirstDayInYear(year + 1) - numberOfFirstDayInYear(year);\n  let yearType = (yearLength <= 380 ? yearLength : (yearLength - 30)) - 353;\n  let leapYear = isHebrewLeapYear(year);\n  let daysInMonth = leapYear ? [30, 29, 29, 29, 30, 30, 29, 30, 29, 30, 29, 30, 29] :\n                               [30, 29, 29, 29, 30, 29, 30, 29, 30, 29, 30, 29];\n  if (yearType > 0) {\n    daysInMonth[2]++;  // Kislev gets an extra day in normal or complete years.\n  }\n  if (yearType > 1) {\n    daysInMonth[1]++;  // Heshvan gets an extra day in complete years only.\n  }\n  return daysInMonth[month - 1];\n}\n\nexport function getDayNumberInHebrewYear(date: NgbDate): number {\n  let numberOfDay = 0;\n  for (let i = 1; i < date.month; i++) {\n    numberOfDay += getDaysInHebrewMonth(i, date.year);\n  }\n  return numberOfDay + date.day;\n}\n\nexport function setHebrewMonth(date: NgbDate, val: number): NgbDate {\n  let after = val >= 0;\n  if (!after) {\n    val = -val;\n  }\n  while (val > 0) {\n    if (after) {\n      if (val > getHebrewMonths(date.year) - date.month) {\n        val -= getHebrewMonths(date.year) - date.month + 1;\n        date.year++;\n        date.month = 1;\n      } else {\n        date.month += val;\n        val = 0;\n      }\n    } else {\n      if (val >= date.month) {\n        date.year--;\n        val -= date.month;\n        date.month = getHebrewMonths(date.year);\n      } else {\n        date.month -= val;\n        val = 0;\n      }\n    }\n  }\n  return date;\n}\n\nexport function setHebrewDay(date: NgbDate, val: number): NgbDate {\n  let after = val >= 0;\n  if (!after) {\n    val = -val;\n  }\n  while (val > 0) {\n    if (after) {\n      if (val > getDaysInHebrewYear(date.year) - getDayNumberInHebrewYear(date)) {\n        val -= getDaysInHebrewYear(date.year) - getDayNumberInHebrewYear(date) + 1;\n        date.year++;\n        date.month = 1;\n        date.day = 1;\n      } else if (val > getDaysInHebrewMonth(date.month, date.year) - date.day) {\n        val -= getDaysInHebrewMonth(date.month, date.year) - date.day + 1;\n        date.month++;\n        date.day = 1;\n      } else {\n        date.day += val;\n        val = 0;\n      }\n    } else {\n      if (val >= date.day) {\n        val -= date.day;\n        date.month--;\n        if (date.month === 0) {\n          date.year--;\n          date.month = getHebrewMonths(date.year);\n        }\n        date.day = getDaysInHebrewMonth(date.month, date.year);\n      } else {\n        date.day -= val;\n        val = 0;\n      }\n    }\n  }\n  return date;\n}\n\n/**\n * Returns the equivalent Hebrew date value for a give input Gregorian date.\n * `gdate` is a JS Date to be converted to Hebrew date.\n */\nexport function fromGregorian(gdate: Date): NgbDate {\n  const date = new Date(gdate);\n  const gYear = date.getFullYear(), gMonth = date.getMonth(), gDay = date.getDate();\n  let julianDay = GREGORIAN_EPOCH - 1 + 365 * (gYear - 1) + Math.floor((gYear - 1) / 4) -\n      Math.floor((gYear - 1) / 100) + Math.floor((gYear - 1) / 400) +\n      Math.floor((367 * (gMonth + 1) - 362) / 12 + (gMonth + 1 <= 2 ? 0 : isGregorianLeapYear(gYear) ? -1 : -2) + gDay);\n  julianDay = Math.floor(julianDay + 0.5);\n  let daysSinceHebEpoch = julianDay - 347997;\n  let monthsSinceHebEpoch = Math.floor(daysSinceHebEpoch * PARTS_PER_DAY / PARTS_PER_MONTH);\n  let hYear = Math.floor((monthsSinceHebEpoch * 19 + 234) / 235) + 1;\n  let firstDayOfThisYear = numberOfFirstDayInYear(hYear);\n  let dayOfYear = daysSinceHebEpoch - firstDayOfThisYear;\n  while (dayOfYear < 1) {\n    hYear--;\n    firstDayOfThisYear = numberOfFirstDayInYear(hYear);\n    dayOfYear = daysSinceHebEpoch - firstDayOfThisYear;\n  }\n  let hMonth = 1;\n  let hDay = dayOfYear;\n  while (hDay > getDaysInHebrewMonth(hMonth, hYear)) {\n    hDay -= getDaysInHebrewMonth(hMonth, hYear);\n    hMonth++;\n  }\n  return new NgbDate(hYear, hMonth, hDay);\n}\n\n/**\n * Returns the equivalent JS date value for a given Hebrew date.\n * `hebrewDate` is an Hebrew date to be converted to Gregorian.\n */\nexport function toGregorian(hebrewDate: NgbDateStruct | NgbDate): Date {\n  const hYear = hebrewDate.year;\n  const hMonth = hebrewDate.month;\n  const hDay = hebrewDate.day;\n  let days = numberOfFirstDayInYear(hYear);\n  for (let i = 1; i < hMonth; i++) {\n    days += getDaysInHebrewMonth(i, hYear);\n  }\n  days += hDay;\n  let diffDays = days - HEBREW_DAY_ON_JAN_1_1970;\n  let after = diffDays >= 0;\n  if (!after) {\n    diffDays = -diffDays;\n  }\n  let gYear = 1970;\n  let gMonth = 1;\n  let gDay = 1;\n  while (diffDays > 0) {\n    if (after) {\n      if (diffDays >= (isGregorianLeapYear(gYear) ? 366 : 365)) {\n        diffDays -= isGregorianLeapYear(gYear) ? 366 : 365;\n        gYear++;\n      } else if (diffDays >= getDaysInGregorianMonth(gMonth, gYear)) {\n        diffDays -= getDaysInGregorianMonth(gMonth, gYear);\n        gMonth++;\n      } else {\n        gDay += diffDays;\n        diffDays = 0;\n      }\n    } else {\n      if (diffDays >= (isGregorianLeapYear(gYear - 1) ? 366 : 365)) {\n        diffDays -= isGregorianLeapYear(gYear - 1) ? 366 : 365;\n        gYear--;\n      } else {\n        if (gMonth > 1) {\n          gMonth--;\n        } else {\n          gMonth = 12;\n          gYear--;\n        }\n        if (diffDays >= getDaysInGregorianMonth(gMonth, gYear)) {\n          diffDays -= getDaysInGregorianMonth(gMonth, gYear);\n        } else {\n          gDay = getDaysInGregorianMonth(gMonth, gYear) - diffDays + 1;\n          diffDays = 0;\n        }\n      }\n    }\n  }\n  return new Date(gYear, gMonth - 1, gDay);\n}\n\nexport function hebrewNumerals(numerals: number): string {\n  if (!numerals) {\n    return '';\n  }\n  const hArray0_9 = ['', '\\u05d0', '\\u05d1', '\\u05d2', '\\u05d3', '\\u05d4', '\\u05d5', '\\u05d6', '\\u05d7', '\\u05d8'];\n  const hArray10_19 = [\n    '\\u05d9', '\\u05d9\\u05d0', '\\u05d9\\u05d1', '\\u05d9\\u05d2', '\\u05d9\\u05d3', '\\u05d8\\u05d5', '\\u05d8\\u05d6',\n    '\\u05d9\\u05d6', '\\u05d9\\u05d7', '\\u05d9\\u05d8'\n  ];\n  const hArray20_90 = ['', '', '\\u05db', '\\u05dc', '\\u05de', '\\u05e0', '\\u05e1', '\\u05e2', '\\u05e4', '\\u05e6'];\n  const hArray100_900 = [\n    '', '\\u05e7', '\\u05e8', '\\u05e9', '\\u05ea', '\\u05ea\\u05e7', '\\u05ea\\u05e8', '\\u05ea\\u05e9', '\\u05ea\\u05ea',\n    '\\u05ea\\u05ea\\u05e7'\n  ];\n  const hArray1000_9000 = [\n    '', '\\u05d0', '\\u05d1', '\\u05d1\\u05d0', '\\u05d1\\u05d1', '\\u05d4', '\\u05d4\\u05d0', '\\u05d4\\u05d1',\n    '\\u05d4\\u05d1\\u05d0', '\\u05d4\\u05d1\\u05d1'\n  ];\n  const geresh = '\\u05f3', gershaim = '\\u05f4';\n  let mem = 0;\n  let result = [];\n  let step = 0;\n  while (numerals > 0) {\n    let m = numerals % 10;\n    if (step === 0) {\n      mem = m;\n    } else if (step === 1) {\n      if (m !== 1) {\n        result.unshift(hArray20_90[m], hArray0_9[mem]);\n      } else {\n        result.unshift(hArray10_19[mem]);\n      }\n    } else if (step === 2) {\n      result.unshift(hArray100_900[m]);\n    } else {\n      if (m !== 5) {\n        result.unshift(hArray1000_9000[m], geresh, ' ');\n      }\n      break;\n    }\n    numerals = Math.floor(numerals / 10);\n    if (step === 0 && numerals === 0) {\n      result.unshift(hArray0_9[m]);\n    }\n    step++;\n  }\n  result = result.join('').split('');\n  if (result.length === 1) {\n    result.push(geresh);\n  } else if (result.length > 1) {\n    result.splice(result.length - 1, 0, gershaim);\n  }\n  return result.join('');\n}\n","import {NgbDate} from '../ngb-date';\nimport {fromJSDate, NgbCalendar, NgbPeriod, toJSDate} from '../ngb-calendar';\nimport {Injectable} from '@angular/core';\nimport {isNumber} from '../../util/util';\nimport {\n  fromGregorian,\n  getDayNumberInHebrewYear,\n  getDaysInHebrewMonth,\n  isHebrewLeapYear,\n  toGregorian,\n  setHebrewDay,\n  setHebrewMonth\n} from './hebrew';\n\n/**\n * @since 3.2.0\n */\n@Injectable()\nexport class NgbCalendarHebrew extends NgbCalendar {\n  getDaysPerWeek() { return 7; }\n\n  getMonths(year?: number) {\n    if (year && isHebrewLeapYear(year)) {\n      return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\n    } else {\n      return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n    }\n  }\n\n  getWeeksPerMonth() { return 6; }\n\n  isValid(date: NgbDate): boolean {\n    let b = date && isNumber(date.year) && isNumber(date.month) && isNumber(date.day);\n    b = b && date.month > 0 && date.month <= (isHebrewLeapYear(date.year) ? 13 : 12);\n    b = b && date.day > 0 && date.day <= getDaysInHebrewMonth(date.month, date.year);\n    return b && !isNaN(toGregorian(date).getTime());\n  }\n\n  getNext(date: NgbDate, period: NgbPeriod = 'd', number = 1) {\n    date = new NgbDate(date.year, date.month, date.day);\n\n    switch (period) {\n      case 'y':\n        date.year += number;\n        date.month = 1;\n        date.day = 1;\n        return date;\n      case 'm':\n        date = setHebrewMonth(date, number);\n        date.day = 1;\n        return date;\n      case 'd':\n        return setHebrewDay(date, number);\n      default:\n        return date;\n    }\n  }\n\n  getPrev(date: NgbDate, period: NgbPeriod = 'd', number = 1) { return this.getNext(date, period, -number); }\n\n  getWeekday(date: NgbDate) {\n    const day = toGregorian(date).getDay();\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    return day === 0 ? 7 : day;\n  }\n\n  getWeekNumber(week: readonly NgbDate[], firstDayOfWeek: number) {\n    const date = week[week.length - 1];\n    return Math.ceil(getDayNumberInHebrewYear(date) / 7);\n  }\n\n  getToday(): NgbDate { return fromGregorian(new Date()); }\n\n  /**\n   * @since 3.4.0\n   */\n  toGregorian(date: NgbDate): NgbDate { return fromJSDate(toGregorian(date)); }\n\n  /**\n   * @since 3.4.0\n   */\n  fromGregorian(date: NgbDate): NgbDate { return fromGregorian(toJSDate(date)); }\n}\n","import {NgbDatepickerI18n} from '../datepicker-i18n';\nimport {NgbDateStruct} from '../../index';\nimport {hebrewNumerals, isHebrewLeapYear} from './hebrew';\nimport {Injectable} from '@angular/core';\n\n\nconst WEEKDAYS = ['×©× ×', '×©×××©×', '×¨×××¢×', '××××©×', '×©××©×', '×©××ª', '×¨××©××'];\nconst MONTHS = ['×ª×©×¨×', '××©××', '××¡××', '×××ª', '×©××', '×××¨', '× ××¡×', '××××¨', '×¡×××', '×ª×××', '××', '××××'];\nconst MONTHS_LEAP =\n    ['×ª×©×¨×', '××©××', '××¡××', '×××ª', '×©××', '×××¨ ××³', '×××¨ ××³', '× ××¡×', '××××¨', '×¡×××', '×ª×××', '××', '××××'];\n\n/**\n * @since 3.2.0\n */\n@Injectable()\nexport class NgbDatepickerI18nHebrew extends NgbDatepickerI18n {\n  getMonthShortName(month: number, year?: number): string { return this.getMonthFullName(month, year); }\n\n  getMonthFullName(month: number, year?: number): string {\n    return isHebrewLeapYear(year) ? MONTHS_LEAP[month - 1] : MONTHS[month - 1];\n  }\n\n  getWeekdayShortName(weekday: number): string { return WEEKDAYS[weekday - 1]; }\n\n  getDayAriaLabel(date: NgbDateStruct): string {\n    return `${hebrewNumerals(date.day)} ${this.getMonthFullName(date.month, date.year)} ${hebrewNumerals(date.year)}`;\n  }\n\n  getDayNumerals(date: NgbDateStruct): string { return hebrewNumerals(date.day); }\n\n  getWeekNumerals(weekNumber: number): string { return hebrewNumerals(weekNumber); }\n\n  getYearNumerals(year: number): string { return hebrewNumerals(year); }\n}\n","import {Injectable} from '@angular/core';\nimport {NgbDateAdapter} from './ngb-date-adapter';\nimport {NgbDateStruct} from '../ngb-date-struct';\nimport {isInteger} from '../../util/util';\n\n/**\n * [`NgbDateAdapter`](#/components/datepicker/api#NgbDateAdapter) implementation that uses\n * native javascript dates as a user date model.\n */\n@Injectable()\nexport class NgbDateNativeAdapter extends NgbDateAdapter<Date> {\n  /**\n   * Converts a native `Date` to a `NgbDateStruct`.\n   */\n  fromModel(date: Date): NgbDateStruct {\n    return (date instanceof Date && !isNaN(date.getTime())) ? this._fromNativeDate(date) : null;\n  }\n\n  /**\n   * Converts a `NgbDateStruct` to a native `Date`.\n   */\n  toModel(date: NgbDateStruct): Date {\n    return date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day) ? this._toNativeDate(date) :\n                                                                                          null;\n  }\n\n  protected _fromNativeDate(date: Date): NgbDateStruct {\n    return {year: date.getFullYear(), month: date.getMonth() + 1, day: date.getDate()};\n  }\n\n  protected _toNativeDate(date: NgbDateStruct): Date {\n    const jsDate = new Date(date.year, date.month - 1, date.day, 12);\n    // avoid 30 -> 1930 conversion\n    jsDate.setFullYear(date.year);\n    return jsDate;\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {NgbDateStruct} from '../ngb-date-struct';\nimport {NgbDateNativeAdapter} from './ngb-date-native-adapter';\n\n/**\n * Same as [`NgbDateNativeAdapter`](#/components/datepicker/api#NgbDateNativeAdapter), but with UTC dates.\n *\n * @since 3.2.0\n */\n@Injectable()\nexport class NgbDateNativeUTCAdapter extends NgbDateNativeAdapter {\n  protected _fromNativeDate(date: Date): NgbDateStruct {\n    return {year: date.getUTCFullYear(), month: date.getUTCMonth() + 1, day: date.getUTCDate()};\n  }\n\n  protected _toNativeDate(date: NgbDateStruct): Date {\n    const jsDate = new Date(Date.UTC(date.year, date.month - 1, date.day));\n    // avoid 30 -> 1930 conversion\n    jsDate.setUTCFullYear(date.year);\n    return jsDate;\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\nimport {NgbDatepicker} from './datepicker';\nimport {NgbDatepickerMonthView} from './datepicker-month-view';\nimport {NgbDatepickerNavigation} from './datepicker-navigation';\nimport {NgbInputDatepicker} from './datepicker-input';\nimport {NgbDatepickerDayView} from './datepicker-day-view';\nimport {NgbDatepickerNavigationSelect} from './datepicker-navigation-select';\n\nexport {NgbDatepicker, NgbDatepickerNavigateEvent, NgbDatepickerState} from './datepicker';\nexport {NgbInputDatepicker} from './datepicker-input';\nexport {NgbCalendar, NgbPeriod, NgbCalendarGregorian} from './ngb-calendar';\nexport {NgbCalendarIslamicCivil} from './hijri/ngb-calendar-islamic-civil';\nexport {NgbCalendarIslamicUmalqura} from './hijri/ngb-calendar-islamic-umalqura';\nexport {NgbCalendarPersian} from './jalali/ngb-calendar-persian';\nexport {NgbCalendarHebrew} from './hebrew/ngb-calendar-hebrew';\nexport {NgbDatepickerI18nHebrew} from './hebrew/datepicker-i18n-hebrew';\nexport {NgbDatepickerMonthView} from './datepicker-month-view';\nexport {NgbDatepickerDayView} from './datepicker-day-view';\nexport {NgbDatepickerNavigation} from './datepicker-navigation';\nexport {NgbDatepickerNavigationSelect} from './datepicker-navigation-select';\nexport {NgbDatepickerConfig} from './datepicker-config';\nexport {NgbInputDatepickerConfig} from './datepicker-input-config';\nexport {NgbDatepickerI18n} from './datepicker-i18n';\nexport {NgbDateStruct} from './ngb-date-struct';\nexport {NgbDate} from './ngb-date';\nexport {NgbDateAdapter} from './adapters/ngb-date-adapter';\nexport {NgbDateNativeAdapter} from './adapters/ngb-date-native-adapter';\nexport {NgbDateNativeUTCAdapter} from './adapters/ngb-date-native-utc-adapter';\nexport {NgbDateParserFormatter} from './ngb-date-parser-formatter';\nexport {NgbDatepickerKeyboardService} from './datepicker-keyboard-service';\n\n@NgModule({\n  declarations: [\n    NgbDatepicker, NgbDatepickerMonthView, NgbDatepickerNavigation, NgbDatepickerNavigationSelect, NgbDatepickerDayView,\n    NgbInputDatepicker\n  ],\n  exports: [NgbDatepicker, NgbInputDatepicker],\n  imports: [CommonModule, FormsModule],\n  entryComponents: [NgbDatepicker]\n})\nexport class NgbDatepickerModule {\n}\n","import {Injectable} from '@angular/core';\nimport {PlacementArray} from '../util/positioning';\n\n/**\n * A configuration service for the [`NgbDropdown`](#/components/dropdown/api#NgbDropdown) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the dropdowns used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbDropdownConfig {\n  autoClose: boolean | 'outside' | 'inside' = true;\n  placement: PlacementArray = ['bottom-left', 'bottom-right', 'top-left', 'top-right'];\n  container: null | 'body';\n}\n","import {\n  ChangeDetectorRef,\n  ContentChild,\n  ContentChildren,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  Input,\n  NgZone,\n  AfterContentInit,\n  OnDestroy,\n  Output,\n  QueryList,\n  Renderer2,\n  SimpleChanges,\n  Optional\n} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\nimport {fromEvent, Subject, Subscription} from 'rxjs';\nimport {take} from 'rxjs/operators';\n\nimport {Placement, PlacementArray, positionElements} from '../util/positioning';\nimport {ngbAutoClose} from '../util/autoclose';\nimport {Key} from '../util/key';\n\nimport {NgbDropdownConfig} from './dropdown-config';\n\n@Directive({selector: '.navbar'})\nexport class NgbNavbar {\n}\n\n/**\n * A directive you should put on a dropdown item to enable keyboard navigation.\n * Arrow keys will move focus between items marked with this directive.\n *\n * @since 4.1.0\n */\n@Directive({selector: '[ngbDropdownItem]', host: {'class': 'dropdown-item', '[class.disabled]': 'disabled'}})\nexport class NgbDropdownItem {\n  private _disabled = false;\n\n  @Input()\n  set disabled(value: boolean) {\n    this._disabled = <any>value === '' || value === true;  // accept an empty attribute as true\n  }\n\n  get disabled(): boolean { return this._disabled; }\n\n  constructor(public elementRef: ElementRef<HTMLElement>) {}\n}\n\n/**\n * A directive that wraps dropdown menu content and dropdown items.\n */\n@Directive({\n  selector: '[ngbDropdownMenu]',\n  host: {\n    '[class.dropdown-menu]': 'true',\n    '[class.show]': 'dropdown.isOpen()',\n    '[attr.x-placement]': 'placement',\n    '(keydown.ArrowUp)': 'dropdown.onKeyDown($event)',\n    '(keydown.ArrowDown)': 'dropdown.onKeyDown($event)',\n    '(keydown.Home)': 'dropdown.onKeyDown($event)',\n    '(keydown.End)': 'dropdown.onKeyDown($event)',\n    '(keydown.Enter)': 'dropdown.onKeyDown($event)',\n    '(keydown.Space)': 'dropdown.onKeyDown($event)'\n  }\n})\nexport class NgbDropdownMenu {\n  placement: Placement = 'bottom';\n  isOpen = false;\n\n  @ContentChildren(NgbDropdownItem) menuItems: QueryList<NgbDropdownItem>;\n\n  constructor(@Inject(forwardRef(() => NgbDropdown)) public dropdown) {}\n}\n\n/**\n * A directive to mark an element to which dropdown menu will be anchored.\n *\n * This is a simple version of the `NgbDropdownToggle` directive.\n * It plays the same role, but doesn't listen to click events to toggle dropdown menu thus enabling support\n * for events other than click.\n *\n * @since 1.1.0\n */\n@Directive({\n  selector: '[ngbDropdownAnchor]',\n  host: {'class': 'dropdown-toggle', 'aria-haspopup': 'true', '[attr.aria-expanded]': 'dropdown.isOpen()'}\n})\nexport class NgbDropdownAnchor {\n  anchorEl;\n\n  constructor(@Inject(forwardRef(() => NgbDropdown)) public dropdown, private _elementRef: ElementRef<HTMLElement>) {\n    this.anchorEl = _elementRef.nativeElement;\n  }\n\n  getNativeElement() { return this._elementRef.nativeElement; }\n}\n\n/**\n * A directive to mark an element that will toggle dropdown via the `click` event.\n *\n * You can also use `NgbDropdownAnchor` as an alternative.\n */\n@Directive({\n  selector: '[ngbDropdownToggle]',\n  host: {\n    'class': 'dropdown-toggle',\n    'aria-haspopup': 'true',\n    '[attr.aria-expanded]': 'dropdown.isOpen()',\n    '(click)': 'dropdown.toggle()',\n    '(keydown.ArrowUp)': 'dropdown.onKeyDown($event)',\n    '(keydown.ArrowDown)': 'dropdown.onKeyDown($event)',\n    '(keydown.Home)': 'dropdown.onKeyDown($event)',\n    '(keydown.End)': 'dropdown.onKeyDown($event)'\n  },\n  providers: [{provide: NgbDropdownAnchor, useExisting: forwardRef(() => NgbDropdownToggle)}]\n})\nexport class NgbDropdownToggle extends NgbDropdownAnchor {\n  constructor(@Inject(forwardRef(() => NgbDropdown)) dropdown, elementRef: ElementRef<HTMLElement>) {\n    super(dropdown, elementRef);\n  }\n}\n\n/**\n * A directive that provides contextual overlays for displaying lists of links and more.\n */\n@Directive({selector: '[ngbDropdown]', exportAs: 'ngbDropdown', host: {'[class.show]': 'isOpen()'}})\nexport class NgbDropdown implements AfterContentInit, OnDestroy {\n  private _closed$ = new Subject<void>();\n  private _zoneSubscription: Subscription;\n  private _bodyContainer: HTMLElement;\n\n  @ContentChild(NgbDropdownMenu, {static: false}) private _menu: NgbDropdownMenu;\n  @ContentChild(NgbDropdownMenu, {read: ElementRef, static: false}) private _menuElement: ElementRef;\n  @ContentChild(NgbDropdownAnchor, {static: false}) private _anchor: NgbDropdownAnchor;\n\n  /**\n   * Indicates whether the dropdown should be closed when clicking one of dropdown items or pressing ESC.\n   *\n   * * `true` - the dropdown will close on both outside and inside (menu) clicks.\n   * * `false` - the dropdown can only be closed manually via `close()` or `toggle()` methods.\n   * * `\"inside\"` - the dropdown will close on inside menu clicks, but not outside clicks.\n   * * `\"outside\"` - the dropdown will close only on the outside clicks and not on menu clicks.\n   */\n  @Input() autoClose: boolean | 'outside' | 'inside';\n\n  /**\n   * Defines whether or not the dropdown menu is opened initially.\n   */\n  @Input('open') _open = false;\n\n  /**\n   * The preferred placement of the dropdown.\n   *\n   * Possible values are `\"top\"`, `\"top-left\"`, `\"top-right\"`, `\"bottom\"`, `\"bottom-left\"`,\n   * `\"bottom-right\"`, `\"left\"`, `\"left-top\"`, `\"left-bottom\"`, `\"right\"`, `\"right-top\"`,\n   * `\"right-bottom\"`\n   *\n   * Accepts an array of strings or a string with space separated possible values.\n   *\n   * The default order of preference is `\"bottom-left bottom-right top-left top-right\"`\n   *\n   * Please see the [positioning overview](#/positioning) for more details.\n   */\n  @Input() placement: PlacementArray;\n\n  /**\n  * A selector specifying the element the dropdown should be appended to.\n  * Currently only supports \"body\".\n  *\n  * @since 4.1.0\n  */\n  @Input() container: null | 'body';\n\n  /**\n   * Enable or disable the dynamic positioning. The default value is dynamic unless the dropdown is used\n   * inside a Bootstrap navbar. If you need custom placement for a dropdown in a navbar, set it to\n   * dynamic explicitly. See the [positioning of dropdown](#/positioning#dropdown)\n   * and the [navbar demo](/#/components/dropdown/examples#navbar) for more details.\n   *\n   * @since 4.2.0\n   */\n  @Input() display: 'dynamic' | 'static';\n\n  /**\n   * An event fired when the dropdown is opened or closed.\n   *\n   * The event payload is a `boolean`:\n   * * `true` - the dropdown was opened\n   * * `false` - the dropdown was closed\n   */\n  @Output() openChange = new EventEmitter<boolean>();\n\n  constructor(\n      private _changeDetector: ChangeDetectorRef, config: NgbDropdownConfig, @Inject(DOCUMENT) private _document: any,\n      private _ngZone: NgZone, private _elementRef: ElementRef<HTMLElement>, private _renderer: Renderer2,\n      @Optional() ngbNavbar: NgbNavbar) {\n    this.placement = config.placement;\n    this.container = config.container;\n    this.autoClose = config.autoClose;\n\n    this.display = ngbNavbar ? 'static' : 'dynamic';\n\n    this._zoneSubscription = _ngZone.onStable.subscribe(() => { this._positionMenu(); });\n  }\n\n  ngAfterContentInit() {\n    this._ngZone.onStable.pipe(take(1)).subscribe(() => {\n      this._applyPlacementClasses();\n      if (this._open) {\n        this._setCloseHandlers();\n      }\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.container && this._open) {\n      this._applyContainer(this.container);\n    }\n\n    if (changes.placement && !changes.placement.isFirstChange) {\n      this._applyPlacementClasses();\n    }\n  }\n\n  /**\n   * Checks if the dropdown menu is open.\n   */\n  isOpen(): boolean { return this._open; }\n\n  /**\n   * Opens the dropdown menu.\n   */\n  open(): void {\n    if (!this._open) {\n      this._open = true;\n      this._applyContainer(this.container);\n      this.openChange.emit(true);\n      this._setCloseHandlers();\n    }\n  }\n\n  private _setCloseHandlers() {\n    const anchor = this._anchor;\n    ngbAutoClose(\n        this._ngZone, this._document, this.autoClose, () => this.close(), this._closed$,\n        this._menu ? [this._menuElement.nativeElement] : [], anchor ? [anchor.getNativeElement()] : [],\n        '.dropdown-item,.dropdown-divider');\n  }\n\n  /**\n   * Closes the dropdown menu.\n   */\n  close(): void {\n    if (this._open) {\n      this._open = false;\n      this._resetContainer();\n      this._closed$.next();\n      this.openChange.emit(false);\n      this._changeDetector.markForCheck();\n    }\n  }\n\n  /**\n   * Toggles the dropdown menu.\n   */\n  toggle(): void {\n    if (this.isOpen()) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  ngOnDestroy() {\n    this._resetContainer();\n\n    this._closed$.next();\n    this._zoneSubscription.unsubscribe();\n  }\n\n  onKeyDown(event: KeyboardEvent) {\n    // tslint:disable-next-line:deprecation\n    const key = event.which;\n    const itemElements = this._getMenuElements();\n\n    let position = -1;\n    let isEventFromItems = false;\n    let itemElement: HTMLElement = null;\n    const isEventFromToggle = this._isEventFromToggle(event);\n\n    if (!isEventFromToggle && itemElements.length) {\n      itemElements.forEach((item, index) => {\n        if (item.contains(event.target as HTMLElement)) {\n          isEventFromItems = true;\n          itemElement = item;\n        }\n        if (item === this._document.activeElement) {\n          position = index;\n        }\n      });\n    }\n\n    // closing on Enter / Space\n    if (key === Key.Space || key === Key.Enter) {\n      if (isEventFromItems && (this.autoClose === true || this.autoClose === 'inside')) {\n        // Item is either a button or a link, so click will be triggered by the browser on Enter or Space.\n        // So we have to register a one-time click handler that will fire after any user defined click handlers\n        // to close the dropdown\n        fromEvent(itemElement, 'click').pipe(take(1)).subscribe(() => this.close());\n      }\n      return;\n    }\n\n    // opening / navigating\n    if (isEventFromToggle || isEventFromItems) {\n      this.open();\n\n      if (itemElements.length) {\n        switch (key) {\n          case Key.ArrowDown:\n            position = Math.min(position + 1, itemElements.length - 1);\n            break;\n          case Key.ArrowUp:\n            if (this._isDropup() && position === -1) {\n              position = itemElements.length - 1;\n              break;\n            }\n            position = Math.max(position - 1, 0);\n            break;\n          case Key.Home:\n            position = 0;\n            break;\n          case Key.End:\n            position = itemElements.length - 1;\n            break;\n        }\n        itemElements[position].focus();\n      }\n      event.preventDefault();\n    }\n  }\n\n  private _isDropup(): boolean { return this._elementRef.nativeElement.classList.contains('dropup'); }\n\n  private _isEventFromToggle(event: KeyboardEvent) {\n    return this._anchor.getNativeElement().contains(event.target as HTMLElement);\n  }\n\n  private _getMenuElements(): HTMLElement[] {\n    const menu = this._menu;\n    if (menu == null) {\n      return [];\n    }\n    return menu.menuItems.filter(item => !item.disabled).map(item => item.elementRef.nativeElement);\n  }\n\n  private _positionMenu() {\n    const menu = this._menu;\n    if (this.isOpen() && menu) {\n      this._applyPlacementClasses(\n          this.display === 'dynamic' ?\n              positionElements(\n                  this._anchor.anchorEl, this._bodyContainer || this._menuElement.nativeElement, this.placement,\n                  this.container === 'body') :\n              this._getFirstPlacement(this.placement));\n    }\n  }\n\n  private _getFirstPlacement(placement: PlacementArray): Placement {\n    return Array.isArray(placement) ? placement[0] : placement.split(' ')[0] as Placement;\n  }\n\n  private _resetContainer() {\n    const renderer = this._renderer;\n    const menuElement = this._menuElement;\n    if (menuElement) {\n      const dropdownElement = this._elementRef.nativeElement;\n      const dropdownMenuElement = menuElement.nativeElement;\n\n      renderer.appendChild(dropdownElement, dropdownMenuElement);\n      renderer.removeStyle(dropdownMenuElement, 'position');\n      renderer.removeStyle(dropdownMenuElement, 'transform');\n    }\n    if (this._bodyContainer) {\n      renderer.removeChild(this._document.body, this._bodyContainer);\n      this._bodyContainer = null;\n    }\n  }\n\n  private _applyContainer(container: null | 'body' = null) {\n    this._resetContainer();\n    if (container === 'body') {\n      const renderer = this._renderer;\n      const dropdownMenuElement = this._menuElement.nativeElement;\n      const bodyContainer = this._bodyContainer = this._bodyContainer || renderer.createElement('div');\n\n      // Override some styles to have the positionning working\n      renderer.setStyle(bodyContainer, 'position', 'absolute');\n      renderer.setStyle(dropdownMenuElement, 'position', 'static');\n      renderer.setStyle(bodyContainer, 'z-index', '1050');\n\n      renderer.appendChild(bodyContainer, dropdownMenuElement);\n      renderer.appendChild(this._document.body, bodyContainer);\n    }\n  }\n\n  private _applyPlacementClasses(placement?: Placement) {\n    const menu = this._menu;\n    if (menu) {\n      if (!placement) {\n        placement = this._getFirstPlacement(this.placement);\n      }\n\n      const renderer = this._renderer;\n      const dropdownElement = this._elementRef.nativeElement;\n\n      // remove the current placement classes\n      renderer.removeClass(dropdownElement, 'dropup');\n      renderer.removeClass(dropdownElement, 'dropdown');\n      menu.placement = this.display === 'static' ? null : placement;\n\n      /*\n      * apply the new placement\n      * in case of top use up-arrow or down-arrow otherwise\n      */\n      const dropdownClass = placement.search('^top') !== -1 ? 'dropup' : 'dropdown';\n      renderer.addClass(dropdownElement, dropdownClass);\n\n      const bodyContainer = this._bodyContainer;\n      if (bodyContainer) {\n        renderer.removeClass(bodyContainer, 'dropup');\n        renderer.removeClass(bodyContainer, 'dropdown');\n        renderer.addClass(bodyContainer, dropdownClass);\n      }\n    }\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {\n  NgbDropdown,\n  NgbDropdownAnchor,\n  NgbDropdownToggle,\n  NgbDropdownMenu,\n  NgbDropdownItem,\n  NgbNavbar\n} from './dropdown';\n\nexport {\n  NgbDropdown,\n  NgbDropdownAnchor,\n  NgbDropdownToggle,\n  NgbDropdownMenu,\n  NgbDropdownItem,\n  NgbNavbar\n} from './dropdown';\nexport {NgbDropdownConfig} from './dropdown-config';\n\nconst NGB_DROPDOWN_DIRECTIVES =\n    [NgbDropdown, NgbDropdownAnchor, NgbDropdownToggle, NgbDropdownMenu, NgbDropdownItem, NgbNavbar];\n\n@NgModule({declarations: NGB_DROPDOWN_DIRECTIVES, exports: NGB_DROPDOWN_DIRECTIVES})\nexport class NgbDropdownModule {\n}\n","import {Injectable, Injector} from '@angular/core';\n\n/**\n * Options available when opening new modal windows with `NgbModal.open()` method.\n */\nexport interface NgbModalOptions {\n  /**\n   * `aria-labelledby` attribute value to set on the modal window.\n   *\n   * @since 2.2.0\n   */\n  ariaLabelledBy?: string;\n\n  /**\n   * If `true`, the backdrop element will be created for a given modal.\n   *\n   * Alternatively, specify `'static'` for a backdrop which doesn't close the modal on click.\n   *\n   * Default value is `true`.\n   */\n  backdrop?: boolean | 'static';\n\n  /**\n   * Callback right before the modal will be dismissed.\n   *\n   * If this function returns:\n   * * `false`\n   * * a promise resolved with `false`\n   * * a promise that is rejected\n   *\n   * then the modal won't be dismissed.\n   */\n  beforeDismiss?: () => boolean | Promise<boolean>;\n\n  /**\n   * If `true`, the modal will be centered vertically.\n   *\n   * Default value is `false`.\n   *\n   * @since 1.1.0\n   */\n  centered?: boolean;\n\n  /**\n   * A selector specifying the element all new modal windows should be appended to.\n   *\n   * If not specified, will be `body`.\n   */\n  container?: string;\n\n  /**\n   * The `Injector` to use for modal content.\n   */\n  injector?: Injector;\n\n  /**\n   * If `true`, the modal will be closed when `Escape` key is pressed\n   *\n   * Default value is `true`.\n   */\n  keyboard?: boolean;\n\n  /**\n   * Scrollable modal content (false by default).\n   *\n   * @since 5.0.0\n   */\n  scrollable?: boolean;\n\n  /**\n   * Size of a new modal window.\n   */\n  size?: 'sm' | 'lg' | 'xl' | string;\n\n  /**\n   * A custom class to append to the modal window.\n   */\n  windowClass?: string;\n\n  /**\n   * A custom class to append to the modal backdrop.\n   *\n   * @since 1.1.0\n   */\n  backdropClass?: string;\n}\n\n/**\n * A configuration service for the [`NgbModal`](#/components/modal/api#NgbModal) service.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all modals used in the application.\n*\n* @since 3.1.0\n*/\n@Injectable({providedIn: 'root'})\nexport class NgbModalConfig implements Required<NgbModalOptions> {\n  ariaLabelledBy: string;\n  backdrop: boolean | 'static' = true;\n  beforeDismiss: () => boolean | Promise<boolean>;\n  centered: boolean;\n  container: string;\n  injector: Injector;\n  keyboard = true;\n  scrollable: boolean;\n  size: 'sm' | 'lg' | 'xl' | string;\n  windowClass: string;\n  backdropClass: string;\n}\n","import {\n  Injector,\n  TemplateRef,\n  ViewRef,\n  ViewContainerRef,\n  Renderer2,\n  ComponentRef,\n  ComponentFactoryResolver,\n  ApplicationRef\n} from '@angular/core';\n\nexport class ContentRef {\n  constructor(public nodes: any[], public viewRef?: ViewRef, public componentRef?: ComponentRef<any>) {}\n}\n\nexport class PopupService<T> {\n  private _windowRef: ComponentRef<T>;\n  private _contentRef: ContentRef;\n\n  constructor(\n      private _type: any, private _injector: Injector, private _viewContainerRef: ViewContainerRef,\n      private _renderer: Renderer2, private _componentFactoryResolver: ComponentFactoryResolver,\n      private _applicationRef: ApplicationRef) {}\n\n  open(content?: string | TemplateRef<any>, context?: any): ComponentRef<T> {\n    if (!this._windowRef) {\n      this._contentRef = this._getContentRef(content, context);\n      this._windowRef = this._viewContainerRef.createComponent(\n          this._componentFactoryResolver.resolveComponentFactory<T>(this._type), 0, this._injector,\n          this._contentRef.nodes);\n    }\n\n    return this._windowRef;\n  }\n\n  close() {\n    if (this._windowRef) {\n      this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._windowRef.hostView));\n      this._windowRef = null;\n\n      if (this._contentRef.viewRef) {\n        this._applicationRef.detachView(this._contentRef.viewRef);\n        this._contentRef.viewRef.destroy();\n        this._contentRef = null;\n      }\n    }\n  }\n\n  private _getContentRef(content: string | TemplateRef<any>, context?: any): ContentRef {\n    if (!content) {\n      return new ContentRef([]);\n    } else if (content instanceof TemplateRef) {\n      const viewRef = content.createEmbeddedView(context);\n      this._applicationRef.attachView(viewRef);\n      return new ContentRef([viewRef.rootNodes], viewRef);\n    } else {\n      return new ContentRef([[this._renderer.createText(`${content}`)]]);\n    }\n  }\n}\n","import {Injectable, Inject} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\n\n\nconst noop = () => {};\n\n\n\n/** Type for the callback used to revert the scrollbar compensation. */\nexport type CompensationReverter = () => void;\n\n\n\n/**\n * Utility to handle the scrollbar.\n *\n * It allows to compensate the lack of a vertical scrollbar by adding an\n * equivalent padding on the right of the body, and to remove this compensation.\n */\n@Injectable({providedIn: 'root'})\nexport class ScrollBar {\n  constructor(@Inject(DOCUMENT) private _document: any) {}\n\n  /**\n   * To be called right before a potential vertical scrollbar would be removed:\n   *\n   * - if there was a scrollbar, adds some compensation padding to the body\n   * to keep the same layout as when the scrollbar is there\n   * - if there was none, there is nothing to do\n   *\n   * @return a callback used to revert the compensation (noop if there was none,\n   * otherwise a function removing the padding)\n   */\n  compensate(): CompensationReverter {\n    const width = this._getWidth();\n    return !this._isPresent(width) ? noop : this._adjustBody(width);\n  }\n\n  /**\n   * Adds a padding of the given width on the right of the body.\n   *\n   * @return a callback used to revert the padding to its previous value\n   */\n  private _adjustBody(scrollbarWidth: number): CompensationReverter {\n    const body = this._document.body;\n    const userSetPaddingStyle = body.style.paddingRight;\n    const actualPadding = parseFloat(window.getComputedStyle(body)['padding-right']);\n    body.style['padding-right'] = `${actualPadding + scrollbarWidth}px`;\n    return () => body.style['padding-right'] = userSetPaddingStyle;\n  }\n\n  /**\n   * Tells whether a scrollbar is currently present on the body.\n   *\n   * @return true if scrollbar is present, false otherwise\n   */\n  private _isPresent(scrollbarWidth: number): boolean {\n    const rect = this._document.body.getBoundingClientRect();\n    const bodyToViewportGap = window.innerWidth - (rect.left + rect.right);\n    const uncertainty = 0.1 * scrollbarWidth;\n    return bodyToViewportGap >= scrollbarWidth - uncertainty;\n  }\n\n  /**\n   * Calculates and returns the width of a scrollbar.\n   *\n   * @return the width of a scrollbar on this page\n   */\n  private _getWidth(): number {\n    const measurer = this._document.createElement('div');\n    measurer.className = 'modal-scrollbar-measure';\n\n    const body = this._document.body;\n    body.appendChild(measurer);\n    const width = measurer.getBoundingClientRect().width - measurer.clientWidth;\n    body.removeChild(measurer);\n\n    return width;\n  }\n}\n","import {Component, Input, ViewEncapsulation} from '@angular/core';\n\n@Component({\n  selector: 'ngb-modal-backdrop',\n  encapsulation: ViewEncapsulation.None,\n  template: '',\n  host:\n      {'[class]': '\"modal-backdrop fade show\" + (backdropClass ? \" \" + backdropClass : \"\")', 'style': 'z-index: 1050'}\n})\nexport class NgbModalBackdrop {\n  @Input() backdropClass: string;\n}\n","import {ComponentRef} from '@angular/core';\n\nimport {NgbModalBackdrop} from './modal-backdrop';\nimport {NgbModalWindow} from './modal-window';\n\nimport {ContentRef} from '../util/popup';\n\n/**\n * A reference to the currently opened (active) modal.\n *\n * Instances of this class can be injected into your component passed as modal content.\n * So you can `.close()` or `.dismiss()` the modal window from your component.\n */\nexport class NgbActiveModal {\n  /**\n   * Closes the modal with an optional `result` value.\n   *\n   * The `NgbMobalRef.result` promise will be resolved with the provided value.\n   */\n  close(result?: any): void {}\n\n  /**\n   * Dismisses the modal with an optional `reason` value.\n   *\n   * The `NgbModalRef.result` promise will be rejected with the provided value.\n   */\n  dismiss(reason?: any): void {}\n}\n\n/**\n * A reference to the newly opened modal returned by the `NgbModal.open()` method.\n */\nexport class NgbModalRef {\n  private _resolve: (result?: any) => void;\n  private _reject: (reason?: any) => void;\n\n  /**\n   * The instance of a component used for the modal content.\n   *\n   * When a `TemplateRef` is used as the content or when the modal is closed, will return `undefined`.\n   */\n  get componentInstance(): any {\n    if (this._contentRef && this._contentRef.componentRef) {\n      return this._contentRef.componentRef.instance;\n    }\n  }\n\n  /**\n   * The promise that is resolved when the modal is closed and rejected when the modal is dismissed.\n   */\n  result: Promise<any>;\n\n  constructor(\n      private _windowCmptRef: ComponentRef<NgbModalWindow>, private _contentRef: ContentRef,\n      private _backdropCmptRef?: ComponentRef<NgbModalBackdrop>, private _beforeDismiss?: Function) {\n    _windowCmptRef.instance.dismissEvent.subscribe((reason: any) => { this.dismiss(reason); });\n\n    this.result = new Promise((resolve, reject) => {\n      this._resolve = resolve;\n      this._reject = reject;\n    });\n    this.result.then(null, () => {});\n  }\n\n  /**\n   * Closes the modal with an optional `result` value.\n   *\n   * The `NgbMobalRef.result` promise will be resolved with the provided value.\n   */\n  close(result?: any): void {\n    if (this._windowCmptRef) {\n      this._resolve(result);\n      this._removeModalElements();\n    }\n  }\n\n  private _dismiss(reason?: any) {\n    this._reject(reason);\n    this._removeModalElements();\n  }\n\n  /**\n   * Dismisses the modal with an optional `reason` value.\n   *\n   * The `NgbModalRef.result` promise will be rejected with the provided value.\n   */\n  dismiss(reason?: any): void {\n    if (this._windowCmptRef) {\n      if (!this._beforeDismiss) {\n        this._dismiss(reason);\n      } else {\n        const dismiss = this._beforeDismiss();\n        if (dismiss && dismiss.then) {\n          dismiss.then(\n              result => {\n                if (result !== false) {\n                  this._dismiss(reason);\n                }\n              },\n              () => {});\n        } else if (dismiss !== false) {\n          this._dismiss(reason);\n        }\n      }\n    }\n  }\n\n  private _removeModalElements() {\n    const windowNativeEl = this._windowCmptRef.location.nativeElement;\n    windowNativeEl.parentNode.removeChild(windowNativeEl);\n    this._windowCmptRef.destroy();\n\n    if (this._backdropCmptRef) {\n      const backdropNativeEl = this._backdropCmptRef.location.nativeElement;\n      backdropNativeEl.parentNode.removeChild(backdropNativeEl);\n      this._backdropCmptRef.destroy();\n    }\n\n    if (this._contentRef && this._contentRef.viewRef) {\n      this._contentRef.viewRef.destroy();\n    }\n\n    this._windowCmptRef = null;\n    this._backdropCmptRef = null;\n    this._contentRef = null;\n  }\n}\n","export enum ModalDismissReasons {\n  BACKDROP_CLICK,\n  ESC\n}\n","import {DOCUMENT} from '@angular/common';\nimport {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Input,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport {fromEvent, Subject} from 'rxjs';\nimport {filter, switchMap, take, takeUntil, tap} from 'rxjs/operators';\n\nimport {getFocusableBoundaryElements} from '../util/focus-trap';\nimport {Key} from '../util/key';\nimport {ModalDismissReasons} from './modal-dismiss-reasons';\n\n@Component({\n  selector: 'ngb-modal-window',\n  host: {\n    '[class]': '\"modal fade show d-block\" + (windowClass ? \" \" + windowClass : \"\")',\n    'role': 'dialog',\n    'tabindex': '-1',\n    '[attr.aria-modal]': 'true',\n    '[attr.aria-labelledby]': 'ariaLabelledBy',\n  },\n  template: `\n    <div #dialog [class]=\"'modal-dialog' + (size ? ' modal-' + size : '') + (centered ? ' modal-dialog-centered' : '') +\n     (scrollable ? ' modal-dialog-scrollable' : '')\" role=\"document\">\n        <div class=\"modal-content\"><ng-content></ng-content></div>\n    </div>\n    `,\n  encapsulation: ViewEncapsulation.None,\n  styleUrls: ['./modal.scss']\n})\nexport class NgbModalWindow implements OnInit,\n    AfterViewInit, OnDestroy {\n  private _closed$ = new Subject<void>();\n  private _elWithFocus: Element;  // element that is focused prior to modal opening\n\n  @ViewChild('dialog', {static: true}) private _dialogEl: ElementRef<HTMLElement>;\n\n  @Input() ariaLabelledBy: string;\n  @Input() backdrop: boolean | string = true;\n  @Input() centered: string;\n  @Input() keyboard = true;\n  @Input() scrollable: string;\n  @Input() size: string;\n  @Input() windowClass: string;\n\n  @Output('dismiss') dismissEvent = new EventEmitter();\n\n  constructor(\n      @Inject(DOCUMENT) private _document: any, private _elRef: ElementRef<HTMLElement>, private _zone: NgZone) {}\n\n  dismiss(reason): void { this.dismissEvent.emit(reason); }\n\n  ngOnInit() { this._elWithFocus = this._document.activeElement; }\n\n  ngAfterViewInit() {\n    const {nativeElement} = this._elRef;\n    this._zone.runOutsideAngular(() => {\n\n      fromEvent<KeyboardEvent>(nativeElement, 'keydown')\n          .pipe(\n              takeUntil(this._closed$),\n              // tslint:disable-next-line:deprecation\n              filter(e => e.which === Key.Escape && this.keyboard))\n          .subscribe(event => requestAnimationFrame(() => {\n                       if (!event.defaultPrevented) {\n                         this._zone.run(() => this.dismiss(ModalDismissReasons.ESC));\n                       }\n                     }));\n\n      // We're listening to 'mousedown' and 'mouseup' to prevent modal from closing when pressing the mouse\n      // inside the modal dialog and releasing it outside\n      let preventClose = false;\n      fromEvent<MouseEvent>(this._dialogEl.nativeElement, 'mousedown')\n          .pipe(\n              takeUntil(this._closed$), tap(() => preventClose = false),\n              switchMap(() => fromEvent<MouseEvent>(nativeElement, 'mouseup').pipe(takeUntil(this._closed$), take(1))),\n              filter(({target}) => nativeElement === target))\n          .subscribe(() => { preventClose = true; });\n\n      // We're listening to 'click' to dismiss modal on modal window click, except when:\n      // 1. clicking on modal dialog itself\n      // 2. closing was prevented by mousedown/up handlers\n      // 3. clicking on scrollbar when the viewport is too small and modal doesn't fit (click is not triggered at all)\n      fromEvent<MouseEvent>(nativeElement, 'click').pipe(takeUntil(this._closed$)).subscribe(({target}) => {\n        if (this.backdrop === true && nativeElement === target && !preventClose) {\n          this._zone.run(() => this.dismiss(ModalDismissReasons.BACKDROP_CLICK));\n        }\n        preventClose = false;\n      });\n    });\n\n    if (!nativeElement.contains(document.activeElement)) {\n      const autoFocusable = nativeElement.querySelector(`[ngbAutofocus]`) as HTMLElement;\n      const firstFocusable = getFocusableBoundaryElements(nativeElement)[0];\n\n      const elementToFocus = autoFocusable || firstFocusable || nativeElement;\n      elementToFocus.focus();\n    }\n  }\n\n  ngOnDestroy() {\n    const body = this._document.body;\n    const elWithFocus = this._elWithFocus;\n\n    let elementToFocus;\n    if (elWithFocus && elWithFocus['focus'] && body.contains(elWithFocus)) {\n      elementToFocus = elWithFocus;\n    } else {\n      elementToFocus = body;\n    }\n    this._zone.runOutsideAngular(() => {\n      setTimeout(() => elementToFocus.focus());\n      this._elWithFocus = null;\n    });\n\n    this._closed$.next();\n  }\n}\n","import {DOCUMENT} from '@angular/common';\nimport {\n  ApplicationRef,\n  ComponentFactoryResolver,\n  ComponentRef,\n  Inject,\n  Injectable,\n  Injector,\n  NgZone,\n  RendererFactory2,\n  TemplateRef\n} from '@angular/core';\nimport {Subject} from 'rxjs';\n\nimport {ngbFocusTrap} from '../util/focus-trap';\nimport {ContentRef} from '../util/popup';\nimport {ScrollBar} from '../util/scrollbar';\nimport {isDefined, isString} from '../util/util';\nimport {NgbModalBackdrop} from './modal-backdrop';\nimport {NgbModalOptions} from './modal-config';\nimport {NgbActiveModal, NgbModalRef} from './modal-ref';\nimport {NgbModalWindow} from './modal-window';\n\n@Injectable({providedIn: 'root'})\nexport class NgbModalStack {\n  private _activeWindowCmptHasChanged = new Subject();\n  private _ariaHiddenValues: Map<Element, string> = new Map();\n  private _backdropAttributes = ['backdropClass'];\n  private _modalRefs: NgbModalRef[] = [];\n  private _windowAttributes =\n      ['ariaLabelledBy', 'backdrop', 'centered', 'keyboard', 'scrollable', 'size', 'windowClass'];\n  private _windowCmpts: ComponentRef<NgbModalWindow>[] = [];\n\n  constructor(\n      private _applicationRef: ApplicationRef, private _injector: Injector, @Inject(DOCUMENT) private _document: any,\n      private _scrollBar: ScrollBar, private _rendererFactory: RendererFactory2, private _ngZone: NgZone) {\n    // Trap focus on active WindowCmpt\n    this._activeWindowCmptHasChanged.subscribe(() => {\n      if (this._windowCmpts.length) {\n        const activeWindowCmpt = this._windowCmpts[this._windowCmpts.length - 1];\n        ngbFocusTrap(this._ngZone, activeWindowCmpt.location.nativeElement, this._activeWindowCmptHasChanged);\n        this._revertAriaHidden();\n        this._setAriaHidden(activeWindowCmpt.location.nativeElement);\n      }\n    });\n  }\n\n  open(moduleCFR: ComponentFactoryResolver, contentInjector: Injector, content: any, options): NgbModalRef {\n    const containerEl =\n        isDefined(options.container) ? this._document.querySelector(options.container) : this._document.body;\n    const renderer = this._rendererFactory.createRenderer(null, null);\n\n    const revertPaddingForScrollBar = this._scrollBar.compensate();\n    const removeBodyClass = () => {\n      if (!this._modalRefs.length) {\n        renderer.removeClass(this._document.body, 'modal-open');\n        this._revertAriaHidden();\n      }\n    };\n\n    if (!containerEl) {\n      throw new Error(`The specified modal container \"${options.container || 'body'}\" was not found in the DOM.`);\n    }\n\n    const activeModal = new NgbActiveModal();\n    const contentRef =\n        this._getContentRef(moduleCFR, options.injector || contentInjector, content, activeModal, options);\n\n    let backdropCmptRef: ComponentRef<NgbModalBackdrop> =\n        options.backdrop !== false ? this._attachBackdrop(moduleCFR, containerEl) : null;\n    let windowCmptRef: ComponentRef<NgbModalWindow> = this._attachWindowComponent(moduleCFR, containerEl, contentRef);\n    let ngbModalRef: NgbModalRef = new NgbModalRef(windowCmptRef, contentRef, backdropCmptRef, options.beforeDismiss);\n\n    this._registerModalRef(ngbModalRef);\n    this._registerWindowCmpt(windowCmptRef);\n    ngbModalRef.result.then(revertPaddingForScrollBar, revertPaddingForScrollBar);\n    ngbModalRef.result.then(removeBodyClass, removeBodyClass);\n    activeModal.close = (result: any) => { ngbModalRef.close(result); };\n    activeModal.dismiss = (reason: any) => { ngbModalRef.dismiss(reason); };\n\n    this._applyWindowOptions(windowCmptRef.instance, options);\n    if (this._modalRefs.length === 1) {\n      renderer.addClass(this._document.body, 'modal-open');\n    }\n\n    if (backdropCmptRef && backdropCmptRef.instance) {\n      this._applyBackdropOptions(backdropCmptRef.instance, options);\n    }\n    return ngbModalRef;\n  }\n\n  dismissAll(reason?: any) { this._modalRefs.forEach(ngbModalRef => ngbModalRef.dismiss(reason)); }\n\n  hasOpenModals(): boolean { return this._modalRefs.length > 0; }\n\n  private _attachBackdrop(moduleCFR: ComponentFactoryResolver, containerEl: any): ComponentRef<NgbModalBackdrop> {\n    let backdropFactory = moduleCFR.resolveComponentFactory(NgbModalBackdrop);\n    let backdropCmptRef = backdropFactory.create(this._injector);\n    this._applicationRef.attachView(backdropCmptRef.hostView);\n    containerEl.appendChild(backdropCmptRef.location.nativeElement);\n    return backdropCmptRef;\n  }\n\n  private _attachWindowComponent(moduleCFR: ComponentFactoryResolver, containerEl: any, contentRef: any):\n      ComponentRef<NgbModalWindow> {\n    let windowFactory = moduleCFR.resolveComponentFactory(NgbModalWindow);\n    let windowCmptRef = windowFactory.create(this._injector, contentRef.nodes);\n    this._applicationRef.attachView(windowCmptRef.hostView);\n    containerEl.appendChild(windowCmptRef.location.nativeElement);\n    return windowCmptRef;\n  }\n\n  private _applyWindowOptions(windowInstance: NgbModalWindow, options: Object): void {\n    this._windowAttributes.forEach((optionName: string) => {\n      if (isDefined(options[optionName])) {\n        windowInstance[optionName] = options[optionName];\n      }\n    });\n  }\n\n  private _applyBackdropOptions(backdropInstance: NgbModalBackdrop, options: Object): void {\n    this._backdropAttributes.forEach((optionName: string) => {\n      if (isDefined(options[optionName])) {\n        backdropInstance[optionName] = options[optionName];\n      }\n    });\n  }\n\n  private _getContentRef(\n      moduleCFR: ComponentFactoryResolver, contentInjector: Injector, content: any, activeModal: NgbActiveModal,\n      options: NgbModalOptions): ContentRef {\n    if (!content) {\n      return new ContentRef([]);\n    } else if (content instanceof TemplateRef) {\n      return this._createFromTemplateRef(content, activeModal);\n    } else if (isString(content)) {\n      return this._createFromString(content);\n    } else {\n      return this._createFromComponent(moduleCFR, contentInjector, content, activeModal, options);\n    }\n  }\n\n  private _createFromTemplateRef(content: TemplateRef<any>, activeModal: NgbActiveModal): ContentRef {\n    const context = {\n      $implicit: activeModal,\n      close(result) { activeModal.close(result); },\n      dismiss(reason) { activeModal.dismiss(reason); }\n    };\n    const viewRef = content.createEmbeddedView(context);\n    this._applicationRef.attachView(viewRef);\n    return new ContentRef([viewRef.rootNodes], viewRef);\n  }\n\n  private _createFromString(content: string): ContentRef {\n    const component = this._document.createTextNode(`${content}`);\n    return new ContentRef([[component]]);\n  }\n\n  private _createFromComponent(\n      moduleCFR: ComponentFactoryResolver, contentInjector: Injector, content: any, context: NgbActiveModal,\n      options: NgbModalOptions): ContentRef {\n    const contentCmptFactory = moduleCFR.resolveComponentFactory(content);\n    const modalContentInjector =\n        Injector.create({providers: [{provide: NgbActiveModal, useValue: context}], parent: contentInjector});\n    const componentRef = contentCmptFactory.create(modalContentInjector);\n    const componentNativeEl = componentRef.location.nativeElement;\n    if (options.scrollable) {\n      (componentNativeEl as HTMLElement).classList.add('component-host-scrollable');\n    }\n    this._applicationRef.attachView(componentRef.hostView);\n    // FIXME: we should here get rid of the component nativeElement\n    // and use `[Array.from(componentNativeEl.childNodes)]` instead and remove the above CSS class.\n    return new ContentRef([[componentNativeEl]], componentRef.hostView, componentRef);\n  }\n\n  private _setAriaHidden(element: Element) {\n    const parent = element.parentElement;\n    if (parent && element !== this._document.body) {\n      Array.from(parent.children).forEach(sibling => {\n        if (sibling !== element && sibling.nodeName !== 'SCRIPT') {\n          this._ariaHiddenValues.set(sibling, sibling.getAttribute('aria-hidden'));\n          sibling.setAttribute('aria-hidden', 'true');\n        }\n      });\n\n      this._setAriaHidden(parent);\n    }\n  }\n\n  private _revertAriaHidden() {\n    this._ariaHiddenValues.forEach((value, element) => {\n      if (value) {\n        element.setAttribute('aria-hidden', value);\n      } else {\n        element.removeAttribute('aria-hidden');\n      }\n    });\n    this._ariaHiddenValues.clear();\n  }\n\n  private _registerModalRef(ngbModalRef: NgbModalRef) {\n    const unregisterModalRef = () => {\n      const index = this._modalRefs.indexOf(ngbModalRef);\n      if (index > -1) {\n        this._modalRefs.splice(index, 1);\n      }\n    };\n    this._modalRefs.push(ngbModalRef);\n    ngbModalRef.result.then(unregisterModalRef, unregisterModalRef);\n  }\n\n  private _registerWindowCmpt(ngbWindowCmpt: ComponentRef<NgbModalWindow>) {\n    this._windowCmpts.push(ngbWindowCmpt);\n    this._activeWindowCmptHasChanged.next();\n\n    ngbWindowCmpt.onDestroy(() => {\n      const index = this._windowCmpts.indexOf(ngbWindowCmpt);\n      if (index > -1) {\n        this._windowCmpts.splice(index, 1);\n        this._activeWindowCmptHasChanged.next();\n      }\n    });\n  }\n}\n","import {Injectable, Injector, ComponentFactoryResolver} from '@angular/core';\n\nimport {NgbModalOptions, NgbModalConfig} from './modal-config';\nimport {NgbModalRef} from './modal-ref';\nimport {NgbModalStack} from './modal-stack';\n\n/**\n * A service for opening modal windows.\n *\n * Creating a modal is straightforward: create a component or a template and pass it as an argument to\n * the `.open()` method.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbModal {\n  constructor(\n      private _moduleCFR: ComponentFactoryResolver, private _injector: Injector, private _modalStack: NgbModalStack,\n      private _config: NgbModalConfig) {}\n\n  /**\n   * Opens a new modal window with the specified content and supplied options.\n   *\n   * Content can be provided as a `TemplateRef` or a component type. If you pass a component type as content,\n   * then instances of those components can be injected with an instance of the `NgbActiveModal` class. You can then\n   * use `NgbActiveModal` methods to close / dismiss modals from \"inside\" of your component.\n   *\n   * Also see the [`NgbModalOptions`](#/components/modal/api#NgbModalOptions) for the list of supported options.\n   */\n  open(content: any, options: NgbModalOptions = {}): NgbModalRef {\n    const combinedOptions = Object.assign({}, this._config, options);\n    return this._modalStack.open(this._moduleCFR, this._injector, content, combinedOptions);\n  }\n\n  /**\n   * Dismisses all currently displayed modal windows with the supplied reason.\n   *\n   * @since 3.1.0\n   */\n  dismissAll(reason?: any) { this._modalStack.dismissAll(reason); }\n\n  /**\n   * Indicates if there are currently any open modal windows in the application.\n   *\n   * @since 3.3.0\n   */\n  hasOpenModals(): boolean { return this._modalStack.hasOpenModals(); }\n}\n","import {NgModule} from '@angular/core';\n\nimport {NgbModal} from './modal';\nimport {NgbModalBackdrop} from './modal-backdrop';\nimport {NgbModalWindow} from './modal-window';\n\nexport {NgbModal} from './modal';\nexport {NgbModalConfig, NgbModalOptions} from './modal-config';\nexport {NgbModalRef, NgbActiveModal} from './modal-ref';\nexport {ModalDismissReasons} from './modal-dismiss-reasons';\n\n@NgModule({\n  declarations: [NgbModalBackdrop, NgbModalWindow],\n  entryComponents: [NgbModalBackdrop, NgbModalWindow],\n  providers: [NgbModal]\n})\nexport class NgbModalModule {\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * A configuration service for the [`NgbNav`](#/components/nav/api#NgbNav) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the navs used in the application.\n *\n * @since 5.2.0\n */\n@Injectable({providedIn: 'root'})\nexport class NgbNavConfig {\n  destroyOnHide = true;\n  orientation: 'horizontal' | 'vertical' = 'horizontal';\n  roles: 'tablist' | false = 'tablist';\n}\n","import {\n  AfterContentChecked,\n  AfterContentInit,\n  Attribute,\n  ChangeDetectorRef,\n  ContentChildren,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  Input,\n  OnInit,\n  Output,\n  QueryList,\n  TemplateRef\n} from '@angular/core';\nimport {isDefined} from '../util/util';\nimport {NgbNavConfig} from './nav-config';\n\nconst isValidNavId = (id: any) => isDefined(id) && id !== '';\n\nlet navCounter = 0;\n\n/**\n * Context passed to the nav content template.\n *\n * See [this demo](#/components/nav/examples#keep-content) as the example.\n *\n * @since 5.2.0\n */\nexport interface NgbNavContentContext {\n  /**\n   * If `true`, current nav content is visible and active\n   */\n  $implicit: boolean;\n}\n\n\n/**\n * This directive must be used to wrap content to be displayed in the nav.\n *\n * @since 5.2.0\n */\n@Directive({selector: 'ng-template[ngbNavContent]'})\nexport class NgbNavContent {\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n\n\n/**\n * The directive used to group nav link and related nav content. As well as set nav identifier and some options.\n *\n * @since 5.2.0\n */\n@Directive({selector: '[ngbNavItem]', exportAs: 'ngbNavItem', host: {'[class.nav-item]': 'true'}})\nexport class NgbNavItem implements AfterContentChecked, OnInit {\n  private _nav: NgbNav;\n\n  /**\n   * If `true`, non-active current nav item content will be removed from DOM\n   * Otherwise it will just be hidden\n   */\n  @Input() destroyOnHide;\n\n  /**\n   * If `true`, the current nav item is disabled and can't be toggled by user.\n   *\n   * Nevertheless disabled nav can be selected programmatically via the `.select()` method and the `[activeId]` binding.\n   */\n  @Input() disabled = false;\n\n  /**\n   * The id used for the DOM elements.\n   * Must be unique inside the document in case you have multiple `ngbNav`s on the page.\n   *\n   * Autogenerated as `ngb-nav-XXX` if not provided.\n   */\n  @Input() domId: string;\n\n  /**\n   * The id used as a model for active nav.\n   * It can be anything, but must be unique inside one `ngbNav`.\n   *\n   * The only limitation is that it is not possible to have the `''` (empty string) as id,\n   * because ` ngbNavItem `, `ngbNavItem=''` and `[ngbNavItem]=\"''\"` are indistinguishable\n   */\n  @Input('ngbNavItem') _id: any;\n\n  contentTpl: NgbNavContent | null;\n\n  @ContentChildren(NgbNavContent, {descendants: false}) contentTpls: QueryList<NgbNavContent>;\n\n  constructor(@Inject(forwardRef(() => NgbNav)) nav, public elementRef: ElementRef<any>) {\n    // TODO: cf https://github.com/angular/angular/issues/30106\n    this._nav = nav;\n  }\n\n  ngAfterContentChecked() {\n    // We are using @ContentChildren instead of @ContentChild as in the Angular version being used\n    // only @ContentChildren allows us to specify the {descendants: false} option.\n    // Without {descendants: false} we are hitting bugs described in:\n    // https://github.com/ng-bootstrap/ng-bootstrap/issues/2240\n    this.contentTpl = this.contentTpls.first;\n  }\n\n  ngOnInit() {\n    if (!isDefined(this.domId)) {\n      this.domId = `ngb-nav-${navCounter++}`;\n    }\n  }\n\n  get active() { return this._nav.activeId === this.id; }\n\n  get id() { return isValidNavId(this._id) ? this._id : this.domId; }\n\n  get panelDomId() { return `${this.domId}-panel`; }\n\n  isPanelInDom() {\n    return (isDefined(this.destroyOnHide) ? !this.destroyOnHide : !this._nav.destroyOnHide) || this.active;\n  }\n}\n\n\n/**\n * A nav directive that helps with implementing tabbed navigation components.\n *\n * @since 5.2.0\n */\n@Directive({\n  selector: '[ngbNav]',\n  exportAs: 'ngbNav',\n  host: {\n    '[class.nav]': 'true',\n    '[class.flex-column]': `orientation === 'vertical'`,\n    '[attr.aria-orientation]': `orientation === 'vertical' && roles === 'tablist' ? 'vertical' : undefined`,\n    '[attr.role]': `role ? role : roles ? 'tablist' : undefined`,\n  }\n})\nexport class NgbNav implements AfterContentInit {\n  /**\n   * The id of the nav that should be active\n   *\n   * You could also use the `.select()` method and the `(navChange)` event\n   */\n  @Input() activeId: any;\n\n  /**\n   * The event emitted after the active nav changes\n   * The payload of the event is the newly active nav id\n   *\n   * If you want to prevent nav change, you should use `(navChange)` event\n   */\n  @Output() activeIdChange = new EventEmitter<any>();\n\n  /**\n   * If `true`, non-active nav content will be removed from DOM\n   * Otherwise it will just be hidden\n   */\n  @Input() destroyOnHide;\n\n  /**\n   * The orientation of navs.\n   *\n   * Using `vertical` will also add the `aria-orientation` attribute\n   */\n  @Input() orientation: 'horizontal' | 'vertical';\n\n  /**\n   * Role attribute generating strategy:\n   * - `false` - no role attributes will be generated\n   * - `'tablist'` - 'tablist', 'tab' and 'tabpanel' will be generated (default)\n   */\n  @Input() roles: 'tablist' | false;\n\n  @ContentChildren(NgbNavItem) items: QueryList<NgbNavItem>;\n\n  constructor(@Attribute('role') public role: string, config: NgbNavConfig, private _cd: ChangeDetectorRef) {\n    this.destroyOnHide = config.destroyOnHide;\n    this.orientation = config.orientation;\n    this.roles = config.roles;\n  }\n\n  /**\n   * The nav change event emitted right before the nav change happens on user click.\n   *\n   * This event won't be emitted if nav is changed programmatically via `[activeId]` or `.select()`.\n   *\n   * See [`NgbNavChangeEvent`](#/components/nav/api#NgbNavChangeEvent) for payload details.\n   */\n  @Output() navChange = new EventEmitter<NgbNavChangeEvent>();\n\n  click(item: NgbNavItem) {\n    if (!item.disabled) {\n      this._updateActiveId(item.id);\n    }\n  }\n\n  /**\n   * Selects the nav with the given id and shows its associated pane.\n   * Any other nav that was previously selected becomes unselected and its associated pane is hidden.\n   */\n  select(id: any) { this._updateActiveId(id, false); }\n\n  ngAfterContentInit() {\n    if (!isDefined(this.activeId)) {\n      const nextId = this.items.first ? this.items.first.id : null;\n      if (isValidNavId(nextId)) {\n        this._updateActiveId(nextId, false);\n        this._cd.detectChanges();\n      }\n    }\n  }\n\n  private _updateActiveId(nextId: any, emitNavChange = true) {\n    if (this.activeId !== nextId) {\n      let defaultPrevented = false;\n\n      if (emitNavChange) {\n        this.navChange.emit({activeId: this.activeId, nextId, preventDefault: () => { defaultPrevented = true; }});\n      }\n\n      if (!defaultPrevented) {\n        this.activeId = nextId;\n        this.activeIdChange.emit(nextId);\n      }\n    }\n  }\n}\n\n\n/**\n * A directive to put on the nav link.\n *\n * @since 5.2.0\n */\n@Directive({\n  selector: 'a[ngbNavLink]',\n  host: {\n    '[id]': 'navItem.domId',\n    '[class.nav-link]': 'true',\n    '[class.nav-item]': 'hasNavItemClass()',\n    '[attr.role]': `role ? role : nav.roles ? 'tab' : undefined`,\n    'href': '',\n    '[class.active]': 'navItem.active',\n    '[class.disabled]': 'navItem.disabled',\n    '[attr.tabindex]': 'navItem.disabled ? -1 : undefined',\n    '[attr.aria-controls]': 'navItem.isPanelInDom() ? navItem.panelDomId : null',\n    '[attr.aria-selected]': 'navItem.active',\n    '[attr.aria-disabled]': 'navItem.disabled',\n    '(click)': 'nav.click(navItem); $event.preventDefault()'\n  }\n})\nexport class NgbNavLink {\n  constructor(@Attribute('role') public role: string, public navItem: NgbNavItem, public nav: NgbNav) {}\n\n  hasNavItemClass() {\n    // with alternative markup we have to add `.nav-item` class, because `ngbNavItem` is on the ng-container\n    return this.navItem.elementRef.nativeElement.nodeType === Node.COMMENT_NODE;\n  }\n}\n\n\n/**\n * The payload of the change event emitted right before the nav change happens on user click.\n *\n * This event won't be emitted if nav is changed programmatically via `[activeId]` or `.select()`.\n *\n * @since 5.2.0\n */\nexport interface NgbNavChangeEvent {\n  /**\n   * Id of the currently active nav.\n   */\n  activeId: any;\n\n  /**\n   * Id of the newly selected nav.\n   */\n  nextId: any;\n\n  /**\n   * Function that will prevent nav change if called.\n   */\n  preventDefault: () => void;\n}\n","import {Component, Input, ViewEncapsulation} from '@angular/core';\nimport {NgbNav} from './nav';\n\n/**\n * The outlet where currently active nav content will be displayed.\n *\n * @since 5.2.0\n */\n@Component({\n  selector: '[ngbNavOutlet]',\n  host: {'[class.tab-content]': 'true'},\n  encapsulation: ViewEncapsulation.None,\n  template: `\n      <ng-template ngFor let-item [ngForOf]=\"nav.items\">\n          <div class=\"tab-pane\"\n               *ngIf=\"item.isPanelInDom()\"\n               [id]=\"item.panelDomId\"\n               [class.active]=\"item.active\"\n               [attr.role]=\"paneRole ? paneRole : nav.roles ? 'tabpanel' : undefined\"\n               [attr.aria-labelledby]=\"item.domId\">\n              <ng-template [ngTemplateOutlet]=\"item.contentTpl?.templateRef\" [ngTemplateOutletContext]=\"{$implicit: item.active}\"></ng-template>\n          </div>\n      </ng-template>\n  `\n})\nexport class NgbNavOutlet {\n  /**\n   * A role to set on the nav pane\n   */\n  @Input() paneRole;\n\n  /**\n   * Reference to the `NgbNav`\n   */\n  @Input('ngbNavOutlet') nav: NgbNav;\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbNav, NgbNavContent, NgbNavItem, NgbNavLink} from './nav';\nimport {NgbNavOutlet} from './nav-outlet';\n\nexport {NgbNav, NgbNavContent, NgbNavContentContext, NgbNavItem, NgbNavLink, NgbNavChangeEvent} from './nav';\nexport {NgbNavOutlet} from './nav-outlet';\nexport {NgbNavConfig} from './nav-config';\n\nconst NGB_NAV_DIRECTIVES = [NgbNavContent, NgbNav, NgbNavItem, NgbNavLink, NgbNavOutlet];\n\n@NgModule({declarations: NGB_NAV_DIRECTIVES, exports: NGB_NAV_DIRECTIVES, imports: [CommonModule]})\nexport class NgbNavModule {\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * A configuration service for the [`NgbPagination`](#/components/pagination/api#NgbPagination) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the paginations used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbPaginationConfig {\n  disabled = false;\n  boundaryLinks = false;\n  directionLinks = true;\n  ellipses = true;\n  maxSize = 0;\n  pageSize = 10;\n  rotate = false;\n  size: 'sm' | 'lg';\n}\n","import {\n  Component,\n  ContentChild,\n  Directive,\n  EventEmitter,\n  Input,\n  Output,\n  OnChanges,\n  ChangeDetectionStrategy,\n  SimpleChanges,\n  TemplateRef\n} from '@angular/core';\nimport {getValueInRange, isNumber} from '../util/util';\nimport {NgbPaginationConfig} from './pagination-config';\n\n/**\n * A context for the\n * * `NgbPaginationFirst`\n * * `NgbPaginationPrevious`\n * * `NgbPaginationNext`\n * * `NgbPaginationLast`\n * * `NgbPaginationEllipsis`\n *\n * link templates in case you want to override one.\n *\n * @since 4.1.0\n */\nexport interface NgbPaginationLinkContext {\n  /**\n   * The currently selected page number\n   */\n  currentPage: number;\n\n  /**\n   * If `true`, the current link is disabled\n   */\n  disabled: boolean;\n}\n\n/**\n * A context for the `NgbPaginationNumber` link template in case you want to override one.\n *\n * Extends `NgbPaginationLinkContext`.\n *\n * @since 4.1.0\n */\nexport interface NgbPaginationNumberContext extends NgbPaginationLinkContext {\n  /**\n   * The page number, displayed by the current page link.\n   */\n  $implicit: number;\n}\n\n/**\n * A directive to match the 'ellipsis' link template\n *\n * @since 4.1.0\n */\n@Directive({selector: 'ng-template[ngbPaginationEllipsis]'})\nexport class NgbPaginationEllipsis {\n  constructor(public templateRef: TemplateRef<NgbPaginationLinkContext>) {}\n}\n\n/**\n * A directive to match the 'first' link template\n *\n * @since 4.1.0\n */\n@Directive({selector: 'ng-template[ngbPaginationFirst]'})\nexport class NgbPaginationFirst {\n  constructor(public templateRef: TemplateRef<NgbPaginationLinkContext>) {}\n}\n\n/**\n * A directive to match the 'last' link template\n *\n * @since 4.1.0\n */\n@Directive({selector: 'ng-template[ngbPaginationLast]'})\nexport class NgbPaginationLast {\n  constructor(public templateRef: TemplateRef<NgbPaginationLinkContext>) {}\n}\n\n/**\n * A directive to match the 'next' link template\n *\n * @since 4.1.0\n */\n@Directive({selector: 'ng-template[ngbPaginationNext]'})\nexport class NgbPaginationNext {\n  constructor(public templateRef: TemplateRef<NgbPaginationLinkContext>) {}\n}\n\n/**\n * A directive to match the page 'number' link template\n *\n * @since 4.1.0\n */\n@Directive({selector: 'ng-template[ngbPaginationNumber]'})\nexport class NgbPaginationNumber {\n  constructor(public templateRef: TemplateRef<NgbPaginationNumberContext>) {}\n}\n\n/**\n * A directive to match the 'previous' link template\n *\n * @since 4.1.0\n */\n@Directive({selector: 'ng-template[ngbPaginationPrevious]'})\nexport class NgbPaginationPrevious {\n  constructor(public templateRef: TemplateRef<NgbPaginationLinkContext>) {}\n}\n\n/**\n * A component that displays page numbers and allows to customize them in several ways.\n */\n@Component({\n  selector: 'ngb-pagination',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {'role': 'navigation'},\n  template: `\n    <ng-template #first><span aria-hidden=\"true\" i18n=\"@@ngb.pagination.first\">&laquo;&laquo;</span></ng-template>\n    <ng-template #previous><span aria-hidden=\"true\" i18n=\"@@ngb.pagination.previous\">&laquo;</span></ng-template>\n    <ng-template #next><span aria-hidden=\"true\" i18n=\"@@ngb.pagination.next\">&raquo;</span></ng-template>\n    <ng-template #last><span aria-hidden=\"true\" i18n=\"@@ngb.pagination.last\">&raquo;&raquo;</span></ng-template>\n    <ng-template #ellipsis>...</ng-template>\n    <ng-template #defaultNumber let-page let-currentPage=\"currentPage\">\n      {{ page }}\n      <span *ngIf=\"page === currentPage\" class=\"sr-only\">(current)</span>\n    </ng-template>\n    <ul [class]=\"'pagination' + (size ? ' pagination-' + size : '')\">\n      <li *ngIf=\"boundaryLinks\" class=\"page-item\"\n        [class.disabled]=\"previousDisabled()\">\n        <a aria-label=\"First\" i18n-aria-label=\"@@ngb.pagination.first-aria\" class=\"page-link\" href\n          (click)=\"selectPage(1); $event.preventDefault()\" [attr.tabindex]=\"previousDisabled() ? '-1' : null\"\n          [attr.aria-disabled]=\"previousDisabled() ? 'true' : null\">\n          <ng-template [ngTemplateOutlet]=\"tplFirst?.templateRef || first\"\n                       [ngTemplateOutletContext]=\"{disabled: previousDisabled(), currentPage: page}\"></ng-template>\n        </a>\n      </li>\n\n      <li *ngIf=\"directionLinks\" class=\"page-item\"\n        [class.disabled]=\"previousDisabled()\">\n        <a aria-label=\"Previous\" i18n-aria-label=\"@@ngb.pagination.previous-aria\" class=\"page-link\" href\n          (click)=\"selectPage(page-1); $event.preventDefault()\" [attr.tabindex]=\"previousDisabled() ? '-1' : null\"\n          [attr.aria-disabled]=\"previousDisabled() ? 'true' : null\">\n          <ng-template [ngTemplateOutlet]=\"tplPrevious?.templateRef || previous\"\n                       [ngTemplateOutletContext]=\"{disabled: previousDisabled()}\"></ng-template>\n        </a>\n      </li>\n      <li *ngFor=\"let pageNumber of pages\" class=\"page-item\" [class.active]=\"pageNumber === page\"\n        [class.disabled]=\"isEllipsis(pageNumber) || disabled\" [attr.aria-current]=\"(pageNumber === page ? 'page' : null)\">\n        <a *ngIf=\"isEllipsis(pageNumber)\" class=\"page-link\" tabindex=\"-1\" aria-disabled=\"true\">\n          <ng-template [ngTemplateOutlet]=\"tplEllipsis?.templateRef || ellipsis\"\n                       [ngTemplateOutletContext]=\"{disabled: true, currentPage: page}\"></ng-template>\n        </a>\n        <a *ngIf=\"!isEllipsis(pageNumber)\" class=\"page-link\" href (click)=\"selectPage(pageNumber); $event.preventDefault()\" [attr.tabindex]=\"disabled ? '-1' : null\"\n          [attr.aria-disabled]=\"disabled ? 'true' : null\">\n          <ng-template [ngTemplateOutlet]=\"tplNumber?.templateRef || defaultNumber\"\n                       [ngTemplateOutletContext]=\"{disabled: disabled, $implicit: pageNumber, currentPage: page}\"></ng-template>\n        </a>\n      </li>\n      <li *ngIf=\"directionLinks\" class=\"page-item\" [class.disabled]=\"nextDisabled()\">\n        <a aria-label=\"Next\" i18n-aria-label=\"@@ngb.pagination.next-aria\" class=\"page-link\" href\n          (click)=\"selectPage(page+1); $event.preventDefault()\" [attr.tabindex]=\"nextDisabled() ? '-1' : null\"\n          [attr.aria-disabled]=\"nextDisabled() ? 'true' : null\">\n          <ng-template [ngTemplateOutlet]=\"tplNext?.templateRef || next\"\n                       [ngTemplateOutletContext]=\"{disabled: nextDisabled(), currentPage: page}\"></ng-template>\n        </a>\n      </li>\n\n      <li *ngIf=\"boundaryLinks\" class=\"page-item\" [class.disabled]=\"nextDisabled()\">\n        <a aria-label=\"Last\" i18n-aria-label=\"@@ngb.pagination.last-aria\" class=\"page-link\" href\n          (click)=\"selectPage(pageCount); $event.preventDefault()\" [attr.tabindex]=\"nextDisabled() ? '-1' : null\"\n          [attr.aria-disabled]=\"nextDisabled() ? 'true' : null\">\n          <ng-template [ngTemplateOutlet]=\"tplLast?.templateRef || last\"\n                       [ngTemplateOutletContext]=\"{disabled: nextDisabled(), currentPage: page}\"></ng-template>\n        </a>\n      </li>\n    </ul>\n  `\n})\nexport class NgbPagination implements OnChanges {\n  pageCount = 0;\n  pages: number[] = [];\n\n  @ContentChild(NgbPaginationEllipsis, {static: false}) tplEllipsis: NgbPaginationEllipsis;\n  @ContentChild(NgbPaginationFirst, {static: false}) tplFirst: NgbPaginationFirst;\n  @ContentChild(NgbPaginationLast, {static: false}) tplLast: NgbPaginationLast;\n  @ContentChild(NgbPaginationNext, {static: false}) tplNext: NgbPaginationNext;\n  @ContentChild(NgbPaginationNumber, {static: false}) tplNumber: NgbPaginationNumber;\n  @ContentChild(NgbPaginationPrevious, {static: false}) tplPrevious: NgbPaginationPrevious;\n\n  /**\n   * If `true`, pagination links will be disabled.\n   */\n  @Input() disabled: boolean;\n\n  /**\n   * If `true`, the \"First\" and \"Last\" page links are shown.\n   */\n  @Input() boundaryLinks: boolean;\n\n  /**\n   * If `true`, the \"Next\" and \"Previous\" page links are shown.\n   */\n  @Input() directionLinks: boolean;\n\n  /**\n   * If `true`, the ellipsis symbols and first/last page numbers will be shown when `maxSize` > number of pages.\n   */\n  @Input() ellipses: boolean;\n\n  /**\n   * Whether to rotate pages when `maxSize` > number of pages.\n   *\n   * The current page always stays in the middle if `true`.\n   */\n  @Input() rotate: boolean;\n\n  /**\n   *  The number of items in your paginated collection.\n   *\n   *  Note, that this is not the number of pages. Page numbers are calculated dynamically based on\n   *  `collectionSize` and `pageSize`. Ex. if you have 100 items in your collection and displaying 20 items per page,\n   *  you'll end up with 5 pages.\n   */\n  @Input() collectionSize: number;\n\n  /**\n   *  The maximum number of pages to display.\n   */\n  @Input() maxSize: number;\n\n  /**\n   *  The current page.\n   *\n   *  Page numbers start with `1`.\n   */\n  @Input() page = 1;\n\n  /**\n   *  The number of items per page.\n   */\n  @Input() pageSize: number;\n\n  /**\n   *  An event fired when the page is changed. Will fire only if collection size is set and all values are valid.\n   *\n   *  Event payload is the number of the newly selected page.\n   *\n   *  Page numbers start with `1`.\n   */\n  @Output() pageChange = new EventEmitter<number>(true);\n\n  /**\n   * The pagination display size.\n   *\n   * Bootstrap currently supports small and large sizes.\n   */\n  @Input() size: 'sm' | 'lg';\n\n  constructor(config: NgbPaginationConfig) {\n    this.disabled = config.disabled;\n    this.boundaryLinks = config.boundaryLinks;\n    this.directionLinks = config.directionLinks;\n    this.ellipses = config.ellipses;\n    this.maxSize = config.maxSize;\n    this.pageSize = config.pageSize;\n    this.rotate = config.rotate;\n    this.size = config.size;\n  }\n\n  hasPrevious(): boolean { return this.page > 1; }\n\n  hasNext(): boolean { return this.page < this.pageCount; }\n\n  nextDisabled(): boolean { return !this.hasNext() || this.disabled; }\n\n  previousDisabled(): boolean { return !this.hasPrevious() || this.disabled; }\n\n  selectPage(pageNumber: number): void { this._updatePages(pageNumber); }\n\n  ngOnChanges(changes: SimpleChanges): void { this._updatePages(this.page); }\n\n  isEllipsis(pageNumber): boolean { return pageNumber === -1; }\n\n  /**\n   * Appends ellipses and first/last page number to the displayed pages\n   */\n  private _applyEllipses(start: number, end: number) {\n    if (this.ellipses) {\n      if (start > 0) {\n        // The first page will always be included. If the displayed range\n        // starts after the third page, then add ellipsis. But if the range\n        // starts on the third page, then add the second page instead of\n        // an ellipsis, because the ellipsis would only hide a single page.\n        if (start > 2) {\n          this.pages.unshift(-1);\n        } else if (start === 2) {\n          this.pages.unshift(2);\n        }\n        this.pages.unshift(1);\n      }\n      if (end < this.pageCount) {\n        // The last page will always be included. If the displayed range\n        // ends before the third-last page, then add ellipsis. But if the range\n        // ends on third-last page, then add the second-last page instead of\n        // an ellipsis, because the ellipsis would only hide a single page.\n        if (end < (this.pageCount - 2)) {\n          this.pages.push(-1);\n        } else if (end === (this.pageCount - 2)) {\n          this.pages.push(this.pageCount - 1);\n        }\n        this.pages.push(this.pageCount);\n      }\n    }\n  }\n\n  /**\n   * Rotates page numbers based on maxSize items visible.\n   * Currently selected page stays in the middle:\n   *\n   * Ex. for selected page = 6:\n   * [5,*6*,7] for maxSize = 3\n   * [4,5,*6*,7] for maxSize = 4\n   */\n  private _applyRotation(): [number, number] {\n    let start = 0;\n    let end = this.pageCount;\n    let leftOffset = Math.floor(this.maxSize / 2);\n    let rightOffset = this.maxSize % 2 === 0 ? leftOffset - 1 : leftOffset;\n\n    if (this.page <= leftOffset) {\n      // very beginning, no rotation -> [0..maxSize]\n      end = this.maxSize;\n    } else if (this.pageCount - this.page < leftOffset) {\n      // very end, no rotation -> [len-maxSize..len]\n      start = this.pageCount - this.maxSize;\n    } else {\n      // rotate\n      start = this.page - leftOffset - 1;\n      end = this.page + rightOffset;\n    }\n\n    return [start, end];\n  }\n\n  /**\n   * Paginates page numbers based on maxSize items per page.\n   */\n  private _applyPagination(): [number, number] {\n    let page = Math.ceil(this.page / this.maxSize) - 1;\n    let start = page * this.maxSize;\n    let end = start + this.maxSize;\n\n    return [start, end];\n  }\n\n  private _setPageInRange(newPageNo) {\n    const prevPageNo = this.page;\n    this.page = getValueInRange(newPageNo, this.pageCount, 1);\n\n    if (this.page !== prevPageNo && isNumber(this.collectionSize)) {\n      this.pageChange.emit(this.page);\n    }\n  }\n\n  private _updatePages(newPage: number) {\n    this.pageCount = Math.ceil(this.collectionSize / this.pageSize);\n\n    if (!isNumber(this.pageCount)) {\n      this.pageCount = 0;\n    }\n\n    // fill-in model needed to render pages\n    this.pages.length = 0;\n    for (let i = 1; i <= this.pageCount; i++) {\n      this.pages.push(i);\n    }\n\n    // set page within 1..max range\n    this._setPageInRange(newPage);\n\n    // apply maxSize if necessary\n    if (this.maxSize > 0 && this.pageCount > this.maxSize) {\n      let start = 0;\n      let end = this.pageCount;\n\n      // either paginating or rotating page numbers\n      if (this.rotate) {\n        [start, end] = this._applyRotation();\n      } else {\n        [start, end] = this._applyPagination();\n      }\n\n      this.pages = this.pages.slice(start, end);\n\n      // adding ellipses\n      this._applyEllipses(start, end);\n    }\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {\n  NgbPagination,\n  NgbPaginationEllipsis,\n  NgbPaginationFirst,\n  NgbPaginationLast,\n  NgbPaginationNext,\n  NgbPaginationNumber,\n  NgbPaginationPrevious\n} from './pagination';\n\nexport {\n  NgbPagination,\n  NgbPaginationEllipsis,\n  NgbPaginationFirst,\n  NgbPaginationLast,\n  NgbPaginationNext,\n  NgbPaginationNumber,\n  NgbPaginationPrevious\n} from './pagination';\nexport {NgbPaginationConfig} from './pagination-config';\n\nconst DIRECTIVES = [\n  NgbPagination, NgbPaginationEllipsis, NgbPaginationFirst, NgbPaginationLast, NgbPaginationNext, NgbPaginationNumber,\n  NgbPaginationPrevious\n];\n\n@NgModule({declarations: DIRECTIVES, exports: DIRECTIVES, imports: [CommonModule]})\nexport class NgbPaginationModule {\n}\n","import {Observable, merge} from 'rxjs';\nimport {share, filter, delay, map} from 'rxjs/operators';\n\nexport class Trigger {\n  constructor(public open: string, public close?: string) {\n    if (!close) {\n      this.close = open;\n    }\n  }\n\n  isManual() { return this.open === 'manual' || this.close === 'manual'; }\n}\n\nconst DEFAULT_ALIASES = {\n  'hover': ['mouseenter', 'mouseleave'],\n  'focus': ['focusin', 'focusout'],\n};\n\nexport function parseTriggers(triggers: string, aliases = DEFAULT_ALIASES): Trigger[] {\n  const trimmedTriggers = (triggers || '').trim();\n\n  if (trimmedTriggers.length === 0) {\n    return [];\n  }\n\n  const parsedTriggers = trimmedTriggers.split(/\\s+/).map(trigger => trigger.split(':')).map((triggerPair) => {\n    let alias = aliases[triggerPair[0]] || triggerPair;\n    return new Trigger(alias[0], alias[1]);\n  });\n\n  const manualTriggers = parsedTriggers.filter(triggerPair => triggerPair.isManual());\n\n  if (manualTriggers.length > 1) {\n    throw 'Triggers parse error: only one manual trigger is allowed';\n  }\n\n  if (manualTriggers.length === 1 && parsedTriggers.length > 1) {\n    throw 'Triggers parse error: manual trigger can\\'t be mixed with other triggers';\n  }\n\n  return parsedTriggers;\n}\n\nexport function observeTriggers(renderer: any, nativeElement: any, triggers: Trigger[], isOpenedFn: () => boolean) {\n  return new Observable<boolean>(subscriber => {\n    const listeners = [];\n    const openFn = () => subscriber.next(true);\n    const closeFn = () => subscriber.next(false);\n    const toggleFn = () => subscriber.next(!isOpenedFn());\n\n    triggers.forEach((trigger: Trigger) => {\n      if (trigger.open === trigger.close) {\n        listeners.push(renderer.listen(nativeElement, trigger.open, toggleFn));\n      } else {\n        listeners.push(\n            renderer.listen(nativeElement, trigger.open, openFn),\n            renderer.listen(nativeElement, trigger.close, closeFn));\n      }\n    });\n\n    return () => { listeners.forEach(unsubscribeFn => unsubscribeFn()); };\n  });\n}\n\nconst delayOrNoop = <T>(time: number) => time > 0 ? delay<T>(time) : (a: Observable<T>) => a;\n\nexport function triggerDelay(openDelay: number, closeDelay: number, isOpenedFn: () => boolean) {\n  return (input$: Observable<boolean>) => {\n    let pending = null;\n    const filteredInput$ = input$.pipe(\n        map(open => ({open})), filter(event => {\n          const currentlyOpen = isOpenedFn();\n          if (currentlyOpen !== event.open && (!pending || pending.open === currentlyOpen)) {\n            pending = event;\n            return true;\n          }\n          if (pending && pending.open !== event.open) {\n            pending = null;\n          }\n          return false;\n        }),\n        share());\n    const delayedOpen$ = filteredInput$.pipe(filter(event => event.open), delayOrNoop(openDelay));\n    const delayedClose$ = filteredInput$.pipe(filter(event => !event.open), delayOrNoop(closeDelay));\n    return merge(delayedOpen$, delayedClose$)\n        .pipe(\n            filter(event => {\n              if (event === pending) {\n                pending = null;\n                return event.open !== isOpenedFn();\n              }\n              return false;\n            }),\n            map(event => event.open));\n  };\n}\n\nexport function listenToTriggers(\n    renderer: any, nativeElement: any, triggers: string, isOpenedFn: () => boolean, openFn, closeFn, openDelay = 0,\n    closeDelay = 0) {\n  const parsedTriggers = parseTriggers(triggers);\n\n  if (parsedTriggers.length === 1 && parsedTriggers[0].isManual()) {\n    return () => {};\n  }\n\n  const subscription = observeTriggers(renderer, nativeElement, parsedTriggers, isOpenedFn)\n                           .pipe(triggerDelay(openDelay, closeDelay, isOpenedFn))\n                           .subscribe(open => (open ? openFn() : closeFn()));\n\n  return () => subscription.unsubscribe();\n}\n","import {Injectable} from '@angular/core';\nimport {PlacementArray} from '../util/positioning';\n\n/**\n * A configuration service for the [`NgbPopover`](#/components/popover/api#NgbPopover) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the popovers used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbPopoverConfig {\n  autoClose: boolean | 'inside' | 'outside' = true;\n  placement: PlacementArray = 'auto';\n  triggers = 'click';\n  container: string;\n  disablePopover = false;\n  popoverClass: string;\n  openDelay = 0;\n  closeDelay = 0;\n}\n","import {\n  Component,\n  Directive,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  OnInit,\n  OnDestroy,\n  OnChanges,\n  Inject,\n  Injector,\n  Renderer2,\n  ComponentRef,\n  ElementRef,\n  TemplateRef,\n  ViewContainerRef,\n  ComponentFactoryResolver,\n  NgZone,\n  SimpleChanges,\n  ViewEncapsulation,\n  ChangeDetectorRef,\n  ApplicationRef\n} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\n\nimport {listenToTriggers} from '../util/triggers';\nimport {ngbAutoClose} from '../util/autoclose';\nimport {positionElements, PlacementArray} from '../util/positioning';\nimport {PopupService} from '../util/popup';\n\nimport {NgbPopoverConfig} from './popover-config';\n\nlet nextId = 0;\n\n@Component({\n  selector: 'ngb-popover-window',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  host: {'[class]': '\"popover\" + (popoverClass ? \" \" + popoverClass : \"\")', 'role': 'tooltip', '[id]': 'id'},\n  template: `\n    <div class=\"arrow\"></div>\n    <h3 class=\"popover-header\" *ngIf=\"title != null\">\n      <ng-template #simpleTitle>{{title}}</ng-template>\n      <ng-template [ngTemplateOutlet]=\"isTitleTemplate() ? title : simpleTitle\" [ngTemplateOutletContext]=\"context\"></ng-template>\n    </h3>\n    <div class=\"popover-body\"><ng-content></ng-content></div>`,\n  styleUrls: ['./popover.scss']\n})\nexport class NgbPopoverWindow {\n  @Input() title: undefined | string | TemplateRef<any>;\n  @Input() id: string;\n  @Input() popoverClass: string;\n  @Input() context: any;\n\n  isTitleTemplate() { return this.title instanceof TemplateRef; }\n}\n\n/**\n * A lightweight and extensible directive for fancy popover creation.\n */\n@Directive({selector: '[ngbPopover]', exportAs: 'ngbPopover'})\nexport class NgbPopover implements OnInit, OnDestroy, OnChanges {\n  /**\n   * Indicates whether the popover should be closed on `Escape` key and inside/outside clicks:\n   *\n   * * `true` - closes on both outside and inside clicks as well as `Escape` presses\n   * * `false` - disables the autoClose feature (NB: triggers still apply)\n   * * `\"inside\"` - closes on inside clicks as well as Escape presses\n   * * `\"outside\"` - closes on outside clicks (sometimes also achievable through triggers)\n   * as well as `Escape` presses\n   *\n   * @since 3.0.0\n   */\n  @Input() autoClose: boolean | 'inside' | 'outside';\n\n  /**\n   * The string content or a `TemplateRef` for the content to be displayed in the popover.\n   *\n   * If the title and the content are empty, the popover won't open.\n   */\n  @Input() ngbPopover: string | TemplateRef<any>;\n\n  /**\n   * The title of the popover.\n   *\n   * If the title and the content are empty, the popover won't open.\n   */\n  @Input() popoverTitle: string | TemplateRef<any>;\n\n  /**\n   * The preferred placement of the popover.\n   *\n   * Possible values are `\"top\"`, `\"top-left\"`, `\"top-right\"`, `\"bottom\"`, `\"bottom-left\"`,\n   * `\"bottom-right\"`, `\"left\"`, `\"left-top\"`, `\"left-bottom\"`, `\"right\"`, `\"right-top\"`,\n   * `\"right-bottom\"`\n   *\n   * Accepts an array of strings or a string with space separated possible values.\n   *\n   * The default order of preference is `\"auto\"` (same as the sequence above).\n   *\n   * Please see the [positioning overview](#/positioning) for more details.\n   */\n  @Input() placement: PlacementArray;\n\n  /**\n   * Specifies events that should trigger the tooltip.\n   *\n   * Supports a space separated list of event names.\n   * For more details see the [triggers demo](#/components/popover/examples#triggers).\n   */\n  @Input() triggers: string;\n\n  /**\n   * A selector specifying the element the popover should be appended to.\n   *\n   * Currently only supports `body`.\n   */\n  @Input() container: string;\n\n  /**\n   * If `true`, popover is disabled and won't be displayed.\n   *\n   * @since 1.1.0\n   */\n  @Input() disablePopover: boolean;\n\n  /**\n   * An optional class applied to the popover window element.\n   *\n   * @since 2.2.0\n   */\n  @Input() popoverClass: string;\n\n  /**\n   * The opening delay in ms. Works only for \"non-manual\" opening triggers defined by the `triggers` input.\n   *\n   * @since 4.1.0\n   */\n  @Input() openDelay: number;\n\n  /**\n   * The closing delay in ms. Works only for \"non-manual\" opening triggers defined by the `triggers` input.\n   *\n   * @since 4.1.0\n   */\n  @Input() closeDelay: number;\n\n  /**\n   * An event emitted when the popover is shown. Contains no payload.\n   */\n  @Output() shown = new EventEmitter<void>();\n\n  /**\n   * An event emitted when the popover is hidden. Contains no payload.\n   */\n  @Output() hidden = new EventEmitter<void>();\n\n  private _ngbPopoverWindowId = `ngb-popover-${nextId++}`;\n  private _popupService: PopupService<NgbPopoverWindow>;\n  private _windowRef: ComponentRef<NgbPopoverWindow>;\n  private _unregisterListenersFn;\n  private _zoneSubscription: any;\n  private _isDisabled(): boolean {\n    if (this.disablePopover) {\n      return true;\n    }\n    if (!this.ngbPopover && !this.popoverTitle) {\n      return true;\n    }\n    return false;\n  }\n\n  constructor(\n      private _elementRef: ElementRef<HTMLElement>, private _renderer: Renderer2, injector: Injector,\n      componentFactoryResolver: ComponentFactoryResolver, viewContainerRef: ViewContainerRef, config: NgbPopoverConfig,\n      private _ngZone: NgZone, @Inject(DOCUMENT) private _document: any, private _changeDetector: ChangeDetectorRef,\n      applicationRef: ApplicationRef) {\n    this.autoClose = config.autoClose;\n    this.placement = config.placement;\n    this.triggers = config.triggers;\n    this.container = config.container;\n    this.disablePopover = config.disablePopover;\n    this.popoverClass = config.popoverClass;\n    this.openDelay = config.openDelay;\n    this.closeDelay = config.closeDelay;\n    this._popupService = new PopupService<NgbPopoverWindow>(\n        NgbPopoverWindow, injector, viewContainerRef, _renderer, componentFactoryResolver, applicationRef);\n\n    this._zoneSubscription = _ngZone.onStable.subscribe(() => {\n      if (this._windowRef) {\n        positionElements(\n            this._elementRef.nativeElement, this._windowRef.location.nativeElement, this.placement,\n            this.container === 'body', 'bs-popover');\n      }\n    });\n  }\n\n  /**\n   * Opens the popover.\n   *\n   * This is considered to be a \"manual\" triggering.\n   * The `context` is an optional value to be injected into the popover template when it is created.\n   */\n  open(context?: any) {\n    if (!this._windowRef && !this._isDisabled()) {\n      this._windowRef = this._popupService.open(this.ngbPopover, context);\n      this._windowRef.instance.title = this.popoverTitle;\n      this._windowRef.instance.context = context;\n      this._windowRef.instance.popoverClass = this.popoverClass;\n      this._windowRef.instance.id = this._ngbPopoverWindowId;\n\n      this._renderer.setAttribute(this._elementRef.nativeElement, 'aria-describedby', this._ngbPopoverWindowId);\n\n      if (this.container === 'body') {\n        this._document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement);\n      }\n\n      // We need to detect changes, because we don't know where .open() might be called from.\n      // Ex. opening popover from one of lifecycle hooks that run after the CD\n      // (say from ngAfterViewInit) will result in 'ExpressionHasChanged' exception\n      this._windowRef.changeDetectorRef.detectChanges();\n\n      // We need to mark for check, because popover won't work inside the OnPush component.\n      // Ex. when we use expression like `{{ popover.isOpen() : 'opened' : 'closed' }}`\n      // inside the template of an OnPush component and we change the popover from\n      // open -> closed, the expression in question won't be updated unless we explicitly\n      // mark the parent component to be checked.\n      this._windowRef.changeDetectorRef.markForCheck();\n\n      ngbAutoClose(\n          this._ngZone, this._document, this.autoClose, () => this.close(), this.hidden,\n          [this._windowRef.location.nativeElement]);\n      this.shown.emit();\n    }\n  }\n\n  /**\n   * Closes the popover.\n   *\n   * This is considered to be a \"manual\" triggering of the popover.\n   */\n  close(): void {\n    if (this._windowRef) {\n      this._renderer.removeAttribute(this._elementRef.nativeElement, 'aria-describedby');\n      this._popupService.close();\n      this._windowRef = null;\n      this.hidden.emit();\n      this._changeDetector.markForCheck();\n    }\n  }\n\n  /**\n   * Toggles the popover.\n   *\n   * This is considered to be a \"manual\" triggering of the popover.\n   */\n  toggle(): void {\n    if (this._windowRef) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  /**\n   * Returns `true`, if the popover is currently shown.\n   */\n  isOpen(): boolean { return this._windowRef != null; }\n\n  ngOnInit() {\n    this._unregisterListenersFn = listenToTriggers(\n        this._renderer, this._elementRef.nativeElement, this.triggers, this.isOpen.bind(this), this.open.bind(this),\n        this.close.bind(this), +this.openDelay, +this.closeDelay);\n  }\n\n  ngOnChanges({ngbPopover, popoverTitle, disablePopover, popoverClass}: SimpleChanges) {\n    if (popoverClass && this.isOpen()) {\n      this._windowRef.instance.popoverClass = popoverClass.currentValue;\n    }\n    // close popover if title and content become empty, or disablePopover set to true\n    if ((ngbPopover || popoverTitle || disablePopover) && this._isDisabled()) {\n      this.close();\n    }\n  }\n\n  ngOnDestroy() {\n    this.close();\n    // This check is needed as it might happen that ngOnDestroy is called before ngOnInit\n    // under certain conditions, see: https://github.com/ng-bootstrap/ng-bootstrap/issues/2199\n    if (this._unregisterListenersFn) {\n      this._unregisterListenersFn();\n    }\n    this._zoneSubscription.unsubscribe();\n  }\n}\n","import {NgModule} from '@angular/core';\n\nimport {NgbPopover, NgbPopoverWindow} from './popover';\nimport {CommonModule} from '@angular/common';\n\nexport {NgbPopover} from './popover';\nexport {NgbPopoverConfig} from './popover-config';\nexport {Placement} from '../util/positioning';\n\n@NgModule({\n  declarations: [NgbPopover, NgbPopoverWindow],\n  exports: [NgbPopover],\n  imports: [CommonModule],\n  entryComponents: [NgbPopoverWindow]\n})\nexport class NgbPopoverModule {\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * A configuration service for the [`NgbProgressbar`](#/components/progressbar/api#NgbProgressbar) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the progress bars used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbProgressbarConfig {\n  max = 100;\n  animated = false;\n  striped = false;\n  textType: string;\n  type: string;\n  showValue = false;\n  height: string;\n}\n","import {ChangeDetectionStrategy, Component, Input, ViewEncapsulation} from '@angular/core';\nimport {getValueInRange, isNumber} from '../util/util';\nimport {NgbProgressbarConfig} from './progressbar-config';\n\n/**\n * A directive that provides feedback on the progress of a workflow or an action.\n */\n@Component({\n  selector: 'ngb-progressbar',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <div class=\"progress\" [style.height]=\"height\">\n      <div class=\"progress-bar{{type ? ' bg-' + type : ''}}{{textType ? ' text-' + textType : ''}}\n      {{animated ? ' progress-bar-animated' : ''}}{{striped ? ' progress-bar-striped' : ''}}\" role=\"progressbar\" [style.width.%]=\"getPercentValue()\"\n      [attr.aria-valuenow]=\"getValue()\" aria-valuemin=\"0\" [attr.aria-valuemax]=\"max\">\n        <span *ngIf=\"showValue\" i18n=\"@@ngb.progressbar.value\">{{getPercentValue()}}%</span><ng-content></ng-content>\n      </div>\n    </div>\n  `\n})\nexport class NgbProgressbar {\n  private _max: number;\n\n  /**\n   * The maximal value to be displayed in the progress bar.\n   *\n   * Should be a positive number. Will default to 100 otherwise.\n   */\n  @Input()\n  set max(max: number) {\n    this._max = !isNumber(max) || max <= 0 ? 100 : max;\n  }\n\n  get max(): number { return this._max; }\n\n  /**\n   * If `true`, the stripes on the progress bar are animated.\n   *\n   * Takes effect only for browsers supporting CSS3 animations, and if `striped` is `true`.\n   */\n  @Input() animated: boolean;\n\n  /**\n   * If `true`, the progress bars will be displayed as striped.\n   */\n  @Input() striped: boolean;\n\n  /**\n   * If `true`, the current percentage will be shown in the `xx%` format.\n   */\n  @Input() showValue: boolean;\n\n  /**\n   * Optional text variant type of the progress bar.\n   *\n   * Supports types based on Bootstrap background color variants, like:\n   *  `\"success\"`, `\"info\"`, `\"warning\"`, `\"danger\"`, `\"primary\"`, `\"secondary\"`, `\"dark\"` and so on.\n   *\n   * @since 5.2.0\n   */\n  @Input() textType: string;\n\n  /**\n   * The type of the progress bar.\n   *\n   * Supports types based on Bootstrap background color variants, like:\n   *  `\"success\"`, `\"info\"`, `\"warning\"`, `\"danger\"`, `\"primary\"`, `\"secondary\"`, `\"dark\"` and so on.\n   */\n  @Input() type: string;\n\n  /**\n   * The current value for the progress bar.\n   *\n   * Should be in the `[0, max]` range.\n   */\n  @Input() value = 0;\n\n  /**\n   * The height of the progress bar.\n   *\n   * Accepts any valid CSS height values, ex. `\"2rem\"`\n   */\n  @Input() height: string;\n\n  constructor(config: NgbProgressbarConfig) {\n    this.max = config.max;\n    this.animated = config.animated;\n    this.striped = config.striped;\n    this.textType = config.textType;\n    this.type = config.type;\n    this.showValue = config.showValue;\n    this.height = config.height;\n  }\n\n  getValue() { return getValueInRange(this.value, this.max); }\n\n  getPercentValue() { return 100 * this.getValue() / this.max; }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbProgressbar} from './progressbar';\n\nexport {NgbProgressbar} from './progressbar';\nexport {NgbProgressbarConfig} from './progressbar-config';\n\n@NgModule({declarations: [NgbProgressbar], exports: [NgbProgressbar], imports: [CommonModule]})\nexport class NgbProgressbarModule {\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * A configuration service for the [`NgbRating`](#/components/rating/api#NgbRating) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the ratings used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbRatingConfig {\n  max = 10;\n  readonly = false;\n  resettable = false;\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  EventEmitter,\n  forwardRef,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  SimpleChanges,\n  TemplateRef,\n  ViewEncapsulation\n} from '@angular/core';\nimport {NgbRatingConfig} from './rating-config';\nimport {getValueInRange} from '../util/util';\nimport {Key} from '../util/key';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\n\n/**\n * The context for the custom star display template defined in the `starTemplate`.\n */\nexport interface StarTemplateContext {\n  /**\n   * The star fill percentage, an integer in the `[0, 100]` range.\n   */\n  fill: number;\n\n  /**\n   * Index of the star, starts with `0`.\n   */\n  index: number;\n}\n\nconst NGB_RATING_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbRating),\n  multi: true\n};\n\n/**\n * A directive that helps visualising and interacting with a star rating bar.\n */\n@Component({\n  selector: 'ngb-rating',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  host: {\n    'class': 'd-inline-flex',\n    '[tabindex]': 'disabled ? -1 : 0',\n    'role': 'slider',\n    'aria-valuemin': '0',\n    '[attr.aria-valuemax]': 'max',\n    '[attr.aria-valuenow]': 'nextRate',\n    '[attr.aria-valuetext]': 'ariaValueText()',\n    '[attr.aria-disabled]': 'readonly ? true : null',\n    '(blur)': 'handleBlur()',\n    '(keydown)': 'handleKeyDown($event)',\n    '(mouseleave)': 'reset()'\n  },\n  template: `\n    <ng-template #t let-fill=\"fill\">{{ fill === 100 ? '&#9733;' : '&#9734;' }}</ng-template>\n    <ng-template ngFor [ngForOf]=\"contexts\" let-index=\"index\">\n      <span class=\"sr-only\">({{ index < nextRate ? '*' : ' ' }})</span>\n      <span (mouseenter)=\"enter(index + 1)\" (click)=\"handleClick(index + 1)\" [style.cursor]=\"readonly || disabled ? 'default' : 'pointer'\">\n        <ng-template [ngTemplateOutlet]=\"starTemplate || starTemplateFromContent || t\" [ngTemplateOutletContext]=\"contexts[index]\">\n        </ng-template>\n      </span>\n    </ng-template>\n  `,\n  providers: [NGB_RATING_VALUE_ACCESSOR]\n})\nexport class NgbRating implements ControlValueAccessor,\n    OnInit, OnChanges {\n  contexts: StarTemplateContext[] = [];\n  disabled = false;\n  nextRate: number;\n\n\n  /**\n   * The maximal rating that can be given.\n   */\n  @Input() max: number;\n\n  /**\n   * The current rating. Could be a decimal value like `3.75`.\n   */\n  @Input() rate: number;\n\n  /**\n   * If `true`, the rating can't be changed.\n   */\n  @Input() readonly: boolean;\n\n  /**\n   * If `true`, the rating can be reset to `0` by mouse clicking currently set rating.\n   */\n  @Input() resettable: boolean;\n\n  /**\n   * The template to override the way each star is displayed.\n   *\n   * Alternatively put an `<ng-template>` as the only child of your `<ngb-rating>` element\n   */\n  @Input() starTemplate: TemplateRef<StarTemplateContext>;\n  @ContentChild(TemplateRef, {static: false}) starTemplateFromContent: TemplateRef<StarTemplateContext>;\n\n  /**\n   * An event emitted when the user is hovering over a given rating.\n   *\n   * Event payload equals to the rating being hovered over.\n   */\n  @Output() hover = new EventEmitter<number>();\n\n  /**\n   * An event emitted when the user stops hovering over a given rating.\n   *\n   * Event payload equals to the rating of the last item being hovered over.\n   */\n  @Output() leave = new EventEmitter<number>();\n\n  /**\n   * An event emitted when the user selects a new rating.\n   *\n   * Event payload equals to the newly selected rating.\n   */\n  @Output() rateChange = new EventEmitter<number>(true);\n\n  onChange = (_: any) => {};\n  onTouched = () => {};\n\n  constructor(config: NgbRatingConfig, private _changeDetectorRef: ChangeDetectorRef) {\n    this.max = config.max;\n    this.readonly = config.readonly;\n  }\n\n  ariaValueText() { return `${this.nextRate} out of ${this.max}`; }\n\n  enter(value: number): void {\n    if (!this.readonly && !this.disabled) {\n      this._updateState(value);\n    }\n    this.hover.emit(value);\n  }\n\n  handleBlur() { this.onTouched(); }\n\n  handleClick(value: number) {\n    if (!this.readonly && !this.disabled) {\n      this.update(this.resettable && this.rate === value ? 0 : value);\n    }\n  }\n\n  handleKeyDown(event: KeyboardEvent) {\n    // tslint:disable-next-line:deprecation\n    switch (event.which) {\n      case Key.ArrowDown:\n      case Key.ArrowLeft:\n        this.update(this.rate - 1);\n        break;\n      case Key.ArrowUp:\n      case Key.ArrowRight:\n        this.update(this.rate + 1);\n        break;\n      case Key.Home:\n        this.update(0);\n        break;\n      case Key.End:\n        this.update(this.max);\n        break;\n      default:\n        return;\n    }\n\n    // note 'return' in default case\n    event.preventDefault();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['rate']) {\n      this.update(this.rate);\n    }\n  }\n\n  ngOnInit(): void {\n    this.contexts = Array.from({length: this.max}, (v, k) => ({fill: 0, index: k}));\n    this._updateState(this.rate);\n  }\n\n  registerOnChange(fn: (value: any) => any): void { this.onChange = fn; }\n\n  registerOnTouched(fn: () => any): void { this.onTouched = fn; }\n\n  reset(): void {\n    this.leave.emit(this.nextRate);\n    this._updateState(this.rate);\n  }\n\n  setDisabledState(isDisabled: boolean) { this.disabled = isDisabled; }\n\n  update(value: number, internalChange = true): void {\n    const newRate = getValueInRange(value, this.max, 0);\n    if (!this.readonly && !this.disabled && this.rate !== newRate) {\n      this.rate = newRate;\n      this.rateChange.emit(this.rate);\n    }\n    if (internalChange) {\n      this.onChange(this.rate);\n      this.onTouched();\n    }\n    this._updateState(this.rate);\n  }\n\n  writeValue(value) {\n    this.update(value, false);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  private _getFillValue(index: number): number {\n    const diff = this.nextRate - index;\n\n    if (diff >= 1) {\n      return 100;\n    }\n    if (diff < 1 && diff > 0) {\n      return parseInt((diff * 100).toFixed(2), 10);\n    }\n\n    return 0;\n  }\n\n  private _updateState(nextValue: number) {\n    this.nextRate = nextValue;\n    this.contexts.forEach((context, index) => context.fill = this._getFillValue(index));\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbRating} from './rating';\n\nexport {NgbRating} from './rating';\nexport {NgbRatingConfig} from './rating-config';\n\n@NgModule({declarations: [NgbRating], exports: [NgbRating], imports: [CommonModule]})\nexport class NgbRatingModule {\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * A configuration service for the [`NgbTabset`](#/components/tabset/api#NgbTabset) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the tabsets used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbTabsetConfig {\n  justify: 'start' | 'center' | 'end' | 'fill' | 'justified' = 'start';\n  orientation: 'horizontal' | 'vertical' = 'horizontal';\n  type: 'tabs' | 'pills' = 'tabs';\n}\n","import {\n  AfterContentChecked,\n  Component,\n  ContentChildren,\n  Directive,\n  EventEmitter,\n  Input,\n  Output,\n  QueryList,\n  TemplateRef,\n  ViewEncapsulation\n} from '@angular/core';\nimport {NgbTabsetConfig} from './tabset-config';\n\nlet nextId = 0;\n\n/**\n * A directive to wrap tab titles that need to contain HTML markup or other directives.\n *\n * Alternatively you could use the `NgbTab.title` input for string titles.\n */\n@Directive({selector: 'ng-template[ngbTabTitle]'})\nexport class NgbTabTitle {\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n\n/**\n * A directive to wrap content to be displayed in a tab.\n */\n@Directive({selector: 'ng-template[ngbTabContent]'})\nexport class NgbTabContent {\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n\n/**\n * A directive representing an individual tab.\n */\n@Directive({selector: 'ngb-tab'})\nexport class NgbTab implements AfterContentChecked {\n  /**\n   * The tab identifier.\n   *\n   * Must be unique for the entire document for proper accessibility support.\n   */\n  @Input() id = `ngb-tab-${nextId++}`;\n\n  /**\n   * The tab title.\n   *\n   * Use the [`NgbTabTitle`](#/components/tabset/api#NgbTabTitle) directive for non-string titles.\n   */\n  @Input() title: string;\n\n  /**\n   * If `true`, the current tab is disabled and can't be toggled.\n   */\n  @Input() disabled = false;\n\n  titleTpl: NgbTabTitle | null;\n  contentTpl: NgbTabContent | null;\n\n  @ContentChildren(NgbTabTitle, {descendants: false}) titleTpls: QueryList<NgbTabTitle>;\n  @ContentChildren(NgbTabContent, {descendants: false}) contentTpls: QueryList<NgbTabContent>;\n\n  ngAfterContentChecked() {\n    // We are using @ContentChildren instead of @ContentChild as in the Angular version being used\n    // only @ContentChildren allows us to specify the {descendants: false} option.\n    // Without {descendants: false} we are hitting bugs described in:\n    // https://github.com/ng-bootstrap/ng-bootstrap/issues/2240\n    this.titleTpl = this.titleTpls.first;\n    this.contentTpl = this.contentTpls.first;\n  }\n}\n\n/**\n * The payload of the change event fired right before the tab change.\n */\nexport interface NgbTabChangeEvent {\n  /**\n   * The id of the currently active tab.\n   */\n  activeId: string;\n\n  /**\n   * The id of the newly selected tab.\n   */\n  nextId: string;\n\n  /**\n   * Calling this function will prevent tab switching.\n   */\n  preventDefault: () => void;\n}\n\n/**\n * A component that makes it easy to create tabbed interface.\n */\n@Component({\n  selector: 'ngb-tabset',\n  exportAs: 'ngbTabset',\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <ul [class]=\"'nav nav-' + type + (orientation == 'horizontal'?  ' ' + justifyClass : ' flex-column')\" role=\"tablist\">\n      <li class=\"nav-item\" *ngFor=\"let tab of tabs\">\n        <a [id]=\"tab.id\" class=\"nav-link\" [class.active]=\"tab.id === activeId\" [class.disabled]=\"tab.disabled\"\n          href (click)=\"select(tab.id); $event.preventDefault()\" role=\"tab\" [attr.tabindex]=\"(tab.disabled ? '-1': undefined)\"\n          [attr.aria-controls]=\"(!destroyOnHide || tab.id === activeId ? tab.id + '-panel' : null)\"\n          [attr.aria-selected]=\"tab.id === activeId\" [attr.aria-disabled]=\"tab.disabled\">\n          {{tab.title}}<ng-template [ngTemplateOutlet]=\"tab.titleTpl?.templateRef\"></ng-template>\n        </a>\n      </li>\n    </ul>\n    <div class=\"tab-content\">\n      <ng-template ngFor let-tab [ngForOf]=\"tabs\">\n        <div\n          class=\"tab-pane {{tab.id === activeId ? 'active' : null}}\"\n          *ngIf=\"!destroyOnHide || tab.id === activeId\"\n          role=\"tabpanel\"\n          [attr.aria-labelledby]=\"tab.id\" id=\"{{tab.id}}-panel\">\n          <ng-template [ngTemplateOutlet]=\"tab.contentTpl?.templateRef\"></ng-template>\n        </div>\n      </ng-template>\n    </div>\n  `\n})\nexport class NgbTabset implements AfterContentChecked {\n  justifyClass: string;\n\n  @ContentChildren(NgbTab) tabs: QueryList<NgbTab>;\n\n  /**\n   * The identifier of the tab that should be opened **initially**.\n   *\n   * For subsequent tab switches use the `.select()` method and the `(tabChange)` event.\n   */\n  @Input() activeId: string;\n\n  /**\n   * If `true`, non-visible tabs content will be removed from DOM. Otherwise it will just be hidden.\n   */\n  @Input() destroyOnHide = true;\n\n  /**\n   * The horizontal alignment of the tabs with flexbox utilities.\n   */\n  @Input()\n  set justify(className: 'start' | 'center' | 'end' | 'fill' | 'justified') {\n    if (className === 'fill' || className === 'justified') {\n      this.justifyClass = `nav-${className}`;\n    } else {\n      this.justifyClass = `justify-content-${className}`;\n    }\n  }\n\n  /**\n   * The orientation of the tabset.\n   */\n  @Input() orientation: 'horizontal' | 'vertical';\n\n  /**\n   * Type of navigation to be used for tabs.\n   *\n   * Currently Bootstrap supports only `\"tabs\"` and `\"pills\"`.\n   *\n   * Since `3.0.0` can also be an arbitrary string (ex. for custom themes).\n   */\n  @Input() type: 'tabs' | 'pills' | string;\n\n  /**\n   * A tab change event emitted right before the tab change happens.\n   *\n   * See [`NgbTabChangeEvent`](#/components/tabset/api#NgbTabChangeEvent) for payload details.\n   */\n  @Output() tabChange = new EventEmitter<NgbTabChangeEvent>();\n\n  constructor(config: NgbTabsetConfig) {\n    this.type = config.type;\n    this.justify = config.justify;\n    this.orientation = config.orientation;\n  }\n\n  /**\n   * Selects the tab with the given id and shows its associated content panel.\n   *\n   * Any other tab that was previously selected becomes unselected and its associated pane is removed from DOM or\n   * hidden depending on the `destroyOnHide` value.\n   */\n  select(tabId: string) {\n    let selectedTab = this._getTabById(tabId);\n    if (selectedTab && !selectedTab.disabled && this.activeId !== selectedTab.id) {\n      let defaultPrevented = false;\n\n      this.tabChange.emit(\n          {activeId: this.activeId, nextId: selectedTab.id, preventDefault: () => { defaultPrevented = true; }});\n\n      if (!defaultPrevented) {\n        this.activeId = selectedTab.id;\n      }\n    }\n  }\n\n  ngAfterContentChecked() {\n    // auto-correct activeId that might have been set incorrectly as input\n    let activeTab = this._getTabById(this.activeId);\n    this.activeId = activeTab ? activeTab.id : (this.tabs.length ? this.tabs.first.id : null);\n  }\n\n  private _getTabById(id: string): NgbTab {\n    let tabsWithId: NgbTab[] = this.tabs.filter(tab => tab.id === id);\n    return tabsWithId.length ? tabsWithId[0] : null;\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {NgbNavModule} from '../nav/nav.module';\n\nimport {NgbTabset, NgbTab, NgbTabContent, NgbTabTitle} from './tabset';\n\nexport {NgbTabset, NgbTab, NgbTabContent, NgbTabTitle, NgbTabChangeEvent} from './tabset';\nexport {NgbTabsetConfig} from './tabset-config';\n\nconst NGB_TABSET_DIRECTIVES = [NgbTabset, NgbTab, NgbTabContent, NgbTabTitle];\n\n@NgModule({declarations: NGB_TABSET_DIRECTIVES, exports: NGB_TABSET_DIRECTIVES, imports: [CommonModule, NgbNavModule]})\nexport class NgbTabsetModule {\n}\n","import {isNumber, toInteger} from '../util/util';\n\nexport class NgbTime {\n  hour: number;\n  minute: number;\n  second: number;\n\n  constructor(hour?: number, minute?: number, second?: number) {\n    this.hour = toInteger(hour);\n    this.minute = toInteger(minute);\n    this.second = toInteger(second);\n  }\n\n  changeHour(step = 1) { this.updateHour((isNaN(this.hour) ? 0 : this.hour) + step); }\n\n  updateHour(hour: number) {\n    if (isNumber(hour)) {\n      this.hour = (hour < 0 ? 24 + hour : hour) % 24;\n    } else {\n      this.hour = NaN;\n    }\n  }\n\n  changeMinute(step = 1) { this.updateMinute((isNaN(this.minute) ? 0 : this.minute) + step); }\n\n  updateMinute(minute: number) {\n    if (isNumber(minute)) {\n      this.minute = minute % 60 < 0 ? 60 + minute % 60 : minute % 60;\n      this.changeHour(Math.floor(minute / 60));\n    } else {\n      this.minute = NaN;\n    }\n  }\n\n  changeSecond(step = 1) { this.updateSecond((isNaN(this.second) ? 0 : this.second) + step); }\n\n  updateSecond(second: number) {\n    if (isNumber(second)) {\n      this.second = second < 0 ? 60 + second % 60 : second % 60;\n      this.changeMinute(Math.floor(second / 60));\n    } else {\n      this.second = NaN;\n    }\n  }\n\n  isValid(checkSecs = true) {\n    return isNumber(this.hour) && isNumber(this.minute) && (checkSecs ? isNumber(this.second) : true);\n  }\n\n  toString() { return `${this.hour || 0}:${this.minute || 0}:${this.second || 0}`; }\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * A configuration service for the [`NgbTimepicker`](#/components/timepicker/api#NgbTimepicker) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the timepickers used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbTimepickerConfig {\n  meridian = false;\n  spinners = true;\n  seconds = false;\n  hourStep = 1;\n  minuteStep = 1;\n  secondStep = 1;\n  disabled = false;\n  readonlyInputs = false;\n  size: 'small' | 'medium' | 'large' = 'medium';\n}\n","import {Injectable} from '@angular/core';\nimport {NgbTimeStruct} from './ngb-time-struct';\nimport {isInteger} from '../util/util';\n\nexport function NGB_DATEPICKER_TIME_ADAPTER_FACTORY() {\n  return new NgbTimeStructAdapter();\n}\n\n/**\n * An abstract service that does the conversion between the internal timepicker `NgbTimeStruct` model and\n * any provided user time model `T`, ex. a string, a native date, etc.\n *\n * The adapter is used **only** for conversion when binding timepicker to a form control,\n * ex. `[(ngModel)]=\"userTimeModel\"`. Here `userTimeModel` can be of any type.\n *\n * The default timepicker implementation assumes we use `NgbTimeStruct` as a user model.\n *\n * See the [custom time adapter demo](#/components/timepicker/examples#adapter) for an example.\n *\n * @since 2.2.0\n */\n@Injectable({providedIn: 'root', useFactory: NGB_DATEPICKER_TIME_ADAPTER_FACTORY})\nexport abstract class NgbTimeAdapter<T> {\n  /**\n   * Converts a user-model time of type `T` to an `NgbTimeStruct` for internal use.\n   */\n  abstract fromModel(value: T): NgbTimeStruct;\n\n  /**\n   * Converts an internal `NgbTimeStruct` time to a user-model time of type `T`.\n   */\n  abstract toModel(time: NgbTimeStruct): T;\n}\n\n@Injectable()\nexport class NgbTimeStructAdapter extends NgbTimeAdapter<NgbTimeStruct> {\n  /**\n   * Converts a NgbTimeStruct value into NgbTimeStruct value\n   */\n  fromModel(time: NgbTimeStruct): NgbTimeStruct {\n    return (time && isInteger(time.hour) && isInteger(time.minute)) ?\n        {hour: time.hour, minute: time.minute, second: isInteger(time.second) ? time.second : null} :\n        null;\n  }\n\n  /**\n   * Converts a NgbTimeStruct value into NgbTimeStruct value\n   */\n  toModel(time: NgbTimeStruct): NgbTimeStruct {\n    return (time && isInteger(time.hour) && isInteger(time.minute)) ?\n        {hour: time.hour, minute: time.minute, second: isInteger(time.second) ? time.second : null} :\n        null;\n  }\n}\n","import {Inject, Injectable, LOCALE_ID} from '@angular/core';\nimport {FormStyle, getLocaleDayPeriods, TranslationWidth} from '@angular/common';\n\nexport function NGB_TIMEPICKER_I18N_FACTORY(locale) {\n  return new NgbTimepickerI18nDefault(locale);\n}\n\n/**\n * Type of the service supplying day periods (for example, 'AM' and 'PM') to NgbTimepicker component.\n * The default implementation of this service honors the Angular locale, and uses the registered locale data,\n * as explained in the Angular i18n guide.\n */\n@Injectable({providedIn: 'root', useFactory: NGB_TIMEPICKER_I18N_FACTORY, deps: [LOCALE_ID]})\nexport abstract class NgbTimepickerI18n {\n  /**\n   * Returns the name for the period before midday.\n   */\n  abstract getMorningPeriod(): string;\n\n  /**\n   * Returns the name for the period after midday.\n   */\n  abstract getAfternoonPeriod(): string;\n}\n\n@Injectable()\nexport class NgbTimepickerI18nDefault extends NgbTimepickerI18n {\n  private _periods: [string, string];\n\n  constructor(@Inject(LOCALE_ID) locale: string) {\n    super();\n\n    this._periods = getLocaleDayPeriods(locale, FormStyle.Standalone, TranslationWidth.Narrow);\n  }\n\n  getMorningPeriod(): string { return this._periods[0]; }\n\n  getAfternoonPeriod(): string { return this._periods[1]; }\n}\n","import {\n  ChangeDetectorRef,\n  Component,\n  forwardRef,\n  Input,\n  OnChanges,\n  SimpleChanges,\n  ViewEncapsulation\n} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\n\nimport {isInteger, isNumber, padNumber, toInteger} from '../util/util';\nimport {NgbTime} from './ngb-time';\nimport {NgbTimepickerConfig} from './timepicker-config';\nimport {NgbTimeAdapter} from './ngb-time-adapter';\nimport {NgbTimepickerI18n} from './timepicker-i18n';\n\nconst FILTER_REGEX = /[^0-9]/g;\n\nconst NGB_TIMEPICKER_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbTimepicker),\n  multi: true\n};\n\n/**\n * A directive that helps with wth picking hours, minutes and seconds.\n */\n@Component({\n  selector: 'ngb-timepicker',\n  encapsulation: ViewEncapsulation.None,\n  styleUrls: ['./timepicker.scss'],\n  template: `\n    <fieldset [disabled]=\"disabled\" [class.disabled]=\"disabled\">\n      <div class=\"ngb-tp\">\n        <div class=\"ngb-tp-input-container ngb-tp-hour\">\n          <button *ngIf=\"spinners\" tabindex=\"-1\" type=\"button\" (click)=\"changeHour(hourStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\" [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron ngb-tp-chevron\"></span>\n            <span class=\"sr-only\" i18n=\"@@ngb.timepicker.increment-hours\">Increment hours</span>\n          </button>\n          <input type=\"text\" class=\"ngb-tp-input form-control\" [class.form-control-sm]=\"isSmallSize\"\n            [class.form-control-lg]=\"isLargeSize\"\n            maxlength=\"2\" inputmode=\"numeric\" placeholder=\"HH\" i18n-placeholder=\"@@ngb.timepicker.HH\"\n            [value]=\"formatHour(model?.hour)\" (change)=\"updateHour($event.target.value)\"\n            [readOnly]=\"readonlyInputs\" [disabled]=\"disabled\" aria-label=\"Hours\" i18n-aria-label=\"@@ngb.timepicker.hours\"\n            (input)=\"formatInput($event.target)\"\n            (keydown.ArrowUp)=\"changeHour(hourStep); $event.preventDefault()\"\n            (keydown.ArrowDown)=\"changeHour(-hourStep); $event.preventDefault()\">\n          <button *ngIf=\"spinners\" tabindex=\"-1\" type=\"button\" (click)=\"changeHour(-hourStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\" [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron ngb-tp-chevron bottom\"></span>\n            <span class=\"sr-only\" i18n=\"@@ngb.timepicker.decrement-hours\">Decrement hours</span>\n          </button>\n        </div>\n        <div class=\"ngb-tp-spacer\">:</div>\n        <div class=\"ngb-tp-input-container ngb-tp-minute\">\n          <button *ngIf=\"spinners\" tabindex=\"-1\" type=\"button\" (click)=\"changeMinute(minuteStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\" [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron ngb-tp-chevron\"></span>\n            <span class=\"sr-only\" i18n=\"@@ngb.timepicker.increment-minutes\">Increment minutes</span>\n          </button>\n          <input type=\"text\" class=\"ngb-tp-input form-control\" [class.form-control-sm]=\"isSmallSize\" [class.form-control-lg]=\"isLargeSize\"\n            maxlength=\"2\" inputmode=\"numeric\" placeholder=\"MM\" i18n-placeholder=\"@@ngb.timepicker.MM\"\n            [value]=\"formatMinSec(model?.minute)\" (change)=\"updateMinute($event.target.value)\"\n            [readOnly]=\"readonlyInputs\" [disabled]=\"disabled\" aria-label=\"Minutes\" i18n-aria-label=\"@@ngb.timepicker.minutes\"\n            (input)=\"formatInput($event.target)\"\n            (keydown.ArrowUp)=\"changeMinute(minuteStep); $event.preventDefault()\"\n            (keydown.ArrowDown)=\"changeMinute(-minuteStep); $event.preventDefault()\">\n          <button *ngIf=\"spinners\" tabindex=\"-1\" type=\"button\" (click)=\"changeMinute(-minuteStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\"  [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron ngb-tp-chevron bottom\"></span>\n            <span class=\"sr-only\"  i18n=\"@@ngb.timepicker.decrement-minutes\">Decrement minutes</span>\n          </button>\n        </div>\n        <div *ngIf=\"seconds\" class=\"ngb-tp-spacer\">:</div>\n        <div *ngIf=\"seconds\" class=\"ngb-tp-input-container ngb-tp-second\">\n          <button *ngIf=\"spinners\" tabindex=\"-1\" type=\"button\" (click)=\"changeSecond(secondStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\" [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron ngb-tp-chevron\"></span>\n            <span class=\"sr-only\" i18n=\"@@ngb.timepicker.increment-seconds\">Increment seconds</span>\n          </button>\n          <input type=\"text\" class=\"ngb-tp-input form-control\" [class.form-control-sm]=\"isSmallSize\" [class.form-control-lg]=\"isLargeSize\"\n            maxlength=\"2\" inputmode=\"numeric\" placeholder=\"SS\" i18n-placeholder=\"@@ngb.timepicker.SS\"\n            [value]=\"formatMinSec(model?.second)\" (change)=\"updateSecond($event.target.value)\"\n            [readOnly]=\"readonlyInputs\" [disabled]=\"disabled\" aria-label=\"Seconds\" i18n-aria-label=\"@@ngb.timepicker.seconds\"\n            (input)=\"formatInput($event.target)\"\n            (keydown.ArrowUp)=\"changeSecond(secondStep); $event.preventDefault()\"\n            (keydown.ArrowDown)=\"changeSecond(-secondStep); $event.preventDefault()\">\n          <button *ngIf=\"spinners\" tabindex=\"-1\" type=\"button\" (click)=\"changeSecond(-secondStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\"  [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron ngb-tp-chevron bottom\"></span>\n            <span class=\"sr-only\" i18n=\"@@ngb.timepicker.decrement-seconds\">Decrement seconds</span>\n          </button>\n        </div>\n        <div *ngIf=\"meridian\" class=\"ngb-tp-spacer\"></div>\n        <div *ngIf=\"meridian\" class=\"ngb-tp-meridian\">\n          <button type=\"button\" class=\"btn btn-outline-primary\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\"\n            [disabled]=\"disabled\" [class.disabled]=\"disabled\"\n                  (click)=\"toggleMeridian()\">\n            <ng-container *ngIf=\"model?.hour >= 12; else am\" i18n=\"@@ngb.timepicker.PM\">{{ i18n.getAfternoonPeriod() }}</ng-container>\n            <ng-template #am i18n=\"@@ngb.timepicker.AM\">{{ i18n.getMorningPeriod() }}</ng-template>\n          </button>\n        </div>\n      </div>\n    </fieldset>\n  `,\n  providers: [NGB_TIMEPICKER_VALUE_ACCESSOR]\n})\nexport class NgbTimepicker implements ControlValueAccessor,\n    OnChanges {\n  disabled: boolean;\n  model: NgbTime;\n\n  private _hourStep: number;\n  private _minuteStep: number;\n  private _secondStep: number;\n\n  /**\n   * Whether to display 12H or 24H mode.\n   */\n  @Input() meridian: boolean;\n\n  /**\n   * If `true`, the spinners above and below inputs are visible.\n   */\n  @Input() spinners: boolean;\n\n  /**\n   * If `true`, it is possible to select seconds.\n   */\n  @Input() seconds: boolean;\n\n  /**\n   * The number of hours to add/subtract when clicking hour spinners.\n   */\n  @Input()\n  set hourStep(step: number) {\n    this._hourStep = isInteger(step) ? step : this._config.hourStep;\n  }\n\n  get hourStep(): number { return this._hourStep; }\n\n  /**\n   * The number of minutes to add/subtract when clicking minute spinners.\n   */\n  @Input()\n  set minuteStep(step: number) {\n    this._minuteStep = isInteger(step) ? step : this._config.minuteStep;\n  }\n\n  get minuteStep(): number { return this._minuteStep; }\n\n  /**\n   * The number of seconds to add/subtract when clicking second spinners.\n   */\n  @Input()\n  set secondStep(step: number) {\n    this._secondStep = isInteger(step) ? step : this._config.secondStep;\n  }\n\n  get secondStep(): number { return this._secondStep; }\n\n  /**\n   * If `true`, the timepicker is readonly and can't be changed.\n   */\n  @Input() readonlyInputs: boolean;\n\n  /**\n   * The size of inputs and buttons.\n   */\n  @Input() size: 'small' | 'medium' | 'large';\n\n  constructor(\n      private readonly _config: NgbTimepickerConfig, private _ngbTimeAdapter: NgbTimeAdapter<any>,\n      private _cd: ChangeDetectorRef, public i18n: NgbTimepickerI18n) {\n    this.meridian = _config.meridian;\n    this.spinners = _config.spinners;\n    this.seconds = _config.seconds;\n    this.hourStep = _config.hourStep;\n    this.minuteStep = _config.minuteStep;\n    this.secondStep = _config.secondStep;\n    this.disabled = _config.disabled;\n    this.readonlyInputs = _config.readonlyInputs;\n    this.size = _config.size;\n  }\n\n  onChange = (_: any) => {};\n  onTouched = () => {};\n\n  writeValue(value) {\n    const structValue = this._ngbTimeAdapter.fromModel(value);\n    this.model = structValue ? new NgbTime(structValue.hour, structValue.minute, structValue.second) : new NgbTime();\n    if (!this.seconds && (!structValue || !isNumber(structValue.second))) {\n      this.model.second = 0;\n    }\n    this._cd.markForCheck();\n  }\n\n  registerOnChange(fn: (value: any) => any): void { this.onChange = fn; }\n\n  registerOnTouched(fn: () => any): void { this.onTouched = fn; }\n\n  setDisabledState(isDisabled: boolean) { this.disabled = isDisabled; }\n\n  changeHour(step: number) {\n    this.model.changeHour(step);\n    this.propagateModelChange();\n  }\n\n  changeMinute(step: number) {\n    this.model.changeMinute(step);\n    this.propagateModelChange();\n  }\n\n  changeSecond(step: number) {\n    this.model.changeSecond(step);\n    this.propagateModelChange();\n  }\n\n  updateHour(newVal: string) {\n    const isPM = this.model.hour >= 12;\n    const enteredHour = toInteger(newVal);\n    if (this.meridian && (isPM && enteredHour < 12 || !isPM && enteredHour === 12)) {\n      this.model.updateHour(enteredHour + 12);\n    } else {\n      this.model.updateHour(enteredHour);\n    }\n    this.propagateModelChange();\n  }\n\n  updateMinute(newVal: string) {\n    this.model.updateMinute(toInteger(newVal));\n    this.propagateModelChange();\n  }\n\n  updateSecond(newVal: string) {\n    this.model.updateSecond(toInteger(newVal));\n    this.propagateModelChange();\n  }\n\n  toggleMeridian() {\n    if (this.meridian) {\n      this.changeHour(12);\n    }\n  }\n\n  formatInput(input: HTMLInputElement) { input.value = input.value.replace(FILTER_REGEX, ''); }\n\n  formatHour(value: number) {\n    if (isNumber(value)) {\n      if (this.meridian) {\n        return padNumber(value % 12 === 0 ? 12 : value % 12);\n      } else {\n        return padNumber(value % 24);\n      }\n    } else {\n      return padNumber(NaN);\n    }\n  }\n\n  formatMinSec(value: number) { return padNumber(value); }\n\n  get isSmallSize(): boolean { return this.size === 'small'; }\n\n  get isLargeSize(): boolean { return this.size === 'large'; }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['seconds'] && !this.seconds && this.model && !isNumber(this.model.second)) {\n      this.model.second = 0;\n      this.propagateModelChange(false);\n    }\n  }\n\n  private propagateModelChange(touched = true) {\n    if (touched) {\n      this.onTouched();\n    }\n    if (this.model.isValid(this.seconds)) {\n      this.onChange(\n          this._ngbTimeAdapter.toModel({hour: this.model.hour, minute: this.model.minute, second: this.model.second}));\n    } else {\n      this.onChange(this._ngbTimeAdapter.toModel(null));\n    }\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbTimepicker} from './timepicker';\n\nexport {NgbTimepicker} from './timepicker';\nexport {NgbTimepickerConfig} from './timepicker-config';\nexport {NgbTimeStruct} from './ngb-time-struct';\nexport {NgbTimeAdapter} from './ngb-time-adapter';\nexport {NgbTimepickerI18n} from './timepicker-i18n';\n\n@NgModule({declarations: [NgbTimepicker], exports: [NgbTimepicker], imports: [CommonModule]})\nexport class NgbTimepickerModule {\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * Interface used to type all toast config options. See `NgbToastConfig`.\n *\n * @since 5.0.0\n */\nexport interface NgbToastOptions {\n  /**\n   * Specify if the toast component should emit the `hide()` output\n   * after a certain `delay` in ms.\n   */\n  autohide?: boolean;\n\n  /**\n   * Delay in ms after which the `hide()` output should be emitted.\n   */\n  delay?: number;\n\n  /**\n   * Type of aria-live attribute to be used.\n   *\n   * Could be one of these 2 values (as string):\n   * - `polite` (default)\n   * - `alert`\n   */\n  ariaLive?: 'polite' | 'alert';\n}\n\n/**\n * Configuration service for the NgbToast component. You can inject this service, typically in your root component,\n * and customize the values of its properties in order to provide default values for all the toasts used in the\n * application.\n *\n * @since 5.0.0\n */\n@Injectable({providedIn: 'root'})\nexport class NgbToastConfig implements NgbToastOptions {\n  autohide = true;\n  delay = 500;\n  ariaLive: 'polite' | 'alert' = 'polite';\n}\n","import {\n  AfterContentInit,\n  Attribute,\n  Component,\n  ContentChild,\n  Directive,\n  EventEmitter,\n  Input,\n  OnChanges,\n  Output,\n  SimpleChanges,\n  TemplateRef,\n  ViewEncapsulation,\n} from '@angular/core';\n\nimport {NgbToastConfig} from './toast-config';\n\n/**\n * This directive allows the usage of HTML markup or other directives\n * inside of the toast's header.\n *\n * @since 5.0.0\n */\n@Directive({selector: '[ngbToastHeader]'})\nexport class NgbToastHeader {\n}\n\n/**\n * Toasts provide feedback messages as notifications to the user.\n * Goal is to mimic the push notifications available both on mobile and desktop operating systems.\n *\n * @since 5.0.0\n */\n@Component({\n  selector: 'ngb-toast',\n  exportAs: 'ngbToast',\n  encapsulation: ViewEncapsulation.None,\n  host: {\n    'role': 'alert',\n    '[attr.aria-live]': 'ariaLive',\n    'aria-atomic': 'true',\n    '[class.toast]': 'true',\n    '[class.show]': 'true',\n  },\n  template: `\n    <ng-template #headerTpl>\n      <strong class=\"mr-auto\">{{header}}</strong>\n    </ng-template>\n    <ng-template [ngIf]=\"contentHeaderTpl || header\">\n      <div class=\"toast-header\">\n        <ng-template [ngTemplateOutlet]=\"contentHeaderTpl || headerTpl\"></ng-template>\n        <button type=\"button\" class=\"close\" aria-label=\"Close\" i18n-aria-label=\"@@ngb.toast.close-aria\" (click)=\"hide()\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n    </ng-template>\n    <div class=\"toast-body\">\n      <ng-content></ng-content>\n    </div>\n  `,\n  styleUrls: ['./toast.scss']\n})\nexport class NgbToast implements AfterContentInit,\n    OnChanges {\n  private _timeoutID;\n\n  /**\n   * Delay after which the toast will hide (ms).\n   * default: `500` (ms) (inherited from NgbToastConfig)\n   */\n  @Input() delay: number;\n\n  /**\n   * Auto hide the toast after a delay in ms.\n   * default: `true` (inherited from NgbToastConfig)\n   */\n  @Input() autohide: boolean;\n\n  /**\n   * Text to be used as toast's header.\n   * Ignored if a ContentChild template is specified at the same time.\n   */\n  @Input() header: string;\n\n  /**\n   * A template like `<ng-template ngbToastHeader></ng-template>` can be\n   * used in the projected content to allow markup usage.\n   */\n  @ContentChild(NgbToastHeader, {read: TemplateRef, static: true}) contentHeaderTpl: TemplateRef<any>| null = null;\n\n  /**\n   * An event fired immediately when toast's `hide()` method has been called.\n   * It can only occur in 2 different scenarios:\n   * - `autohide` timeout fires\n   * - user clicks on a closing cross (&times)\n   *\n   * Additionally this output is purely informative. The toast won't disappear. It's up to the user to take care of\n   * that.\n   */\n  @Output('hide') hideOutput = new EventEmitter<void>();\n\n  constructor(@Attribute('aria-live') public ariaLive: string, config: NgbToastConfig) {\n    if (this.ariaLive == null) {\n      this.ariaLive = config.ariaLive;\n    }\n    this.delay = config.delay;\n    this.autohide = config.autohide;\n  }\n\n  ngAfterContentInit() { this._init(); }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if ('autohide' in changes) {\n      this._clearTimeout();\n      this._init();\n    }\n  }\n\n  hide() {\n    this._clearTimeout();\n    this.hideOutput.emit();\n  }\n\n  private _init() {\n    if (this.autohide && !this._timeoutID) {\n      this._timeoutID = setTimeout(() => this.hide(), this.delay);\n    }\n  }\n\n  private _clearTimeout() {\n    if (this._timeoutID) {\n      clearTimeout(this._timeoutID);\n      this._timeoutID = null;\n    }\n  }\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\n\nimport {NgbToast, NgbToastHeader} from './toast';\n\nexport {NgbToast, NgbToastHeader} from './toast';\nexport {NgbToastConfig, NgbToastOptions} from './toast-config';\n\n@NgModule({declarations: [NgbToast, NgbToastHeader], imports: [CommonModule], exports: [NgbToast, NgbToastHeader]})\nexport class NgbToastModule {\n}\n","import {Injectable} from '@angular/core';\nimport {PlacementArray} from '../util/positioning';\n\n/**\n * A configuration service for the [`NgbTooltip`](#/components/tooltip/api#NgbTooltip) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the tooltips used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbTooltipConfig {\n  autoClose: boolean | 'inside' | 'outside' = true;\n  placement: PlacementArray = 'auto';\n  triggers = 'hover focus';\n  container: string;\n  disableTooltip = false;\n  tooltipClass: string;\n  openDelay = 0;\n  closeDelay = 0;\n}\n","import {\n  Component,\n  Directive,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  OnInit,\n  OnDestroy,\n  Inject,\n  Injector,\n  Renderer2,\n  ComponentRef,\n  ElementRef,\n  TemplateRef,\n  ViewContainerRef,\n  ComponentFactoryResolver,\n  NgZone,\n  ViewEncapsulation,\n  ChangeDetectorRef,\n  ApplicationRef,\n  OnChanges,\n  SimpleChanges\n} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\n\nimport {listenToTriggers} from '../util/triggers';\nimport {ngbAutoClose} from '../util/autoclose';\nimport {positionElements, PlacementArray} from '../util/positioning';\nimport {PopupService} from '../util/popup';\n\nimport {NgbTooltipConfig} from './tooltip-config';\n\nlet nextId = 0;\n\n@Component({\n  selector: 'ngb-tooltip-window',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  host: {'[class]': '\"tooltip show\" + (tooltipClass ? \" \" + tooltipClass : \"\")', 'role': 'tooltip', '[id]': 'id'},\n  template: `<div class=\"arrow\"></div><div class=\"tooltip-inner\"><ng-content></ng-content></div>`,\n  styleUrls: ['./tooltip.scss']\n})\nexport class NgbTooltipWindow {\n  @Input() id: string;\n  @Input() tooltipClass: string;\n}\n\n/**\n * A lightweight and extensible directive for fancy tooltip creation.\n */\n@Directive({selector: '[ngbTooltip]', exportAs: 'ngbTooltip'})\nexport class NgbTooltip implements OnInit, OnDestroy, OnChanges {\n  /**\n   * Indicates whether the tooltip should be closed on `Escape` key and inside/outside clicks:\n   *\n   * * `true` - closes on both outside and inside clicks as well as `Escape` presses\n   * * `false` - disables the autoClose feature (NB: triggers still apply)\n   * * `\"inside\"` - closes on inside clicks as well as Escape presses\n   * * `\"outside\"` - closes on outside clicks (sometimes also achievable through triggers)\n   * as well as `Escape` presses\n   *\n   * @since 3.0.0\n   */\n  @Input() autoClose: boolean | 'inside' | 'outside';\n\n  /**\n   * The preferred placement of the tooltip.\n   *\n   * Possible values are `\"top\"`, `\"top-left\"`, `\"top-right\"`, `\"bottom\"`, `\"bottom-left\"`,\n   * `\"bottom-right\"`, `\"left\"`, `\"left-top\"`, `\"left-bottom\"`, `\"right\"`, `\"right-top\"`,\n   * `\"right-bottom\"`\n   *\n   * Accepts an array of strings or a string with space separated possible values.\n   *\n   * The default order of preference is `\"auto\"` (same as the sequence above).\n   *\n   * Please see the [positioning overview](#/positioning) for more details.\n   */\n  @Input() placement: PlacementArray;\n\n  /**\n   * Specifies events that should trigger the tooltip.\n   *\n   * Supports a space separated list of event names.\n   * For more details see the [triggers demo](#/components/tooltip/examples#triggers).\n   */\n  @Input() triggers: string;\n\n  /**\n   * A selector specifying the element the tooltip should be appended to.\n   *\n   * Currently only supports `\"body\"`.\n   */\n  @Input() container: string;\n\n  /**\n   * If `true`, tooltip is disabled and won't be displayed.\n   *\n   * @since 1.1.0\n   */\n  @Input() disableTooltip: boolean;\n\n  /**\n   * An optional class applied to the tooltip window element.\n   *\n   * @since 3.2.0\n   */\n  @Input() tooltipClass: string;\n\n  /**\n   * The opening delay in ms. Works only for \"non-manual\" opening triggers defined by the `triggers` input.\n   *\n   * @since 4.1.0\n   */\n  @Input() openDelay: number;\n\n  /**\n   * The closing delay in ms. Works only for \"non-manual\" opening triggers defined by the `triggers` input.\n   *\n   * @since 4.1.0\n   */\n  @Input() closeDelay: number;\n\n  /**\n   * An event emitted when the tooltip is shown. Contains no payload.\n   */\n  @Output() shown = new EventEmitter();\n  /**\n   * An event emitted when the popover is hidden. Contains no payload.\n   */\n  @Output() hidden = new EventEmitter();\n\n  private _ngbTooltip: string | TemplateRef<any>;\n  private _ngbTooltipWindowId = `ngb-tooltip-${nextId++}`;\n  private _popupService: PopupService<NgbTooltipWindow>;\n  private _windowRef: ComponentRef<NgbTooltipWindow>;\n  private _unregisterListenersFn;\n  private _zoneSubscription: any;\n\n  constructor(\n      private _elementRef: ElementRef<HTMLElement>, private _renderer: Renderer2, injector: Injector,\n      componentFactoryResolver: ComponentFactoryResolver, viewContainerRef: ViewContainerRef, config: NgbTooltipConfig,\n      private _ngZone: NgZone, @Inject(DOCUMENT) private _document: any, private _changeDetector: ChangeDetectorRef,\n      applicationRef: ApplicationRef) {\n    this.autoClose = config.autoClose;\n    this.placement = config.placement;\n    this.triggers = config.triggers;\n    this.container = config.container;\n    this.disableTooltip = config.disableTooltip;\n    this.tooltipClass = config.tooltipClass;\n    this.openDelay = config.openDelay;\n    this.closeDelay = config.closeDelay;\n    this._popupService = new PopupService<NgbTooltipWindow>(\n        NgbTooltipWindow, injector, viewContainerRef, _renderer, componentFactoryResolver, applicationRef);\n\n    this._zoneSubscription = _ngZone.onStable.subscribe(() => {\n      if (this._windowRef) {\n        positionElements(\n            this._elementRef.nativeElement, this._windowRef.location.nativeElement, this.placement,\n            this.container === 'body', 'bs-tooltip');\n      }\n    });\n  }\n\n  /**\n   * The string content or a `TemplateRef` for the content to be displayed in the tooltip.\n   *\n   * If the content if falsy, the tooltip won't open.\n   */\n  @Input()\n  set ngbTooltip(value: string | TemplateRef<any>) {\n    this._ngbTooltip = value;\n    if (!value && this._windowRef) {\n      this.close();\n    }\n  }\n\n  get ngbTooltip() { return this._ngbTooltip; }\n\n  /**\n   * Opens the tooltip.\n   *\n   * This is considered to be a \"manual\" triggering.\n   * The `context` is an optional value to be injected into the tooltip template when it is created.\n   */\n  open(context?: any) {\n    if (!this._windowRef && this._ngbTooltip && !this.disableTooltip) {\n      this._windowRef = this._popupService.open(this._ngbTooltip, context);\n      this._windowRef.instance.tooltipClass = this.tooltipClass;\n      this._windowRef.instance.id = this._ngbTooltipWindowId;\n\n      this._renderer.setAttribute(this._elementRef.nativeElement, 'aria-describedby', this._ngbTooltipWindowId);\n\n      if (this.container === 'body') {\n        this._document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement);\n      }\n\n      // We need to detect changes, because we don't know where .open() might be called from.\n      // Ex. opening tooltip from one of lifecycle hooks that run after the CD\n      // (say from ngAfterViewInit) will result in 'ExpressionHasChanged' exception\n      this._windowRef.changeDetectorRef.detectChanges();\n\n      // We need to mark for check, because tooltip won't work inside the OnPush component.\n      // Ex. when we use expression like `{{ tooltip.isOpen() : 'opened' : 'closed' }}`\n      // inside the template of an OnPush component and we change the tooltip from\n      // open -> closed, the expression in question won't be updated unless we explicitly\n      // mark the parent component to be checked.\n      this._windowRef.changeDetectorRef.markForCheck();\n\n      ngbAutoClose(\n          this._ngZone, this._document, this.autoClose, () => this.close(), this.hidden,\n          [this._windowRef.location.nativeElement]);\n\n      this.shown.emit();\n    }\n  }\n\n  /**\n   * Closes the tooltip.\n   *\n   * This is considered to be a \"manual\" triggering of the tooltip.\n   */\n  close(): void {\n    if (this._windowRef != null) {\n      this._renderer.removeAttribute(this._elementRef.nativeElement, 'aria-describedby');\n      this._popupService.close();\n      this._windowRef = null;\n      this.hidden.emit();\n      this._changeDetector.markForCheck();\n    }\n  }\n\n  /**\n   * Toggles the tooltip.\n   *\n   * This is considered to be a \"manual\" triggering of the tooltip.\n   */\n  toggle(): void {\n    if (this._windowRef) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  /**\n   * Returns `true`, if the popover is currently shown.\n   */\n  isOpen(): boolean { return this._windowRef != null; }\n\n  ngOnInit() {\n    this._unregisterListenersFn = listenToTriggers(\n        this._renderer, this._elementRef.nativeElement, this.triggers, this.isOpen.bind(this), this.open.bind(this),\n        this.close.bind(this), +this.openDelay, +this.closeDelay);\n  }\n\n  ngOnChanges({tooltipClass}: SimpleChanges) {\n    if (tooltipClass && this.isOpen()) {\n      this._windowRef.instance.tooltipClass = tooltipClass.currentValue;\n    }\n  }\n\n  ngOnDestroy() {\n    this.close();\n    // This check is needed as it might happen that ngOnDestroy is called before ngOnInit\n    // under certain conditions, see: https://github.com/ng-bootstrap/ng-bootstrap/issues/2199\n    if (this._unregisterListenersFn) {\n      this._unregisterListenersFn();\n    }\n    this._zoneSubscription.unsubscribe();\n  }\n}\n","import {NgModule} from '@angular/core';\n\nimport {NgbTooltip, NgbTooltipWindow} from './tooltip';\n\nexport {NgbTooltipConfig} from './tooltip-config';\nexport {NgbTooltip} from './tooltip';\nexport {Placement} from '../util/positioning';\n\n@NgModule({declarations: [NgbTooltip, NgbTooltipWindow], exports: [NgbTooltip], entryComponents: [NgbTooltipWindow]})\nexport class NgbTooltipModule {\n}\n","import {Component, Input, OnChanges, ChangeDetectionStrategy, SimpleChanges, ViewEncapsulation} from '@angular/core';\nimport {regExpEscape, toString} from '../util/util';\n\n/**\n * A component that helps with text highlighting.\n *\n * If splits the `result` text into parts that contain the searched `term` and generates the HTML markup to simplify\n * highlighting:\n *\n * Ex. `result=\"Alaska\"` and `term=\"as\"` will produce `Al<span class=\"ngb-highlight\">as</span>ka`.\n */\n@Component({\n  selector: 'ngb-highlight',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  template: `<ng-template ngFor [ngForOf]=\"parts\" let-part let-isOdd=\"odd\">` +\n      `<span *ngIf=\"isOdd; else even\" [class]=\"highlightClass\">{{part}}</span><ng-template #even>{{part}}</ng-template>` +\n      `</ng-template>`,  // template needs to be formatted in a certain way so we don't add empty text nodes\n  styleUrls: ['./highlight.scss']\n})\nexport class NgbHighlight implements OnChanges {\n  parts: string[];\n\n  /**\n   * The CSS class for `<span>` elements wrapping the `term` inside the `result`.\n   */\n  @Input() highlightClass = 'ngb-highlight';\n\n  /**\n   * The text highlighting is added to.\n   *\n   * If the `term` is found inside this text, it will be highlighted.\n   * If the `term` contains array then all the items from it will be highlighted inside the text.\n   */\n  @Input() result: string;\n\n  /**\n   * The term or array of terms to be highlighted.\n   * Since version `v4.2.0` term could be a `string[]`\n   */\n  @Input() term: string | readonly string[];\n\n  ngOnChanges(changes: SimpleChanges) {\n    const result = toString(this.result);\n\n    const terms = Array.isArray(this.term) ? this.term : [this.term];\n    const escapedTerms = terms.map(term => regExpEscape(toString(term))).filter(term => term);\n\n    this.parts = escapedTerms.length ? result.split(new RegExp(`(${escapedTerms.join('|')})`, 'gmi')) : [result];\n  }\n}\n","import {Component, EventEmitter, Input, OnInit, Output, TemplateRef, ViewEncapsulation} from '@angular/core';\n\nimport {toString} from '../util/util';\n\n/**\n * The context for the typeahead result template in case you want to override the default one.\n */\nexport interface ResultTemplateContext {\n  /**\n   * Your typeahead result item.\n   */\n  result: any;\n\n  /**\n   * Search term from the `<input>` used to get current result.\n   */\n  term: string;\n}\n\n@Component({\n  selector: 'ngb-typeahead-window',\n  exportAs: 'ngbTypeaheadWindow',\n  encapsulation: ViewEncapsulation.None,\n  host: {'(mousedown)': '$event.preventDefault()', 'class': 'dropdown-menu show', 'role': 'listbox', '[id]': 'id'},\n  template: `\n    <ng-template #rt let-result=\"result\" let-term=\"term\" let-formatter=\"formatter\">\n      <ngb-highlight [result]=\"formatter(result)\" [term]=\"term\"></ngb-highlight>\n    </ng-template>\n    <ng-template ngFor [ngForOf]=\"results\" let-result let-idx=\"index\">\n      <button type=\"button\" class=\"dropdown-item\" role=\"option\"\n        [id]=\"id + '-' + idx\"\n        [class.active]=\"idx === activeIdx\"\n        (mouseenter)=\"markActive(idx)\"\n        (click)=\"select(result)\">\n          <ng-template [ngTemplateOutlet]=\"resultTemplate || rt\"\n          [ngTemplateOutletContext]=\"{result: result, term: term, formatter: formatter}\"></ng-template>\n      </button>\n    </ng-template>\n  `\n})\nexport class NgbTypeaheadWindow implements OnInit {\n  activeIdx = 0;\n\n  /**\n   *  The id for the typeahead window. The id should be unique and the same\n   *  as the associated typeahead's id.\n   */\n  @Input() id: string;\n\n  /**\n   * Flag indicating if the first row should be active initially\n   */\n  @Input() focusFirst = true;\n\n  /**\n   * Typeahead match results to be displayed\n   */\n  @Input() results;\n\n  /**\n   * Search term used to get current results\n   */\n  @Input() term: string;\n\n  /**\n   * A function used to format a given result before display. This function should return a formatted string without any\n   * HTML markup\n   */\n  @Input() formatter = toString;\n\n  /**\n   * A template to override a matching result default display\n   */\n  @Input() resultTemplate: TemplateRef<ResultTemplateContext>;\n\n  /**\n   * Event raised when user selects a particular result row\n   */\n  @Output('select') selectEvent = new EventEmitter();\n\n  @Output('activeChange') activeChangeEvent = new EventEmitter();\n\n  hasActive() { return this.activeIdx > -1 && this.activeIdx < this.results.length; }\n\n  getActive() { return this.results[this.activeIdx]; }\n\n  markActive(activeIdx: number) {\n    this.activeIdx = activeIdx;\n    this._activeChanged();\n  }\n\n  next() {\n    if (this.activeIdx === this.results.length - 1) {\n      this.activeIdx = this.focusFirst ? (this.activeIdx + 1) % this.results.length : -1;\n    } else {\n      this.activeIdx++;\n    }\n    this._activeChanged();\n  }\n\n  prev() {\n    if (this.activeIdx < 0) {\n      this.activeIdx = this.results.length - 1;\n    } else if (this.activeIdx === 0) {\n      this.activeIdx = this.focusFirst ? this.results.length - 1 : -1;\n    } else {\n      this.activeIdx--;\n    }\n    this._activeChanged();\n  }\n\n  resetActive() {\n    this.activeIdx = this.focusFirst ? 0 : -1;\n    this._activeChanged();\n  }\n\n  select(item) { this.selectEvent.emit(item); }\n\n  ngOnInit() { this.resetActive(); }\n\n  private _activeChanged() {\n    this.activeChangeEvent.emit(this.activeIdx >= 0 ? this.id + '-' + this.activeIdx : undefined);\n  }\n}\n","import {Injectable, Inject, InjectionToken, OnDestroy} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\n\n\n\n// usefulness (and default value) of delay documented in Material's CDK\n// https://github.com/angular/material2/blob/6405da9b8e8532a7e5c854c920ee1815c275d734/src/cdk/a11y/live-announcer/live-announcer.ts#L50\nexport type ARIA_LIVE_DELAY_TYPE = number | null;\nexport const ARIA_LIVE_DELAY = new InjectionToken<ARIA_LIVE_DELAY_TYPE>(\n    'live announcer delay', {providedIn: 'root', factory: ARIA_LIVE_DELAY_FACTORY});\nexport function ARIA_LIVE_DELAY_FACTORY(): number {\n  return 100;\n}\n\n\nfunction getLiveElement(document: any, lazyCreate = false): HTMLElement | null {\n  let element = document.body.querySelector('#ngb-live') as HTMLElement;\n\n  if (element == null && lazyCreate) {\n    element = document.createElement('div');\n\n    element.setAttribute('id', 'ngb-live');\n    element.setAttribute('aria-live', 'polite');\n    element.setAttribute('aria-atomic', 'true');\n\n    element.classList.add('sr-only');\n\n    document.body.appendChild(element);\n  }\n\n  return element;\n}\n\n\n\n@Injectable({providedIn: 'root'})\nexport class Live implements OnDestroy {\n  constructor(@Inject(DOCUMENT) private _document: any, @Inject(ARIA_LIVE_DELAY) private _delay: any) {}\n\n  ngOnDestroy() {\n    const element = getLiveElement(this._document);\n    if (element) {\n      element.parentElement.removeChild(element);\n    }\n  }\n\n  say(message: string) {\n    const element = getLiveElement(this._document, true);\n    const delay = this._delay;\n\n    element.textContent = '';\n    const setText = () => element.textContent = message;\n    if (delay === null) {\n      setText();\n    } else {\n      setTimeout(setText, delay);\n    }\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {PlacementArray} from '../util/positioning';\n\n/**\n * A configuration service for the [`NgbTypeahead`](#/components/typeahead/api#NgbTypeahead) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the typeaheads used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbTypeaheadConfig {\n  container;\n  editable = true;\n  focusFirst = true;\n  showHint = false;\n  placement: PlacementArray = ['bottom-left', 'bottom-right', 'top-left', 'top-right'];\n}\n","import {\n  ChangeDetectorRef,\n  ComponentFactoryResolver,\n  ComponentRef,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  Injector,\n  Input,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Output,\n  Renderer2,\n  TemplateRef,\n  ViewContainerRef,\n  ApplicationRef\n} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {DOCUMENT} from '@angular/common';\nimport {BehaviorSubject, fromEvent, Observable, Subject, Subscription} from 'rxjs';\nimport {map, switchMap, tap} from 'rxjs/operators';\n\nimport {Live} from '../util/accessibility/live';\nimport {ngbAutoClose} from '../util/autoclose';\nimport {Key} from '../util/key';\nimport {PopupService} from '../util/popup';\nimport {PlacementArray, positionElements} from '../util/positioning';\nimport {isDefined, toString} from '../util/util';\n\nimport {NgbTypeaheadConfig} from './typeahead-config';\nimport {NgbTypeaheadWindow, ResultTemplateContext} from './typeahead-window';\n\n\nconst NGB_TYPEAHEAD_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbTypeahead),\n  multi: true\n};\n\n/**\n * An event emitted right before an item is selected from the result list.\n */\nexport interface NgbTypeaheadSelectItemEvent {\n  /**\n   * The item from the result list about to be selected.\n   */\n  item: any;\n\n  /**\n   * Calling this function will prevent item selection from happening.\n   */\n  preventDefault: () => void;\n}\n\nlet nextWindowId = 0;\n\n/**\n * A directive providing a simple way of creating powerful typeaheads from any text input.\n */\n@Directive({\n  selector: 'input[ngbTypeahead]',\n  exportAs: 'ngbTypeahead',\n  host: {\n    '(blur)': 'handleBlur()',\n    '[class.open]': 'isPopupOpen()',\n    '(keydown)': 'handleKeyDown($event)',\n    '[autocomplete]': 'autocomplete',\n    'autocapitalize': 'off',\n    'autocorrect': 'off',\n    'role': 'combobox',\n    'aria-multiline': 'false',\n    '[attr.aria-autocomplete]': 'showHint ? \"both\" : \"list\"',\n    '[attr.aria-activedescendant]': 'activeDescendant',\n    '[attr.aria-owns]': 'isPopupOpen() ? popupId : null',\n    '[attr.aria-expanded]': 'isPopupOpen()'\n  },\n  providers: [NGB_TYPEAHEAD_VALUE_ACCESSOR]\n})\nexport class NgbTypeahead implements ControlValueAccessor,\n    OnInit, OnDestroy {\n  private _popupService: PopupService<NgbTypeaheadWindow>;\n  private _subscription: Subscription;\n  private _closed$ = new Subject();\n  private _inputValueBackup: string;\n  private _valueChanges: Observable<string>;\n  private _resubscribeTypeahead: BehaviorSubject<any>;\n  private _windowRef: ComponentRef<NgbTypeaheadWindow>;\n  private _zoneSubscription: any;\n\n  /**\n   * The value for the `autocomplete` attribute for the `<input>` element.\n   *\n   * Defaults to `\"off\"` to disable the native browser autocomplete, but you can override it if necessary.\n   *\n   * @since 2.1.0\n   */\n  @Input() autocomplete = 'off';\n\n  /**\n   * A selector specifying the element the typeahead popup will be appended to.\n   *\n   * Currently only supports `\"body\"`.\n   */\n  @Input() container: string;\n\n  /**\n   * If `true`, model values will not be restricted only to items selected from the popup.\n   */\n  @Input() editable: boolean;\n\n  /**\n   * If `true`, the first item in the result list will always stay focused while typing.\n   */\n  @Input() focusFirst: boolean;\n\n  /**\n   * The function that converts an item from the result list to a `string` to display in the `<input>` field.\n   *\n   * It is called when the user selects something in the popup or the model value changes, so the input needs to\n   * be updated.\n   */\n  @Input() inputFormatter: (item: any) => string;\n\n  /**\n   * The function that converts a stream of text values from the `<input>` element to the stream of the array of items\n   * to display in the typeahead popup.\n   *\n   * If the resulting observable emits a non-empty array - the popup will be shown. If it emits an empty array - the\n   * popup will be closed.\n   *\n   * See the [basic example](#/components/typeahead/examples#basic) for more details.\n   *\n   * Note that the `this` argument is `undefined` so you need to explicitly bind it to a desired \"this\" target.\n   */\n  @Input() ngbTypeahead: (text: Observable<string>) => Observable<readonly any[]>;\n\n  /**\n   * The function that converts an item from the result list to a `string` to display in the popup.\n   *\n   * Must be provided, if your `ngbTypeahead` returns something other than `Observable<string[]>`.\n   *\n   * Alternatively for more complex markup in the popup you should use `resultTemplate`.\n   */\n  @Input() resultFormatter: (item: any) => string;\n\n  /**\n   * The template to override the way resulting items are displayed in the popup.\n   *\n   * See the [ResultTemplateContext](#/components/typeahead/api#ResultTemplateContext) for the template context.\n   *\n   * Also see the [template for results demo](#/components/typeahead/examples#template) for more details.\n   */\n  @Input() resultTemplate: TemplateRef<ResultTemplateContext>;\n\n  /**\n   * If `true`, will show the hint in the `<input>` when an item in the result list matches.\n   */\n  @Input() showHint: boolean;\n\n  /**\n   * The preferred placement of the typeahead.\n   *\n   * Possible values are `\"top\"`, `\"top-left\"`, `\"top-right\"`, `\"bottom\"`, `\"bottom-left\"`,\n   * `\"bottom-right\"`, `\"left\"`, `\"left-top\"`, `\"left-bottom\"`, `\"right\"`, `\"right-top\"`,\n   * `\"right-bottom\"`\n   *\n   * Accepts an array of strings or a string with space separated possible values.\n   *\n   * The default order of preference is `\"bottom-left bottom-right top-left top-right\"`\n   *\n   * Please see the [positioning overview](#/positioning) for more details.\n   */\n  @Input() placement: PlacementArray = 'bottom-left';\n\n  /**\n   * An event emitted right before an item is selected from the result list.\n   *\n   * Event payload is of type [`NgbTypeaheadSelectItemEvent`](#/components/typeahead/api#NgbTypeaheadSelectItemEvent).\n   */\n  @Output() selectItem = new EventEmitter<NgbTypeaheadSelectItemEvent>();\n\n  activeDescendant: string;\n  popupId = `ngb-typeahead-${nextWindowId++}`;\n\n  private _onTouched = () => {};\n  private _onChange = (_: any) => {};\n\n  constructor(\n      private _elementRef: ElementRef<HTMLInputElement>, viewContainerRef: ViewContainerRef,\n      private _renderer: Renderer2, injector: Injector, componentFactoryResolver: ComponentFactoryResolver,\n      config: NgbTypeaheadConfig, ngZone: NgZone, private _live: Live, @Inject(DOCUMENT) private _document: any,\n      private _ngZone: NgZone, private _changeDetector: ChangeDetectorRef, applicationRef: ApplicationRef) {\n    this.container = config.container;\n    this.editable = config.editable;\n    this.focusFirst = config.focusFirst;\n    this.showHint = config.showHint;\n    this.placement = config.placement;\n\n    this._valueChanges = fromEvent<Event>(_elementRef.nativeElement, 'input')\n                             .pipe(map($event => ($event.target as HTMLInputElement).value));\n\n    this._resubscribeTypeahead = new BehaviorSubject(null);\n\n    this._popupService = new PopupService<NgbTypeaheadWindow>(\n        NgbTypeaheadWindow, injector, viewContainerRef, _renderer, componentFactoryResolver, applicationRef);\n\n    this._zoneSubscription = ngZone.onStable.subscribe(() => {\n      if (this.isPopupOpen()) {\n        positionElements(\n            this._elementRef.nativeElement, this._windowRef.location.nativeElement, this.placement,\n            this.container === 'body');\n      }\n    });\n  }\n\n  ngOnInit(): void {\n    const inputValues$ = this._valueChanges.pipe(tap(value => {\n      this._inputValueBackup = this.showHint ? value : null;\n      this._onChange(this.editable ? value : undefined);\n    }));\n    const results$ = inputValues$.pipe(this.ngbTypeahead);\n    const userInput$ = this._resubscribeTypeahead.pipe(switchMap(() => results$));\n    this._subscription = this._subscribeToUserInput(userInput$);\n  }\n\n  ngOnDestroy(): void {\n    this._closePopup();\n    this._unsubscribeFromUserInput();\n    this._zoneSubscription.unsubscribe();\n  }\n\n  registerOnChange(fn: (value: any) => any): void { this._onChange = fn; }\n\n  registerOnTouched(fn: () => any): void { this._onTouched = fn; }\n\n  writeValue(value) {\n    this._writeInputValue(this._formatItemForInput(value));\n    if (this.showHint) {\n      this._inputValueBackup = value;\n    }\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n  }\n\n  /**\n   * Dismisses typeahead popup window\n   */\n  dismissPopup() {\n    if (this.isPopupOpen()) {\n      this._resubscribeTypeahead.next(null);\n      this._closePopup();\n      if (this.showHint && this._inputValueBackup !== null) {\n        this._writeInputValue(this._inputValueBackup);\n      }\n      this._changeDetector.markForCheck();\n    }\n  }\n\n  /**\n   * Returns true if the typeahead popup window is displayed\n   */\n  isPopupOpen() { return this._windowRef != null; }\n\n  handleBlur() {\n    this._resubscribeTypeahead.next(null);\n    this._onTouched();\n  }\n\n  handleKeyDown(event: KeyboardEvent) {\n    if (!this.isPopupOpen()) {\n      return;\n    }\n\n    // tslint:disable-next-line:deprecation\n    switch (event.which) {\n      case Key.ArrowDown:\n        event.preventDefault();\n        this._windowRef.instance.next();\n        this._showHint();\n        break;\n      case Key.ArrowUp:\n        event.preventDefault();\n        this._windowRef.instance.prev();\n        this._showHint();\n        break;\n      case Key.Enter:\n      case Key.Tab:\n        const result = this._windowRef.instance.getActive();\n        if (isDefined(result)) {\n          event.preventDefault();\n          event.stopPropagation();\n          this._selectResult(result);\n        }\n        this._closePopup();\n        break;\n    }\n  }\n\n  private _openPopup() {\n    if (!this.isPopupOpen()) {\n      this._inputValueBackup = this._elementRef.nativeElement.value;\n      this._windowRef = this._popupService.open();\n      this._windowRef.instance.id = this.popupId;\n      this._windowRef.instance.selectEvent.subscribe((result: any) => this._selectResultClosePopup(result));\n      this._windowRef.instance.activeChangeEvent.subscribe((activeId: string) => this.activeDescendant = activeId);\n\n      if (this.container === 'body') {\n        window.document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement);\n      }\n\n      this._changeDetector.markForCheck();\n\n      ngbAutoClose(\n          this._ngZone, this._document, 'outside', () => this.dismissPopup(), this._closed$,\n          [this._elementRef.nativeElement, this._windowRef.location.nativeElement]);\n    }\n  }\n\n  private _closePopup() {\n    this._closed$.next();\n    this._popupService.close();\n    this._windowRef = null;\n    this.activeDescendant = undefined;\n  }\n\n  private _selectResult(result: any) {\n    let defaultPrevented = false;\n    this.selectItem.emit({item: result, preventDefault: () => { defaultPrevented = true; }});\n    this._resubscribeTypeahead.next(null);\n\n    if (!defaultPrevented) {\n      this.writeValue(result);\n      this._onChange(result);\n    }\n  }\n\n  private _selectResultClosePopup(result: any) {\n    this._selectResult(result);\n    this._closePopup();\n  }\n\n  private _showHint() {\n    if (this.showHint && this._windowRef.instance.hasActive() && this._inputValueBackup != null) {\n      const userInputLowerCase = this._inputValueBackup.toLowerCase();\n      const formattedVal = this._formatItemForInput(this._windowRef.instance.getActive());\n\n      if (userInputLowerCase === formattedVal.substr(0, this._inputValueBackup.length).toLowerCase()) {\n        this._writeInputValue(this._inputValueBackup + formattedVal.substr(this._inputValueBackup.length));\n        this._elementRef.nativeElement['setSelectionRange'].apply(\n            this._elementRef.nativeElement, [this._inputValueBackup.length, formattedVal.length]);\n      } else {\n        this._writeInputValue(formattedVal);\n      }\n    }\n  }\n\n  private _formatItemForInput(item: any): string {\n    return item != null && this.inputFormatter ? this.inputFormatter(item) : toString(item);\n  }\n\n  private _writeInputValue(value: string): void {\n    this._renderer.setProperty(this._elementRef.nativeElement, 'value', toString(value));\n  }\n\n  private _subscribeToUserInput(userInput$: Observable<readonly any[]>): Subscription {\n    return userInput$.subscribe((results) => {\n      if (!results || results.length === 0) {\n        this._closePopup();\n      } else {\n        this._openPopup();\n        this._windowRef.instance.focusFirst = this.focusFirst;\n        this._windowRef.instance.results = results;\n        this._windowRef.instance.term = this._elementRef.nativeElement.value;\n        if (this.resultFormatter) {\n          this._windowRef.instance.formatter = this.resultFormatter;\n        }\n        if (this.resultTemplate) {\n          this._windowRef.instance.resultTemplate = this.resultTemplate;\n        }\n        this._windowRef.instance.resetActive();\n\n        // The observable stream we are subscribing to might have async steps\n        // and if a component containing typeahead is using the OnPush strategy\n        // the change detection turn wouldn't be invoked automatically.\n        this._windowRef.changeDetectorRef.detectChanges();\n\n        this._showHint();\n      }\n\n      // live announcer\n      const count = results ? results.length : 0;\n      this._live.say(count === 0 ? 'No results available' : `${count} result${count === 1 ? '' : 's'} available`);\n    });\n  }\n\n  private _unsubscribeFromUserInput() {\n    if (this._subscription) {\n      this._subscription.unsubscribe();\n    }\n    this._subscription = null;\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbHighlight} from './highlight';\nimport {NgbTypeaheadWindow} from './typeahead-window';\nimport {NgbTypeahead} from './typeahead';\n\nexport {NgbHighlight} from './highlight';\nexport {NgbTypeaheadWindow} from './typeahead-window';\nexport {NgbTypeaheadConfig} from './typeahead-config';\nexport {NgbTypeahead, NgbTypeaheadSelectItemEvent} from './typeahead';\n\n@NgModule({\n  declarations: [NgbTypeahead, NgbHighlight, NgbTypeaheadWindow],\n  exports: [NgbTypeahead, NgbHighlight],\n  imports: [CommonModule],\n  entryComponents: [NgbTypeaheadWindow]\n})\nexport class NgbTypeaheadModule {\n}\n","import {NgModule} from '@angular/core';\n\nimport {NgbAccordionModule} from './accordion/accordion.module';\nimport {NgbAlertModule} from './alert/alert.module';\nimport {NgbButtonsModule} from './buttons/buttons.module';\nimport {NgbCarouselModule} from './carousel/carousel.module';\nimport {NgbCollapseModule} from './collapse/collapse.module';\nimport {NgbDatepickerModule} from './datepicker/datepicker.module';\nimport {NgbDropdownModule} from './dropdown/dropdown.module';\nimport {NgbModalModule} from './modal/modal.module';\nimport {NgbNavModule} from './nav/nav.module';\nimport {NgbPaginationModule} from './pagination/pagination.module';\nimport {NgbPopoverModule} from './popover/popover.module';\nimport {NgbProgressbarModule} from './progressbar/progressbar.module';\nimport {NgbRatingModule} from './rating/rating.module';\nimport {NgbTabsetModule} from './tabset/tabset.module';\nimport {NgbTimepickerModule} from './timepicker/timepicker.module';\nimport {NgbToastModule} from './toast/toast.module';\nimport {NgbTooltipModule} from './tooltip/tooltip.module';\nimport {NgbTypeaheadModule} from './typeahead/typeahead.module';\n\n\n\nexport {\n  NgbAccordion,\n  NgbAccordionConfig,\n  NgbAccordionModule,\n  NgbPanel,\n  NgbPanelChangeEvent,\n  NgbPanelContent,\n  NgbPanelHeader,\n  NgbPanelHeaderContext,\n  NgbPanelTitle,\n  NgbPanelToggle\n} from './accordion/accordion.module';\nexport {NgbAlert, NgbAlertConfig, NgbAlertModule} from './alert/alert.module';\nexport {NgbButtonLabel, NgbButtonsModule, NgbCheckBox, NgbRadio, NgbRadioGroup} from './buttons/buttons.module';\nexport {\n  NgbCarousel,\n  NgbCarouselConfig,\n  NgbCarouselModule,\n  NgbSlide,\n  NgbSlideEvent,\n  NgbSlideEventDirection,\n  NgbSlideEventSource\n} from './carousel/carousel.module';\nexport {NgbCollapse, NgbCollapseModule} from './collapse/collapse.module';\nexport {\n  NgbCalendar,\n  NgbCalendarGregorian,\n  NgbCalendarHebrew,\n  NgbCalendarIslamicCivil,\n  NgbCalendarIslamicUmalqura,\n  NgbCalendarPersian,\n  NgbDate,\n  NgbDateAdapter,\n  NgbDateNativeAdapter,\n  NgbDateNativeUTCAdapter,\n  NgbDateParserFormatter,\n  NgbDatepicker,\n  NgbDatepickerConfig,\n  NgbInputDatepickerConfig,\n  NgbDatepickerI18n,\n  NgbDatepickerI18nHebrew,\n  NgbDatepickerKeyboardService,\n  NgbDatepickerModule,\n  NgbDatepickerNavigateEvent,\n  NgbDatepickerState,\n  NgbDateStruct,\n  NgbInputDatepicker,\n  NgbPeriod\n} from './datepicker/datepicker.module';\nexport {\n  NgbDropdown,\n  NgbDropdownAnchor,\n  NgbDropdownConfig,\n  NgbDropdownItem,\n  NgbDropdownMenu,\n  NgbDropdownModule,\n  NgbDropdownToggle,\n  NgbNavbar\n} from './dropdown/dropdown.module';\nexport {\n  ModalDismissReasons,\n  NgbActiveModal,\n  NgbModal,\n  NgbModalConfig,\n  NgbModalModule,\n  NgbModalOptions,\n  NgbModalRef\n} from './modal/modal.module';\nexport {\n  NgbNavChangeEvent,\n  NgbNavConfig,\n  NgbNav,\n  NgbNavContent,\n  NgbNavContentContext,\n  NgbNavItem,\n  NgbNavLink,\n  NgbNavModule,\n  NgbNavOutlet\n} from './nav/nav.module';\nexport {\n  NgbPagination,\n  NgbPaginationConfig,\n  NgbPaginationEllipsis,\n  NgbPaginationFirst,\n  NgbPaginationLast,\n  NgbPaginationModule,\n  NgbPaginationNext,\n  NgbPaginationNumber,\n  NgbPaginationPrevious\n} from './pagination/pagination.module';\nexport {NgbPopover, NgbPopoverConfig, NgbPopoverModule} from './popover/popover.module';\nexport {NgbProgressbar, NgbProgressbarConfig, NgbProgressbarModule} from './progressbar/progressbar.module';\nexport {NgbRating, NgbRatingConfig, NgbRatingModule} from './rating/rating.module';\nexport {\n  NgbTab,\n  NgbTabChangeEvent,\n  NgbTabContent,\n  NgbTabset,\n  NgbTabsetConfig,\n  NgbTabsetModule,\n  NgbTabTitle\n} from './tabset/tabset.module';\nexport {\n  NgbTimeAdapter,\n  NgbTimepickerI18n,\n  NgbTimepicker,\n  NgbTimepickerConfig,\n  NgbTimepickerModule,\n  NgbTimeStruct\n} from './timepicker/timepicker.module';\nexport {NgbToast, NgbToastConfig, NgbToastHeader, NgbToastModule} from './toast/toast.module';\nexport {NgbTooltip, NgbTooltipConfig, NgbTooltipModule} from './tooltip/tooltip.module';\nexport {\n  NgbHighlight,\n  NgbTypeahead,\n  NgbTypeaheadConfig,\n  NgbTypeaheadModule,\n  NgbTypeaheadSelectItemEvent\n} from './typeahead/typeahead.module';\nexport {Placement} from './util/positioning';\n\n\nconst NGB_MODULES = [\n  NgbAccordionModule, NgbAlertModule, NgbButtonsModule, NgbCarouselModule, NgbCollapseModule, NgbDatepickerModule,\n  NgbDropdownModule, NgbModalModule, NgbNavModule, NgbPaginationModule, NgbPopoverModule, NgbProgressbarModule,\n  NgbRatingModule, NgbTabsetModule, NgbTimepickerModule, NgbToastModule, NgbTooltipModule, NgbTypeaheadModule\n];\n\n@NgModule({imports: NGB_MODULES, exports: NGB_MODULES})\nexport class NgbModule {\n}\n"]}