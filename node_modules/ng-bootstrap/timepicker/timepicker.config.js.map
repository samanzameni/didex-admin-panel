{"version":3,"file":"timepicker.config.js","sourceRoot":"","sources":["../../src/timepicker/timepicker.config.ts"],"names":[],"mappings":"OAAO,EAAE,UAAU,EAAE,MAAM,eAAe;AAE1C,2DAA2D;AAE3D;IAAA;QACE,wBAAwB;QACjB,aAAQ,GAAW,CAAC,CAAC;QAC5B,wBAAwB;QACjB,eAAU,GAAW,CAAC,CAAC;QAC9B,+FAA+F;QACxF,iBAAY,GAAY,IAAI,CAAC;QACpC,sCAAsC;QAC/B,cAAS,GAAY,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QACzC,wDAAwD;QACjD,kBAAa,GAAY,KAAK,CAAC;QACtC,sEAAsE;QAC/D,eAAU,GAAY,IAAI,CAAC;QAClC,iFAAiF;QAC1E,cAAS,GAAY,IAAI,CAAC;QACjC,sEAAsE;QAC/D,iBAAY,GAAY,IAAI,CAAC;QACpC,mCAAmC;QAC5B,QAAG,GAAW,KAAK,CAAC,CAAC;QAC5B,mCAAmC;QAC5B,QAAG,GAAW,KAAK,CAAC,CAAC;IAO9B,CAAC;IANM,2BAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;KACnB,CAAC;IACF,kBAAkB;IACX,+BAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IACF,uBAAC;AAAD,CAAC,AA3BD,IA2BC","sourcesContent":["import { Injectable } from '@angular/core';\n\n/** Provides default configuration values for timepicker */\n\nexport class TimepickerConfig {\n  /** hours change step */\n  public hourStep: number = 1;\n  /** hours change step */\n  public minuteStep: number = 5;\n  /** if true works in 12H mode and displays AM/PM. If false works in 24H mode and hides AM/PM */\n  public showMeridian: boolean = true;\n  /** meridian labels based on locale */\n  public meridians:string[] = ['AM', 'PM'];\n  /** if true hours and minutes fields will be readonly */\n  public readonlyInput: boolean = false;\n  /** if true scroll inside hours and minutes inputs will change time */\n  public mousewheel: boolean = true;\n  /** if true up/down arrowkeys inside hours and minutes inputs will change time */\n  public arrowkeys: boolean = true;\n  /** if true spinner arrows above and below the inputs will be shown */\n  public showSpinners: boolean = true;\n  /** minimum time user can select */\n  public min: number = void 0;\n  /** maximum time user can select */\n  public max: number = void 0;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}