{"version":3,"sources":["d:/Angular Project/Didex/didex-admin-panel/node_modules/@angular/http/src/http_module.js"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;AAmBA;;;;;;;;;;;;;;;;;;;;;;;;;;KA0BK,AAcC;;;;;;;;;;;;;;;;;;;;;;;;;;;;SAEqD;;;;;;;;;;;;;;;;;;;KAmBtD,AAaC;;;;;;;;;;;;;;;;;;;;;;;;;;SAEsD","file":"http_module.js","sourcesContent":["/**\r\n * @license\r\n * Copyright Google Inc. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nimport { NgModule } from '@angular/core';\r\nimport { BrowserJsonp } from './backends/browser_jsonp';\r\nimport { BrowserXhr } from './backends/browser_xhr';\r\nimport { JSONPBackend, JSONPBackend_ } from './backends/jsonp_backend';\r\nimport { CookieXSRFStrategy, XHRBackend } from './backends/xhr_backend';\r\nimport { BaseRequestOptions, RequestOptions } from './base_request_options';\r\nimport { BaseResponseOptions, ResponseOptions } from './base_response_options';\r\nimport { Http, Jsonp } from './http';\r\nimport { XSRFStrategy } from './interfaces';\r\n/**\r\n * @return {?}\r\n */\r\nexport function _createDefaultCookieXSRFStrategy() {\r\n    return new CookieXSRFStrategy();\r\n}\r\n/**\r\n * @param {?} xhrBackend\r\n * @param {?} requestOptions\r\n * @return {?}\r\n */\r\nexport function httpFactory(xhrBackend, requestOptions) {\r\n    return new Http(xhrBackend, requestOptions);\r\n}\r\n/**\r\n * @param {?} jsonpBackend\r\n * @param {?} requestOptions\r\n * @return {?}\r\n */\r\nexport function jsonpFactory(jsonpBackend, requestOptions) {\r\n    return new Jsonp(jsonpBackend, requestOptions);\r\n}\r\n/**\r\n * The module that includes http's providers\r\n *\r\n * \\@experimental\r\n */\r\nexport var HttpModule = (function () {\r\n    function HttpModule() {\r\n    }\r\n    HttpModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    providers: [\r\n                        // TODO(pascal): use factory type annotations once supported in DI\r\n                        // issue: https://github.com/angular/angular/issues/3183\r\n                        { provide: Http, useFactory: httpFactory, deps: [XHRBackend, RequestOptions] },\r\n                        BrowserXhr,\r\n                        { provide: RequestOptions, useClass: BaseRequestOptions },\r\n                        { provide: ResponseOptions, useClass: BaseResponseOptions },\r\n                        XHRBackend,\r\n                        { provide: XSRFStrategy, useFactory: _createDefaultCookieXSRFStrategy },\r\n                    ],\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    HttpModule.ctorParameters = function () { return []; };\r\n    return HttpModule;\r\n}());\r\nfunction HttpModule_tsickle_Closure_declarations() {\r\n    /** @type {?} */\r\n    HttpModule.decorators;\r\n    /**\r\n     * @nocollapse\r\n     * @type {?}\r\n     */\r\n    HttpModule.ctorParameters;\r\n}\r\n/**\r\n * The module that includes jsonp's providers\r\n *\r\n * \\@experimental\r\n */\r\nexport var JsonpModule = (function () {\r\n    function JsonpModule() {\r\n    }\r\n    JsonpModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    providers: [\r\n                        // TODO(pascal): use factory type annotations once supported in DI\r\n                        // issue: https://github.com/angular/angular/issues/3183\r\n                        { provide: Jsonp, useFactory: jsonpFactory, deps: [JSONPBackend, RequestOptions] },\r\n                        BrowserJsonp,\r\n                        { provide: RequestOptions, useClass: BaseRequestOptions },\r\n                        { provide: ResponseOptions, useClass: BaseResponseOptions },\r\n                        { provide: JSONPBackend, useClass: JSONPBackend_ },\r\n                    ],\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    JsonpModule.ctorParameters = function () { return []; };\r\n    return JsonpModule;\r\n}());\r\nfunction JsonpModule_tsickle_Closure_declarations() {\r\n    /** @type {?} */\r\n    JsonpModule.decorators;\r\n    /**\r\n     * @nocollapse\r\n     * @type {?}\r\n     */\r\n    JsonpModule.ctorParameters;\r\n}\r\n"]}