{"version":3,"sources":["d:/Angular Project/Didex/didex-admin-panel/node_modules/@angular/http/src/backends/browser_jsonp.js"],"names":[],"mappings":"AAAA;;;;;;;;;AAQA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAgEM,AAGA;;;;;;8JAEuD","file":"browser_jsonp.js","sourcesContent":["/**\r\n * @license\r\n * Copyright Google Inc. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nimport { Injectable } from '@angular/core';\r\nvar /** @type {?} */ _nextRequestId = 0;\r\nexport var /** @type {?} */ JSONP_HOME = '__ng_jsonp__';\r\nvar /** @type {?} */ _jsonpConnections = null;\r\n/**\r\n * @return {?}\r\n */\r\nfunction _getJsonpConnections() {\r\n    var /** @type {?} */ w = typeof window == 'object' ? window : {};\r\n    if (_jsonpConnections === null) {\r\n        _jsonpConnections = w[JSONP_HOME] = {};\r\n    }\r\n    return _jsonpConnections;\r\n}\r\nexport var BrowserJsonp = (function () {\r\n    function BrowserJsonp() {\r\n    }\r\n    /**\r\n     * @param {?} url\r\n     * @return {?}\r\n     */\r\n    BrowserJsonp.prototype.build = function (url) {\r\n        var /** @type {?} */ node = document.createElement('script');\r\n        node.src = url;\r\n        return node;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    BrowserJsonp.prototype.nextRequestID = function () { return \"__req\" + _nextRequestId++; };\r\n    /**\r\n     * @param {?} id\r\n     * @return {?}\r\n     */\r\n    BrowserJsonp.prototype.requestCallback = function (id) { return JSONP_HOME + \".\" + id + \".finished\"; };\r\n    /**\r\n     * @param {?} id\r\n     * @param {?} connection\r\n     * @return {?}\r\n     */\r\n    BrowserJsonp.prototype.exposeConnection = function (id, connection) {\r\n        var /** @type {?} */ connections = _getJsonpConnections();\r\n        connections[id] = connection;\r\n    };\r\n    /**\r\n     * @param {?} id\r\n     * @return {?}\r\n     */\r\n    BrowserJsonp.prototype.removeConnection = function (id) {\r\n        var /** @type {?} */ connections = _getJsonpConnections();\r\n        connections[id] = null;\r\n    };\r\n    /**\r\n     * @param {?} node\r\n     * @return {?}\r\n     */\r\n    BrowserJsonp.prototype.send = function (node) { document.body.appendChild(/** @type {?} */ ((node))); };\r\n    /**\r\n     * @param {?} node\r\n     * @return {?}\r\n     */\r\n    BrowserJsonp.prototype.cleanup = function (node) {\r\n        if (node.parentNode) {\r\n            node.parentNode.removeChild(/** @type {?} */ ((node)));\r\n        }\r\n    };\r\n    BrowserJsonp.decorators = [\r\n        { type: Injectable },\r\n    ];\r\n    /** @nocollapse */\r\n    BrowserJsonp.ctorParameters = function () { return []; };\r\n    return BrowserJsonp;\r\n}());\r\nfunction BrowserJsonp_tsickle_Closure_declarations() {\r\n    /** @type {?} */\r\n    BrowserJsonp.decorators;\r\n    /**\r\n     * @nocollapse\r\n     * @type {?}\r\n     */\r\n    BrowserJsonp.ctorParameters;\r\n}\r\n"]}