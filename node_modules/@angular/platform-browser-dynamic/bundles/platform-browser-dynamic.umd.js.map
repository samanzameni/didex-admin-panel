{"version":3,"sources":["d:/Angular Project/Didex/didex-admin-panel/node_modules/@angular/platform-browser-dynamic/bundles/platform-browser-dynamic.umd.js"],"names":[],"mappings":"AAAA;;;;;;;qOAO4M;6MACf;;yuhBxD;;;;;2BAGqB","file":"platform-browser-dynamic.umd.js","sourcesContent":["/**\r\n * @license Angular v8.2.14\r\n * (c) 2010-2019 Google LLC. https://angular.io/\r\n * License: MIT\r\n */\r\n\r\n(function (global, factory) {\r\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/compiler'), require('@angular/core'), require('@angular/common'), require('@angular/platform-browser')) :\r\n    typeof define === 'function' && define.amd ? define('@angular/platform-browser-dynamic', ['exports', '@angular/compiler', '@angular/core', '@angular/common', '@angular/platform-browser'], factory) :\r\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.platformBrowserDynamic = {}), global.ng.compiler, global.ng.core, global.ng.common, global.ng.platformBrowser));\r\n}(this, function (exports, compiler, core, common, platformBrowser) { 'use strict';\r\n\r\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __rest(s, e) {\r\n        var t = {};\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n            t[p] = s[p];\r\n        if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n                t[p[i]] = s[p[i]];\r\n        return t;\r\n    }\r\n\r\n    function __decorate(decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    }\r\n\r\n    function __param(paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    }\r\n\r\n    function __metadata(metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    }\r\n\r\n    function __awaiter(thisArg, _arguments, P, generator) {\r\n        return new (P || (P = Promise))(function (resolve, reject) {\r\n            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n            function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n            function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n        });\r\n    }\r\n\r\n    function __generator(thisArg, body) {\r\n        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n        function verb(n) { return function (v) { return step([n, v]); }; }\r\n        function step(op) {\r\n            if (f) throw new TypeError(\"Generator is already executing.\");\r\n            while (_) try {\r\n                if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n                if (y = 0, t) op = [op[0] & 2, t.value];\r\n                switch (op[0]) {\r\n                    case 0: case 1: t = op; break;\r\n                    case 4: _.label++; return { value: op[1], done: false };\r\n                    case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                    case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                    default:\r\n                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                        if (t[2]) _.ops.pop();\r\n                        _.trys.pop(); continue;\r\n                }\r\n                op = body.call(thisArg, _);\r\n            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n        }\r\n    }\r\n\r\n    function __exportStar(m, exports) {\r\n        for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n    }\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\r\n\r\n    function __await(v) {\r\n        return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n    }\r\n\r\n    function __asyncGenerator(thisArg, _arguments, generator) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n        return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n        function fulfill(value) { resume(\"next\", value); }\r\n        function reject(value) { resume(\"throw\", value); }\r\n        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n    }\r\n\r\n    function __asyncDelegator(o) {\r\n        var i, p;\r\n        return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n    }\r\n\r\n    function __asyncValues(o) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var m = o[Symbol.asyncIterator], i;\r\n        return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n    }\r\n\r\n    function __makeTemplateObject(cooked, raw) {\r\n        if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n        return cooked;\r\n    };\r\n\r\n    function __importStar(mod) {\r\n        if (mod && mod.__esModule) return mod;\r\n        var result = {};\r\n        if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n        result.default = mod;\r\n        return result;\r\n    }\r\n\r\n    function __importDefault(mod) {\r\n        return (mod && mod.__esModule) ? mod : { default: mod };\r\n    }\r\n\r\n    /**\r\n     * @license\r\n     * Copyright Google Inc. All Rights Reserved.\r\n     *\r\n     * Use of this source code is governed by an MIT-style license that can be\r\n     * found in the LICENSE file at https://angular.io/license\r\n     */\r\n    var MODULE_SUFFIX = '';\r\n    var builtinExternalReferences = createBuiltinExternalReferencesMap();\r\n    var JitReflector = /** @class */ (function () {\r\n        function JitReflector() {\r\n            this.reflectionCapabilities = new core.ɵReflectionCapabilities();\r\n        }\r\n        JitReflector.prototype.componentModuleUrl = function (type, cmpMetadata) {\r\n            var moduleId = cmpMetadata.moduleId;\r\n            if (typeof moduleId === 'string') {\r\n                var scheme = compiler.getUrlScheme(moduleId);\r\n                return scheme ? moduleId : \"package:\" + moduleId + MODULE_SUFFIX;\r\n            }\r\n            else if (moduleId !== null && moduleId !== void 0) {\r\n                throw compiler.syntaxError(\"moduleId should be a string in \\\"\" + core.ɵstringify(type) + \"\\\". See https://goo.gl/wIDDiL for more information.\\n\" +\r\n                    \"If you're using Webpack you should inline the template and the styles, see https://goo.gl/X2J8zc.\");\r\n            }\r\n            return \"./\" + core.ɵstringify(type);\r\n        };\r\n        JitReflector.prototype.parameters = function (typeOrFunc) {\r\n            return this.reflectionCapabilities.parameters(typeOrFunc);\r\n        };\r\n        JitReflector.prototype.tryAnnotations = function (typeOrFunc) { return this.annotations(typeOrFunc); };\r\n        JitReflector.prototype.annotations = function (typeOrFunc) {\r\n            return this.reflectionCapabilities.annotations(typeOrFunc);\r\n        };\r\n        JitReflector.prototype.shallowAnnotations = function (typeOrFunc) {\r\n            throw new Error('Not supported in JIT mode');\r\n        };\r\n        JitReflector.prototype.propMetadata = function (typeOrFunc) {\r\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\r\n        };\r\n        JitReflector.prototype.hasLifecycleHook = function (type, lcProperty) {\r\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\r\n        };\r\n        JitReflector.prototype.guards = function (type) { return this.reflectionCapabilities.guards(type); };\r\n        JitReflector.prototype.resolveExternalReference = function (ref) {\r\n            return builtinExternalReferences.get(ref) || ref.runtime;\r\n        };\r\n        return JitReflector;\r\n    }());\r\n    function createBuiltinExternalReferencesMap() {\r\n        var map = new Map();\r\n        map.set(compiler.Identifiers.ANALYZE_FOR_ENTRY_COMPONENTS, core.ANALYZE_FOR_ENTRY_COMPONENTS);\r\n        map.set(compiler.Identifiers.ElementRef, core.ElementRef);\r\n        map.set(compiler.Identifiers.NgModuleRef, core.NgModuleRef);\r\n        map.set(compiler.Identifiers.ViewContainerRef, core.ViewContainerRef);\r\n        map.set(compiler.Identifiers.ChangeDetectorRef, core.ChangeDetectorRef);\r\n        map.set(compiler.Identifiers.Renderer2, core.Renderer2);\r\n        map.set(compiler.Identifiers.QueryList, core.QueryList);\r\n        map.set(compiler.Identifiers.TemplateRef, core.TemplateRef);\r\n        map.set(compiler.Identifiers.CodegenComponentFactoryResolver, core.ɵCodegenComponentFactoryResolver);\r\n        map.set(compiler.Identifiers.ComponentFactoryResolver, core.ComponentFactoryResolver);\r\n        map.set(compiler.Identifiers.ComponentFactory, core.ComponentFactory);\r\n        map.set(compiler.Identifiers.ComponentRef, core.ComponentRef);\r\n        map.set(compiler.Identifiers.NgModuleFactory, core.NgModuleFactory);\r\n        map.set(compiler.Identifiers.createModuleFactory, core.ɵcmf);\r\n        map.set(compiler.Identifiers.moduleDef, core.ɵmod);\r\n        map.set(compiler.Identifiers.moduleProviderDef, core.ɵmpd);\r\n        map.set(compiler.Identifiers.RegisterModuleFactoryFn, core.ɵregisterModuleFactory);\r\n        map.set(compiler.Identifiers.Injector, core.Injector);\r\n        map.set(compiler.Identifiers.ViewEncapsulation, core.ViewEncapsulation);\r\n        map.set(compiler.Identifiers.ChangeDetectionStrategy, core.ChangeDetectionStrategy);\r\n        map.set(compiler.Identifiers.SecurityContext, core.SecurityContext);\r\n        map.set(compiler.Identifiers.LOCALE_ID, core.LOCALE_ID);\r\n        map.set(compiler.Identifiers.TRANSLATIONS_FORMAT, core.TRANSLATIONS_FORMAT);\r\n        map.set(compiler.Identifiers.inlineInterpolate, core.ɵinlineInterpolate);\r\n        map.set(compiler.Identifiers.interpolate, core.ɵinterpolate);\r\n        map.set(compiler.Identifiers.EMPTY_ARRAY, core.ɵEMPTY_ARRAY);\r\n        map.set(compiler.Identifiers.EMPTY_MAP, core.ɵEMPTY_MAP);\r\n        map.set(compiler.Identifiers.Renderer, core.Renderer);\r\n        map.set(compiler.Identifiers.viewDef, core.ɵvid);\r\n        map.set(compiler.Identifiers.elementDef, core.ɵeld);\r\n        map.set(compiler.Identifiers.anchorDef, core.ɵand);\r\n        map.set(compiler.Identifiers.textDef, core.ɵted);\r\n        map.set(compiler.Identifiers.directiveDef, core.ɵdid);\r\n        map.set(compiler.Identifiers.providerDef, core.ɵprd);\r\n        map.set(compiler.Identifiers.queryDef, core.ɵqud);\r\n        map.set(compiler.Identifiers.pureArrayDef, core.ɵpad);\r\n        map.set(compiler.Identifiers.pureObjectDef, core.ɵpod);\r\n        map.set(compiler.Identifiers.purePipeDef, core.ɵppd);\r\n        map.set(compiler.Identifiers.pipeDef, core.ɵpid);\r\n        map.set(compiler.Identifiers.nodeValue, core.ɵnov);\r\n        map.set(compiler.Identifiers.ngContentDef, core.ɵncd);\r\n        map.set(compiler.Identifiers.unwrapValue, core.ɵunv);\r\n        map.set(compiler.Identifiers.createRendererType2, core.ɵcrt);\r\n        map.set(compiler.Identifiers.createComponentFactory, core.ɵccf);\r\n        return map;\r\n    }\r\n\r\n    /**\r\n     * @license\r\n     * Copyright Google Inc. All Rights Reserved.\r\n     *\r\n     * Use of this source code is governed by an MIT-style license that can be\r\n     * found in the LICENSE file at https://angular.io/license\r\n     */\r\n    var ERROR_COLLECTOR_TOKEN = new core.InjectionToken('ErrorCollector');\r\n    /**\r\n     * A default provider for {@link PACKAGE_ROOT_URL} that maps to '/'.\r\n     */\r\n    var DEFAULT_PACKAGE_URL_PROVIDER = {\r\n        provide: core.PACKAGE_ROOT_URL,\r\n        useValue: '/'\r\n    };\r\n    var _NO_RESOURCE_LOADER = {\r\n        get: function (url) {\r\n            throw new Error(\"No ResourceLoader implementation has been provided. Can't read the url \\\"\" + url + \"\\\"\");\r\n        }\r\n    };\r\n    var baseHtmlParser = new core.InjectionToken('HtmlParser');\r\n    var CompilerImpl = /** @class */ (function () {\r\n        function CompilerImpl(injector, _metadataResolver, templateParser, styleCompiler, viewCompiler, ngModuleCompiler, summaryResolver, compileReflector, jitEvaluator, compilerConfig, console) {\r\n            this._metadataResolver = _metadataResolver;\r\n            this._delegate = new compiler.JitCompiler(_metadataResolver, templateParser, styleCompiler, viewCompiler, ngModuleCompiler, summaryResolver, compileReflector, jitEvaluator, compilerConfig, console, this.getExtraNgModuleProviders.bind(this));\r\n            this.injector = injector;\r\n        }\r\n        CompilerImpl.prototype.getExtraNgModuleProviders = function () {\r\n            return [this._metadataResolver.getProviderMetadata(new compiler.ProviderMeta(core.Compiler, { useValue: this }))];\r\n        };\r\n        CompilerImpl.prototype.compileModuleSync = function (moduleType) {\r\n            return this._delegate.compileModuleSync(moduleType);\r\n        };\r\n        CompilerImpl.prototype.compileModuleAsync = function (moduleType) {\r\n            return this._delegate.compileModuleAsync(moduleType);\r\n        };\r\n        CompilerImpl.prototype.compileModuleAndAllComponentsSync = function (moduleType) {\r\n            var result = this._delegate.compileModuleAndAllComponentsSync(moduleType);\r\n            return {\r\n                ngModuleFactory: result.ngModuleFactory,\r\n                componentFactories: result.componentFactories,\r\n            };\r\n        };\r\n        CompilerImpl.prototype.compileModuleAndAllComponentsAsync = function (moduleType) {\r\n            return this._delegate.compileModuleAndAllComponentsAsync(moduleType)\r\n                .then(function (result) { return ({\r\n                ngModuleFactory: result.ngModuleFactory,\r\n                componentFactories: result.componentFactories,\r\n            }); });\r\n        };\r\n        CompilerImpl.prototype.loadAotSummaries = function (summaries) { this._delegate.loadAotSummaries(summaries); };\r\n        CompilerImpl.prototype.hasAotSummary = function (ref) { return this._delegate.hasAotSummary(ref); };\r\n        CompilerImpl.prototype.getComponentFactory = function (component) {\r\n            return this._delegate.getComponentFactory(component);\r\n        };\r\n        CompilerImpl.prototype.clearCache = function () { this._delegate.clearCache(); };\r\n        CompilerImpl.prototype.clearCacheFor = function (type) { this._delegate.clearCacheFor(type); };\r\n        CompilerImpl.prototype.getModuleId = function (moduleType) {\r\n            var meta = this._metadataResolver.getNgModuleMetadata(moduleType);\r\n            return meta && meta.id || undefined;\r\n        };\r\n        return CompilerImpl;\r\n    }());\r\n    /**\r\n     * A set of providers that provide `JitCompiler` and its dependencies to use for\r\n     * template compilation.\r\n     */\r\n    var COMPILER_PROVIDERS = [\r\n        { provide: compiler.CompileReflector, useValue: new JitReflector() },\r\n        { provide: compiler.ResourceLoader, useValue: _NO_RESOURCE_LOADER },\r\n        { provide: compiler.JitSummaryResolver, deps: [] },\r\n        { provide: compiler.SummaryResolver, useExisting: compiler.JitSummaryResolver },\r\n        { provide: core.ɵConsole, deps: [] },\r\n        { provide: compiler.Lexer, deps: [] },\r\n        { provide: compiler.Parser, deps: [compiler.Lexer] },\r\n        {\r\n            provide: baseHtmlParser,\r\n            useClass: compiler.HtmlParser,\r\n            deps: [],\r\n        },\r\n        {\r\n            provide: compiler.I18NHtmlParser,\r\n            useFactory: function (parser, translations, format, config, console) {\r\n                translations = translations || '';\r\n                var missingTranslation = translations ? config.missingTranslation : core.MissingTranslationStrategy.Ignore;\r\n                return new compiler.I18NHtmlParser(parser, translations, format, missingTranslation, console);\r\n            },\r\n            deps: [\r\n                baseHtmlParser,\r\n                [new core.Optional(), new core.Inject(core.TRANSLATIONS)],\r\n                [new core.Optional(), new core.Inject(core.TRANSLATIONS_FORMAT)],\r\n                [compiler.CompilerConfig],\r\n                [core.ɵConsole],\r\n            ]\r\n        },\r\n        {\r\n            provide: compiler.HtmlParser,\r\n            useExisting: compiler.I18NHtmlParser,\r\n        },\r\n        {\r\n            provide: compiler.TemplateParser, deps: [compiler.CompilerConfig, compiler.CompileReflector,\r\n                compiler.Parser, compiler.ElementSchemaRegistry,\r\n                compiler.I18NHtmlParser, core.ɵConsole]\r\n        },\r\n        { provide: compiler.JitEvaluator, useClass: compiler.JitEvaluator, deps: [] },\r\n        { provide: compiler.DirectiveNormalizer, deps: [compiler.ResourceLoader, compiler.UrlResolver, compiler.HtmlParser, compiler.CompilerConfig] },\r\n        { provide: compiler.CompileMetadataResolver, deps: [compiler.CompilerConfig, compiler.HtmlParser, compiler.NgModuleResolver,\r\n                compiler.DirectiveResolver, compiler.PipeResolver,\r\n                compiler.SummaryResolver,\r\n                compiler.ElementSchemaRegistry,\r\n                compiler.DirectiveNormalizer, core.ɵConsole,\r\n                [core.Optional, compiler.StaticSymbolCache],\r\n                compiler.CompileReflector,\r\n                [core.Optional, ERROR_COLLECTOR_TOKEN]] },\r\n        DEFAULT_PACKAGE_URL_PROVIDER,\r\n        { provide: compiler.StyleCompiler, deps: [compiler.UrlResolver] },\r\n        { provide: compiler.ViewCompiler, deps: [compiler.CompileReflector] },\r\n        { provide: compiler.NgModuleCompiler, deps: [compiler.CompileReflector] },\r\n        { provide: compiler.CompilerConfig, useValue: new compiler.CompilerConfig() },\r\n        { provide: core.Compiler, useClass: CompilerImpl, deps: [core.Injector, compiler.CompileMetadataResolver,\r\n                compiler.TemplateParser, compiler.StyleCompiler,\r\n                compiler.ViewCompiler, compiler.NgModuleCompiler,\r\n                compiler.SummaryResolver, compiler.CompileReflector, compiler.JitEvaluator, compiler.CompilerConfig,\r\n                core.ɵConsole] },\r\n        { provide: compiler.DomElementSchemaRegistry, deps: [] },\r\n        { provide: compiler.ElementSchemaRegistry, useExisting: compiler.DomElementSchemaRegistry },\r\n        { provide: compiler.UrlResolver, deps: [core.PACKAGE_ROOT_URL] },\r\n        { provide: compiler.DirectiveResolver, deps: [compiler.CompileReflector] },\r\n        { provide: compiler.PipeResolver, deps: [compiler.CompileReflector] },\r\n        { provide: compiler.NgModuleResolver, deps: [compiler.CompileReflector] },\r\n    ];\r\n    /**\r\n     * @publicApi\r\n     */\r\n    var JitCompilerFactory = /** @class */ (function () {\r\n        /* @internal */\r\n        function JitCompilerFactory(defaultOptions) {\r\n            var compilerOptions = {\r\n                useJit: true,\r\n                defaultEncapsulation: core.ViewEncapsulation.Emulated,\r\n                missingTranslation: core.MissingTranslationStrategy.Warning,\r\n            };\r\n            this._defaultOptions = __spread([compilerOptions], defaultOptions);\r\n        }\r\n        JitCompilerFactory.prototype.createCompiler = function (options) {\r\n            if (options === void 0) { options = []; }\r\n            var opts = _mergeOptions(this._defaultOptions.concat(options));\r\n            var injector = core.Injector.create([\r\n                COMPILER_PROVIDERS, {\r\n                    provide: compiler.CompilerConfig,\r\n                    useFactory: function () {\r\n                        return new compiler.CompilerConfig({\r\n                            // let explicit values from the compiler options overwrite options\r\n                            // from the app providers\r\n                            useJit: opts.useJit,\r\n                            jitDevMode: core.isDevMode(),\r\n                            // let explicit values from the compiler options overwrite options\r\n                            // from the app providers\r\n                            defaultEncapsulation: opts.defaultEncapsulation,\r\n                            missingTranslation: opts.missingTranslation,\r\n                            preserveWhitespaces: opts.preserveWhitespaces,\r\n                        });\r\n                    },\r\n                    deps: []\r\n                },\r\n                opts.providers\r\n            ]);\r\n            return injector.get(core.Compiler);\r\n        };\r\n        return JitCompilerFactory;\r\n    }());\r\n    function _mergeOptions(optionsArr) {\r\n        return {\r\n            useJit: _lastDefined(optionsArr.map(function (options) { return options.useJit; })),\r\n            defaultEncapsulation: _lastDefined(optionsArr.map(function (options) { return options.defaultEncapsulation; })),\r\n            providers: _mergeArrays(optionsArr.map(function (options) { return options.providers; })),\r\n            missingTranslation: _lastDefined(optionsArr.map(function (options) { return options.missingTranslation; })),\r\n            preserveWhitespaces: _lastDefined(optionsArr.map(function (options) { return options.preserveWhitespaces; })),\r\n        };\r\n    }\r\n    function _lastDefined(args) {\r\n        for (var i = args.length - 1; i >= 0; i--) {\r\n            if (args[i] !== undefined) {\r\n                return args[i];\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    function _mergeArrays(parts) {\r\n        var result = [];\r\n        parts.forEach(function (part) { return part && result.push.apply(result, __spread(part)); });\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @license\r\n     * Copyright Google Inc. All Rights Reserved.\r\n     *\r\n     * Use of this source code is governed by an MIT-style license that can be\r\n     * found in the LICENSE file at https://angular.io/license\r\n     */\r\n    var ɵ0 = {};\r\n    /**\r\n     * A platform that included corePlatform and the compiler.\r\n     *\r\n     * @publicApi\r\n     */\r\n    var platformCoreDynamic = core.createPlatformFactory(core.platformCore, 'coreDynamic', [\r\n        { provide: core.COMPILER_OPTIONS, useValue: ɵ0, multi: true },\r\n        { provide: core.CompilerFactory, useClass: JitCompilerFactory, deps: [core.COMPILER_OPTIONS] },\r\n    ]);\r\n\r\n    var ResourceLoaderImpl = /** @class */ (function (_super) {\r\n        __extends(ResourceLoaderImpl, _super);\r\n        function ResourceLoaderImpl() {\r\n            return _super !== null && _super.apply(this, arguments) || this;\r\n        }\r\n        ResourceLoaderImpl.prototype.get = function (url) {\r\n            var resolve;\r\n            var reject;\r\n            var promise = new Promise(function (res, rej) {\r\n                resolve = res;\r\n                reject = rej;\r\n            });\r\n            var xhr = new XMLHttpRequest();\r\n            xhr.open('GET', url, true);\r\n            xhr.responseType = 'text';\r\n            xhr.onload = function () {\r\n                // responseText is the old-school way of retrieving response (supported by IE8 & 9)\r\n                // response/responseType properties were introduced in ResourceLoader Level2 spec (supported\r\n                // by IE10)\r\n                var response = xhr.response || xhr.responseText;\r\n                // normalize IE9 bug (http://bugs.jquery.com/ticket/1450)\r\n                var status = xhr.status === 1223 ? 204 : xhr.status;\r\n                // fix status code when it is 0 (0 status is undocumented).\r\n                // Occurs when accessing file resources or on Android 4.1 stock browser\r\n                // while retrieving files from application cache.\r\n                if (status === 0) {\r\n                    status = response ? 200 : 0;\r\n                }\r\n                if (200 <= status && status <= 300) {\r\n                    resolve(response);\r\n                }\r\n                else {\r\n                    reject(\"Failed to load \" + url);\r\n                }\r\n            };\r\n            xhr.onerror = function () { reject(\"Failed to load \" + url); };\r\n            xhr.send();\r\n            return promise;\r\n        };\r\n        ResourceLoaderImpl = __decorate([\r\n            core.Injectable()\r\n        ], ResourceLoaderImpl);\r\n        return ResourceLoaderImpl;\r\n    }(compiler.ResourceLoader));\r\n\r\n    /**\r\n     * @license\r\n     * Copyright Google Inc. All Rights Reserved.\r\n     *\r\n     * Use of this source code is governed by an MIT-style license that can be\r\n     * found in the LICENSE file at https://angular.io/license\r\n     */\r\n    var ɵ0$1 = { providers: [{ provide: compiler.ResourceLoader, useClass: ResourceLoaderImpl, deps: [] }] }, ɵ1 = common.ɵPLATFORM_BROWSER_ID;\r\n    /**\r\n     * @publicApi\r\n     */\r\n    var INTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS = [\r\n        platformBrowser.ɵINTERNAL_BROWSER_PLATFORM_PROVIDERS,\r\n        {\r\n            provide: core.COMPILER_OPTIONS,\r\n            useValue: ɵ0$1,\r\n            multi: true\r\n        },\r\n        { provide: core.PLATFORM_ID, useValue: ɵ1 },\r\n    ];\r\n\r\n    /**\r\n     * @license\r\n     * Copyright Google Inc. All Rights Reserved.\r\n     *\r\n     * Use of this source code is governed by an MIT-style license that can be\r\n     * found in the LICENSE file at https://angular.io/license\r\n     */\r\n    /**\r\n     * An implementation of ResourceLoader that uses a template cache to avoid doing an actual\r\n     * ResourceLoader.\r\n     *\r\n     * The template cache needs to be built and loaded into window.$templateCache\r\n     * via a separate mechanism.\r\n     *\r\n     * @publicApi\r\n     */\r\n    var CachedResourceLoader = /** @class */ (function (_super) {\r\n        __extends(CachedResourceLoader, _super);\r\n        function CachedResourceLoader() {\r\n            var _this = _super.call(this) || this;\r\n            _this._cache = core.ɵglobal.$templateCache;\r\n            if (_this._cache == null) {\r\n                throw new Error('CachedResourceLoader: Template cache was not found in $templateCache.');\r\n            }\r\n            return _this;\r\n        }\r\n        CachedResourceLoader.prototype.get = function (url) {\r\n            if (this._cache.hasOwnProperty(url)) {\r\n                return Promise.resolve(this._cache[url]);\r\n            }\r\n            else {\r\n                return Promise.reject('CachedResourceLoader: Did not find cached template for ' + url);\r\n            }\r\n        };\r\n        return CachedResourceLoader;\r\n    }(compiler.ResourceLoader));\r\n\r\n    /**\r\n     * @license\r\n     * Copyright Google Inc. All Rights Reserved.\r\n     *\r\n     * Use of this source code is governed by an MIT-style license that can be\r\n     * found in the LICENSE file at https://angular.io/license\r\n     */\r\n\r\n    /**\r\n     * @license\r\n     * Copyright Google Inc. All Rights Reserved.\r\n     *\r\n     * Use of this source code is governed by an MIT-style license that can be\r\n     * found in the LICENSE file at https://angular.io/license\r\n     */\r\n    /**\r\n     * @publicApi\r\n     */\r\n    var VERSION = new core.Version('8.2.14');\r\n\r\n    /**\r\n     * @license\r\n     * Copyright Google Inc. All Rights Reserved.\r\n     *\r\n     * Use of this source code is governed by an MIT-style license that can be\r\n     * found in the LICENSE file at https://angular.io/license\r\n     */\r\n    /**\r\n     * @publicApi\r\n     */\r\n    var RESOURCE_CACHE_PROVIDER = [{ provide: compiler.ResourceLoader, useClass: CachedResourceLoader, deps: [] }];\r\n    /**\r\n     * @publicApi\r\n     */\r\n    var platformBrowserDynamic = core.createPlatformFactory(platformCoreDynamic, 'browserDynamic', INTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS);\r\n\r\n    /**\r\n     * @license\r\n     * Copyright Google Inc. All Rights Reserved.\r\n     *\r\n     * Use of this source code is governed by an MIT-style license that can be\r\n     * found in the LICENSE file at https://angular.io/license\r\n     */\r\n    // This file only reexports content of the `src` folder. Keep it that way.\r\n\r\n    /**\r\n     * @license\r\n     * Copyright Google Inc. All Rights Reserved.\r\n     *\r\n     * Use of this source code is governed by an MIT-style license that can be\r\n     * found in the LICENSE file at https://angular.io/license\r\n     */\r\n\r\n    /**\r\n     * Generated bundle index. Do not edit.\r\n     */\r\n\r\n    exports.ɵangular_packages_platform_browser_dynamic_platform_browser_dynamic_a = CachedResourceLoader;\r\n    exports.RESOURCE_CACHE_PROVIDER = RESOURCE_CACHE_PROVIDER;\r\n    exports.platformBrowserDynamic = platformBrowserDynamic;\r\n    exports.VERSION = VERSION;\r\n    exports.JitCompilerFactory = JitCompilerFactory;\r\n    exports.ɵCompilerImpl = CompilerImpl;\r\n    exports.ɵplatformCoreDynamic = platformCoreDynamic;\r\n    exports.ɵINTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS = INTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS;\r\n    exports.ɵResourceLoaderImpl = ResourceLoaderImpl;\r\n\r\n    Object.defineProperty(exports, '__esModule', { value: true });\r\n\r\n}));\r\n\r\n"]}