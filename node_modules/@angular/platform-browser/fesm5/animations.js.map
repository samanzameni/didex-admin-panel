{"version":3,"sources":["d:/Angular Project/Didex/didex-admin-panel/node_modules/@angular/platform-browser/fesm5/animations.js"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;AAaA;;;;;;;;;;;;;;;;;;;;;0CAqB0C,AACrB;;;;;;;;;;qCAGW;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2CAuJW,AACtB;;;;;;+XAEY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4CAiJW,AACvB;;;;;;;;;;4FAGa;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KAiD7B;;;;;;;;;;8OAM2B;;;;;;;;;KAS3B;;;;;;;;;;0OAMwB","file":"animations.js","sourcesContent":["/**\r\n * @license Angular v8.2.14\r\n * (c) 2010-2019 Google LLC. https://angular.io/\r\n * License: MIT\r\n */\r\n\r\nimport { __extends, __decorate, __param, __metadata, __read, __spread } from 'tslib';\r\nimport { ViewEncapsulation, Injectable, Inject, RendererFactory2, NgZone, InjectionToken, NgModule } from '@angular/core';\r\nimport { ɵDomRendererFactory2, BrowserModule } from '@angular/platform-browser';\r\nimport { sequence, AnimationBuilder, AnimationFactory } from '@angular/animations';\r\nimport { ɵAnimationEngine, AnimationDriver, ɵAnimationStyleNormalizer, ɵsupportsWebAnimations, ɵWebAnimationsDriver, ɵCssKeyframesDriver, ɵWebAnimationsStyleNormalizer, ɵNoopAnimationDriver } from '@angular/animations/browser';\r\nimport { DOCUMENT } from '@angular/common';\r\n\r\nvar BrowserAnimationBuilder = /** @class */ (function (_super) {\r\n    __extends(BrowserAnimationBuilder, _super);\r\n    function BrowserAnimationBuilder(rootRenderer, doc) {\r\n        var _this = _super.call(this) || this;\r\n        _this._nextAnimationId = 0;\r\n        var typeData = {\r\n            id: '0',\r\n            encapsulation: ViewEncapsulation.None,\r\n            styles: [],\r\n            data: { animation: [] }\r\n        };\r\n        _this._renderer = rootRenderer.createRenderer(doc.body, typeData);\r\n        return _this;\r\n    }\r\n    BrowserAnimationBuilder.prototype.build = function (animation) {\r\n        var id = this._nextAnimationId.toString();\r\n        this._nextAnimationId++;\r\n        var entry = Array.isArray(animation) ? sequence(animation) : animation;\r\n        issueAnimationCommand(this._renderer, null, id, 'register', [entry]);\r\n        return new BrowserAnimationFactory(id, this._renderer);\r\n    };\r\n    BrowserAnimationBuilder = __decorate([\r\n        Injectable(),\r\n        __param(1, Inject(DOCUMENT)),\r\n        __metadata(\"design:paramtypes\", [RendererFactory2, Object])\r\n    ], BrowserAnimationBuilder);\r\n    return BrowserAnimationBuilder;\r\n}(AnimationBuilder));\r\nvar BrowserAnimationFactory = /** @class */ (function (_super) {\r\n    __extends(BrowserAnimationFactory, _super);\r\n    function BrowserAnimationFactory(_id, _renderer) {\r\n        var _this = _super.call(this) || this;\r\n        _this._id = _id;\r\n        _this._renderer = _renderer;\r\n        return _this;\r\n    }\r\n    BrowserAnimationFactory.prototype.create = function (element, options) {\r\n        return new RendererAnimationPlayer(this._id, element, options || {}, this._renderer);\r\n    };\r\n    return BrowserAnimationFactory;\r\n}(AnimationFactory));\r\nvar RendererAnimationPlayer = /** @class */ (function () {\r\n    function RendererAnimationPlayer(id, element, options, _renderer) {\r\n        this.id = id;\r\n        this.element = element;\r\n        this._renderer = _renderer;\r\n        this.parentPlayer = null;\r\n        this._started = false;\r\n        this.totalTime = 0;\r\n        this._command('create', options);\r\n    }\r\n    RendererAnimationPlayer.prototype._listen = function (eventName, callback) {\r\n        return this._renderer.listen(this.element, \"@@\" + this.id + \":\" + eventName, callback);\r\n    };\r\n    RendererAnimationPlayer.prototype._command = function (command) {\r\n        var args = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            args[_i - 1] = arguments[_i];\r\n        }\r\n        return issueAnimationCommand(this._renderer, this.element, this.id, command, args);\r\n    };\r\n    RendererAnimationPlayer.prototype.onDone = function (fn) { this._listen('done', fn); };\r\n    RendererAnimationPlayer.prototype.onStart = function (fn) { this._listen('start', fn); };\r\n    RendererAnimationPlayer.prototype.onDestroy = function (fn) { this._listen('destroy', fn); };\r\n    RendererAnimationPlayer.prototype.init = function () { this._command('init'); };\r\n    RendererAnimationPlayer.prototype.hasStarted = function () { return this._started; };\r\n    RendererAnimationPlayer.prototype.play = function () {\r\n        this._command('play');\r\n        this._started = true;\r\n    };\r\n    RendererAnimationPlayer.prototype.pause = function () { this._command('pause'); };\r\n    RendererAnimationPlayer.prototype.restart = function () { this._command('restart'); };\r\n    RendererAnimationPlayer.prototype.finish = function () { this._command('finish'); };\r\n    RendererAnimationPlayer.prototype.destroy = function () { this._command('destroy'); };\r\n    RendererAnimationPlayer.prototype.reset = function () { this._command('reset'); };\r\n    RendererAnimationPlayer.prototype.setPosition = function (p) { this._command('setPosition', p); };\r\n    RendererAnimationPlayer.prototype.getPosition = function () { return 0; };\r\n    return RendererAnimationPlayer;\r\n}());\r\nfunction issueAnimationCommand(renderer, element, id, command, args) {\r\n    return renderer.setProperty(element, \"@@\" + id + \":\" + command, args);\r\n}\r\n\r\nvar ANIMATION_PREFIX = '@';\r\nvar DISABLE_ANIMATIONS_FLAG = '@.disabled';\r\nvar AnimationRendererFactory = /** @class */ (function () {\r\n    function AnimationRendererFactory(delegate, engine, _zone) {\r\n        this.delegate = delegate;\r\n        this.engine = engine;\r\n        this._zone = _zone;\r\n        this._currentId = 0;\r\n        this._microtaskId = 1;\r\n        this._animationCallbacksBuffer = [];\r\n        this._rendererCache = new Map();\r\n        this._cdRecurDepth = 0;\r\n        this.promise = Promise.resolve(0);\r\n        engine.onRemovalComplete = function (element, delegate) {\r\n            // Note: if an component element has a leave animation, and the component\r\n            // a host leave animation, the view engine will call `removeChild` for the parent\r\n            // component renderer as well as for the child component renderer.\r\n            // Therefore, we need to check if we already removed the element.\r\n            if (delegate && delegate.parentNode(element)) {\r\n                delegate.removeChild(element.parentNode, element);\r\n            }\r\n        };\r\n    }\r\n    AnimationRendererFactory.prototype.createRenderer = function (hostElement, type) {\r\n        var _this = this;\r\n        var EMPTY_NAMESPACE_ID = '';\r\n        // cache the delegates to find out which cached delegate can\r\n        // be used by which cached renderer\r\n        var delegate = this.delegate.createRenderer(hostElement, type);\r\n        if (!hostElement || !type || !type.data || !type.data['animation']) {\r\n            var renderer = this._rendererCache.get(delegate);\r\n            if (!renderer) {\r\n                renderer = new BaseAnimationRenderer(EMPTY_NAMESPACE_ID, delegate, this.engine);\r\n                // only cache this result when the base renderer is used\r\n                this._rendererCache.set(delegate, renderer);\r\n            }\r\n            return renderer;\r\n        }\r\n        var componentId = type.id;\r\n        var namespaceId = type.id + '-' + this._currentId;\r\n        this._currentId++;\r\n        this.engine.register(namespaceId, hostElement);\r\n        var animationTriggers = type.data['animation'];\r\n        animationTriggers.forEach(function (trigger) { return _this.engine.registerTrigger(componentId, namespaceId, hostElement, trigger.name, trigger); });\r\n        return new AnimationRenderer(this, namespaceId, delegate, this.engine);\r\n    };\r\n    AnimationRendererFactory.prototype.begin = function () {\r\n        this._cdRecurDepth++;\r\n        if (this.delegate.begin) {\r\n            this.delegate.begin();\r\n        }\r\n    };\r\n    AnimationRendererFactory.prototype._scheduleCountTask = function () {\r\n        var _this = this;\r\n        // always use promise to schedule microtask instead of use Zone\r\n        this.promise.then(function () { _this._microtaskId++; });\r\n    };\r\n    /** @internal */\r\n    AnimationRendererFactory.prototype.scheduleListenerCallback = function (count, fn, data) {\r\n        var _this = this;\r\n        if (count >= 0 && count < this._microtaskId) {\r\n            this._zone.run(function () { return fn(data); });\r\n            return;\r\n        }\r\n        if (this._animationCallbacksBuffer.length == 0) {\r\n            Promise.resolve(null).then(function () {\r\n                _this._zone.run(function () {\r\n                    _this._animationCallbacksBuffer.forEach(function (tuple) {\r\n                        var _a = __read(tuple, 2), fn = _a[0], data = _a[1];\r\n                        fn(data);\r\n                    });\r\n                    _this._animationCallbacksBuffer = [];\r\n                });\r\n            });\r\n        }\r\n        this._animationCallbacksBuffer.push([fn, data]);\r\n    };\r\n    AnimationRendererFactory.prototype.end = function () {\r\n        var _this = this;\r\n        this._cdRecurDepth--;\r\n        // this is to prevent animations from running twice when an inner\r\n        // component does CD when a parent component instead has inserted it\r\n        if (this._cdRecurDepth == 0) {\r\n            this._zone.runOutsideAngular(function () {\r\n                _this._scheduleCountTask();\r\n                _this.engine.flush(_this._microtaskId);\r\n            });\r\n        }\r\n        if (this.delegate.end) {\r\n            this.delegate.end();\r\n        }\r\n    };\r\n    AnimationRendererFactory.prototype.whenRenderingDone = function () { return this.engine.whenRenderingDone(); };\r\n    AnimationRendererFactory = __decorate([\r\n        Injectable(),\r\n        __metadata(\"design:paramtypes\", [RendererFactory2, ɵAnimationEngine, NgZone])\r\n    ], AnimationRendererFactory);\r\n    return AnimationRendererFactory;\r\n}());\r\nvar BaseAnimationRenderer = /** @class */ (function () {\r\n    function BaseAnimationRenderer(namespaceId, delegate, engine) {\r\n        this.namespaceId = namespaceId;\r\n        this.delegate = delegate;\r\n        this.engine = engine;\r\n        this.destroyNode = this.delegate.destroyNode ? function (n) { return delegate.destroyNode(n); } : null;\r\n    }\r\n    Object.defineProperty(BaseAnimationRenderer.prototype, \"data\", {\r\n        get: function () { return this.delegate.data; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    BaseAnimationRenderer.prototype.destroy = function () {\r\n        this.engine.destroy(this.namespaceId, this.delegate);\r\n        this.delegate.destroy();\r\n    };\r\n    BaseAnimationRenderer.prototype.createElement = function (name, namespace) {\r\n        return this.delegate.createElement(name, namespace);\r\n    };\r\n    BaseAnimationRenderer.prototype.createComment = function (value) { return this.delegate.createComment(value); };\r\n    BaseAnimationRenderer.prototype.createText = function (value) { return this.delegate.createText(value); };\r\n    BaseAnimationRenderer.prototype.appendChild = function (parent, newChild) {\r\n        this.delegate.appendChild(parent, newChild);\r\n        this.engine.onInsert(this.namespaceId, newChild, parent, false);\r\n    };\r\n    BaseAnimationRenderer.prototype.insertBefore = function (parent, newChild, refChild) {\r\n        this.delegate.insertBefore(parent, newChild, refChild);\r\n        this.engine.onInsert(this.namespaceId, newChild, parent, true);\r\n    };\r\n    BaseAnimationRenderer.prototype.removeChild = function (parent, oldChild, isHostElement) {\r\n        this.engine.onRemove(this.namespaceId, oldChild, this.delegate, isHostElement);\r\n    };\r\n    BaseAnimationRenderer.prototype.selectRootElement = function (selectorOrNode, preserveContent) {\r\n        return this.delegate.selectRootElement(selectorOrNode, preserveContent);\r\n    };\r\n    BaseAnimationRenderer.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\r\n    BaseAnimationRenderer.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\r\n    BaseAnimationRenderer.prototype.setAttribute = function (el, name, value, namespace) {\r\n        this.delegate.setAttribute(el, name, value, namespace);\r\n    };\r\n    BaseAnimationRenderer.prototype.removeAttribute = function (el, name, namespace) {\r\n        this.delegate.removeAttribute(el, name, namespace);\r\n    };\r\n    BaseAnimationRenderer.prototype.addClass = function (el, name) { this.delegate.addClass(el, name); };\r\n    BaseAnimationRenderer.prototype.removeClass = function (el, name) { this.delegate.removeClass(el, name); };\r\n    BaseAnimationRenderer.prototype.setStyle = function (el, style, value, flags) {\r\n        this.delegate.setStyle(el, style, value, flags);\r\n    };\r\n    BaseAnimationRenderer.prototype.removeStyle = function (el, style, flags) {\r\n        this.delegate.removeStyle(el, style, flags);\r\n    };\r\n    BaseAnimationRenderer.prototype.setProperty = function (el, name, value) {\r\n        if (name.charAt(0) == ANIMATION_PREFIX && name == DISABLE_ANIMATIONS_FLAG) {\r\n            this.disableAnimations(el, !!value);\r\n        }\r\n        else {\r\n            this.delegate.setProperty(el, name, value);\r\n        }\r\n    };\r\n    BaseAnimationRenderer.prototype.setValue = function (node, value) { this.delegate.setValue(node, value); };\r\n    BaseAnimationRenderer.prototype.listen = function (target, eventName, callback) {\r\n        return this.delegate.listen(target, eventName, callback);\r\n    };\r\n    BaseAnimationRenderer.prototype.disableAnimations = function (element, value) {\r\n        this.engine.disableAnimations(element, value);\r\n    };\r\n    return BaseAnimationRenderer;\r\n}());\r\nvar AnimationRenderer = /** @class */ (function (_super) {\r\n    __extends(AnimationRenderer, _super);\r\n    function AnimationRenderer(factory, namespaceId, delegate, engine) {\r\n        var _this = _super.call(this, namespaceId, delegate, engine) || this;\r\n        _this.factory = factory;\r\n        _this.namespaceId = namespaceId;\r\n        return _this;\r\n    }\r\n    AnimationRenderer.prototype.setProperty = function (el, name, value) {\r\n        if (name.charAt(0) == ANIMATION_PREFIX) {\r\n            if (name.charAt(1) == '.' && name == DISABLE_ANIMATIONS_FLAG) {\r\n                value = value === undefined ? true : !!value;\r\n                this.disableAnimations(el, value);\r\n            }\r\n            else {\r\n                this.engine.process(this.namespaceId, el, name.substr(1), value);\r\n            }\r\n        }\r\n        else {\r\n            this.delegate.setProperty(el, name, value);\r\n        }\r\n    };\r\n    AnimationRenderer.prototype.listen = function (target, eventName, callback) {\r\n        var _a;\r\n        var _this = this;\r\n        if (eventName.charAt(0) == ANIMATION_PREFIX) {\r\n            var element = resolveElementFromTarget(target);\r\n            var name_1 = eventName.substr(1);\r\n            var phase = '';\r\n            // @listener.phase is for trigger animation callbacks\r\n            // @@listener is for animation builder callbacks\r\n            if (name_1.charAt(0) != ANIMATION_PREFIX) {\r\n                _a = __read(parseTriggerCallbackName(name_1), 2), name_1 = _a[0], phase = _a[1];\r\n            }\r\n            return this.engine.listen(this.namespaceId, element, name_1, phase, function (event) {\r\n                var countId = event['_data'] || -1;\r\n                _this.factory.scheduleListenerCallback(countId, callback, event);\r\n            });\r\n        }\r\n        return this.delegate.listen(target, eventName, callback);\r\n    };\r\n    return AnimationRenderer;\r\n}(BaseAnimationRenderer));\r\nfunction resolveElementFromTarget(target) {\r\n    switch (target) {\r\n        case 'body':\r\n            return document.body;\r\n        case 'document':\r\n            return document;\r\n        case 'window':\r\n            return window;\r\n        default:\r\n            return target;\r\n    }\r\n}\r\nfunction parseTriggerCallbackName(triggerName) {\r\n    var dotIndex = triggerName.indexOf('.');\r\n    var trigger = triggerName.substring(0, dotIndex);\r\n    var phase = triggerName.substr(dotIndex + 1);\r\n    return [trigger, phase];\r\n}\r\n\r\n/**\r\n * @license\r\n * Copyright Google Inc. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nvar InjectableAnimationEngine = /** @class */ (function (_super) {\r\n    __extends(InjectableAnimationEngine, _super);\r\n    function InjectableAnimationEngine(doc, driver, normalizer) {\r\n        return _super.call(this, doc.body, driver, normalizer) || this;\r\n    }\r\n    InjectableAnimationEngine = __decorate([\r\n        Injectable(),\r\n        __param(0, Inject(DOCUMENT)),\r\n        __metadata(\"design:paramtypes\", [Object, AnimationDriver, ɵAnimationStyleNormalizer])\r\n    ], InjectableAnimationEngine);\r\n    return InjectableAnimationEngine;\r\n}(ɵAnimationEngine));\r\nfunction instantiateSupportedAnimationDriver() {\r\n    return ɵsupportsWebAnimations() ? new ɵWebAnimationsDriver() : new ɵCssKeyframesDriver();\r\n}\r\nfunction instantiateDefaultStyleNormalizer() {\r\n    return new ɵWebAnimationsStyleNormalizer();\r\n}\r\nfunction instantiateRendererFactory(renderer, engine, zone) {\r\n    return new AnimationRendererFactory(renderer, engine, zone);\r\n}\r\n/**\r\n * @publicApi\r\n */\r\nvar ANIMATION_MODULE_TYPE = new InjectionToken('AnimationModuleType');\r\nvar SHARED_ANIMATION_PROVIDERS = [\r\n    { provide: AnimationBuilder, useClass: BrowserAnimationBuilder },\r\n    { provide: ɵAnimationStyleNormalizer, useFactory: instantiateDefaultStyleNormalizer },\r\n    { provide: ɵAnimationEngine, useClass: InjectableAnimationEngine }, {\r\n        provide: RendererFactory2,\r\n        useFactory: instantiateRendererFactory,\r\n        deps: [ɵDomRendererFactory2, ɵAnimationEngine, NgZone]\r\n    }\r\n];\r\n/**\r\n * Separate providers from the actual module so that we can do a local modification in Google3 to\r\n * include them in the BrowserModule.\r\n */\r\nvar BROWSER_ANIMATIONS_PROVIDERS = __spread([\r\n    { provide: AnimationDriver, useFactory: instantiateSupportedAnimationDriver },\r\n    { provide: ANIMATION_MODULE_TYPE, useValue: 'BrowserAnimations' }\r\n], SHARED_ANIMATION_PROVIDERS);\r\n/**\r\n * Separate providers from the actual module so that we can do a local modification in Google3 to\r\n * include them in the BrowserTestingModule.\r\n */\r\nvar BROWSER_NOOP_ANIMATIONS_PROVIDERS = __spread([\r\n    { provide: AnimationDriver, useClass: ɵNoopAnimationDriver },\r\n    { provide: ANIMATION_MODULE_TYPE, useValue: 'NoopAnimations' }\r\n], SHARED_ANIMATION_PROVIDERS);\r\n\r\n/**\r\n * Exports `BrowserModule` with additional [dependency-injection providers](guide/glossary#provider)\r\n * for use with animations. See [Animations](guide/animations).\r\n * @publicApi\r\n */\r\nvar BrowserAnimationsModule = /** @class */ (function () {\r\n    function BrowserAnimationsModule() {\r\n    }\r\n    BrowserAnimationsModule = __decorate([\r\n        NgModule({\r\n            exports: [BrowserModule],\r\n            providers: BROWSER_ANIMATIONS_PROVIDERS,\r\n        })\r\n    ], BrowserAnimationsModule);\r\n    return BrowserAnimationsModule;\r\n}());\r\n/**\r\n * A null player that must be imported to allow disabling of animations.\r\n * @publicApi\r\n */\r\nvar NoopAnimationsModule = /** @class */ (function () {\r\n    function NoopAnimationsModule() {\r\n    }\r\n    NoopAnimationsModule = __decorate([\r\n        NgModule({\r\n            exports: [BrowserModule],\r\n            providers: BROWSER_NOOP_ANIMATIONS_PROVIDERS,\r\n        })\r\n    ], NoopAnimationsModule);\r\n    return NoopAnimationsModule;\r\n}());\r\n\r\n/**\r\n * @license\r\n * Copyright Google Inc. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n/**\r\n * @license\r\n * Copyright Google Inc. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n/**\r\n * @license\r\n * Copyright Google Inc. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n/**\r\n * @license\r\n * Copyright Google Inc. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n/**\r\n * Generated bundle index. Do not edit.\r\n */\r\n\r\nexport { BaseAnimationRenderer as ɵangular_packages_platform_browser_animations_animations_f, BROWSER_ANIMATIONS_PROVIDERS as ɵangular_packages_platform_browser_animations_animations_d, BROWSER_NOOP_ANIMATIONS_PROVIDERS as ɵangular_packages_platform_browser_animations_animations_e, instantiateDefaultStyleNormalizer as ɵangular_packages_platform_browser_animations_animations_b, instantiateRendererFactory as ɵangular_packages_platform_browser_animations_animations_c, instantiateSupportedAnimationDriver as ɵangular_packages_platform_browser_animations_animations_a, BrowserAnimationsModule, NoopAnimationsModule, ANIMATION_MODULE_TYPE, BrowserAnimationBuilder as ɵBrowserAnimationBuilder, BrowserAnimationFactory as ɵBrowserAnimationFactory, AnimationRenderer as ɵAnimationRenderer, AnimationRendererFactory as ɵAnimationRendererFactory, InjectableAnimationEngine as ɵInjectableAnimationEngine };\r\n\r\n"]}