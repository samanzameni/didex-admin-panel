{"version":3,"sources":["d:/Angular Project/Didex/didex-admin-panel/node_modules/@angular/common/bundles/common-testing.umd.js"],"names":[],"mappings":"AAAA;;;;;;;kLAOyJ;yJAChB;;oDAE5F;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0EA0S6B;;;;udAGlD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2CAkFmB,AACb;;;;;;4OAEG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2CAuLU,AACb;;;;;;;;;;;;kUAGG","file":"common-testing.umd.js","sourcesContent":["/**\r\n * @license Angular v8.2.14\r\n * (c) 2010-2019 Google LLC. https://angular.io/\r\n * License: MIT\r\n */\r\n\r\n(function (global, factory) {\r\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/common'), require('rxjs')) :\r\n    typeof define === 'function' && define.amd ? define('@angular/common/testing', ['exports', '@angular/core', '@angular/common', 'rxjs'], factory) :\r\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.common = global.ng.common || {}, global.ng.common.testing = {}), global.ng.core, global.ng.common, global.rxjs));\r\n}(this, function (exports, core, common, rxjs) { 'use strict';\r\n\r\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __rest(s, e) {\r\n        var t = {};\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n            t[p] = s[p];\r\n        if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n                t[p[i]] = s[p[i]];\r\n        return t;\r\n    }\r\n\r\n    function __decorate(decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    }\r\n\r\n    function __param(paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    }\r\n\r\n    function __metadata(metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    }\r\n\r\n    function __awaiter(thisArg, _arguments, P, generator) {\r\n        return new (P || (P = Promise))(function (resolve, reject) {\r\n            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n            function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n            function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n        });\r\n    }\r\n\r\n    function __generator(thisArg, body) {\r\n        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n        function verb(n) { return function (v) { return step([n, v]); }; }\r\n        function step(op) {\r\n            if (f) throw new TypeError(\"Generator is already executing.\");\r\n            while (_) try {\r\n                if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n                if (y = 0, t) op = [op[0] & 2, t.value];\r\n                switch (op[0]) {\r\n                    case 0: case 1: t = op; break;\r\n                    case 4: _.label++; return { value: op[1], done: false };\r\n                    case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                    case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                    default:\r\n                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                        if (t[2]) _.ops.pop();\r\n                        _.trys.pop(); continue;\r\n                }\r\n                op = body.call(thisArg, _);\r\n            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n        }\r\n    }\r\n\r\n    function __exportStar(m, exports) {\r\n        for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n    }\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\r\n\r\n    function __await(v) {\r\n        return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n    }\r\n\r\n    function __asyncGenerator(thisArg, _arguments, generator) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n        return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n        function fulfill(value) { resume(\"next\", value); }\r\n        function reject(value) { resume(\"throw\", value); }\r\n        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n    }\r\n\r\n    function __asyncDelegator(o) {\r\n        var i, p;\r\n        return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n    }\r\n\r\n    function __asyncValues(o) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var m = o[Symbol.asyncIterator], i;\r\n        return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n    }\r\n\r\n    function __makeTemplateObject(cooked, raw) {\r\n        if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n        return cooked;\r\n    };\r\n\r\n    function __importStar(mod) {\r\n        if (mod && mod.__esModule) return mod;\r\n        var result = {};\r\n        if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n        result.default = mod;\r\n        return result;\r\n    }\r\n\r\n    function __importDefault(mod) {\r\n        return (mod && mod.__esModule) ? mod : { default: mod };\r\n    }\r\n\r\n    /**\r\n     * @license\r\n     * Copyright Google Inc. All Rights Reserved.\r\n     *\r\n     * Use of this source code is governed by an MIT-style license that can be\r\n     * found in the LICENSE file at https://angular.io/license\r\n     */\r\n    /**\r\n     * A spy for {@link Location} that allows tests to fire simulated location events.\r\n     *\r\n     * @publicApi\r\n     */\r\n    var SpyLocation = /** @class */ (function () {\r\n        function SpyLocation() {\r\n            this.urlChanges = [];\r\n            this._history = [new LocationState('', '', null)];\r\n            this._historyIndex = 0;\r\n            /** @internal */\r\n            this._subject = new core.EventEmitter();\r\n            /** @internal */\r\n            this._baseHref = '';\r\n            /** @internal */\r\n            this._platformStrategy = null;\r\n            /** @internal */\r\n            this._platformLocation = null;\r\n            /** @internal */\r\n            this._urlChangeListeners = [];\r\n        }\r\n        SpyLocation.prototype.setInitialPath = function (url) { this._history[this._historyIndex].path = url; };\r\n        SpyLocation.prototype.setBaseHref = function (url) { this._baseHref = url; };\r\n        SpyLocation.prototype.path = function () { return this._history[this._historyIndex].path; };\r\n        SpyLocation.prototype.getState = function () { return this._history[this._historyIndex].state; };\r\n        SpyLocation.prototype.isCurrentPathEqualTo = function (path, query) {\r\n            if (query === void 0) { query = ''; }\r\n            var givenPath = path.endsWith('/') ? path.substring(0, path.length - 1) : path;\r\n            var currPath = this.path().endsWith('/') ? this.path().substring(0, this.path().length - 1) : this.path();\r\n            return currPath == givenPath + (query.length > 0 ? ('?' + query) : '');\r\n        };\r\n        SpyLocation.prototype.simulateUrlPop = function (pathname) {\r\n            this._subject.emit({ 'url': pathname, 'pop': true, 'type': 'popstate' });\r\n        };\r\n        SpyLocation.prototype.simulateHashChange = function (pathname) {\r\n            // Because we don't prevent the native event, the browser will independently update the path\r\n            this.setInitialPath(pathname);\r\n            this.urlChanges.push('hash: ' + pathname);\r\n            this._subject.emit({ 'url': pathname, 'pop': true, 'type': 'hashchange' });\r\n        };\r\n        SpyLocation.prototype.prepareExternalUrl = function (url) {\r\n            if (url.length > 0 && !url.startsWith('/')) {\r\n                url = '/' + url;\r\n            }\r\n            return this._baseHref + url;\r\n        };\r\n        SpyLocation.prototype.go = function (path, query, state) {\r\n            if (query === void 0) { query = ''; }\r\n            if (state === void 0) { state = null; }\r\n            path = this.prepareExternalUrl(path);\r\n            if (this._historyIndex > 0) {\r\n                this._history.splice(this._historyIndex + 1);\r\n            }\r\n            this._history.push(new LocationState(path, query, state));\r\n            this._historyIndex = this._history.length - 1;\r\n            var locationState = this._history[this._historyIndex - 1];\r\n            if (locationState.path == path && locationState.query == query) {\r\n                return;\r\n            }\r\n            var url = path + (query.length > 0 ? ('?' + query) : '');\r\n            this.urlChanges.push(url);\r\n            this._subject.emit({ 'url': url, 'pop': false });\r\n        };\r\n        SpyLocation.prototype.replaceState = function (path, query, state) {\r\n            if (query === void 0) { query = ''; }\r\n            if (state === void 0) { state = null; }\r\n            path = this.prepareExternalUrl(path);\r\n            var history = this._history[this._historyIndex];\r\n            if (history.path == path && history.query == query) {\r\n                return;\r\n            }\r\n            history.path = path;\r\n            history.query = query;\r\n            history.state = state;\r\n            var url = path + (query.length > 0 ? ('?' + query) : '');\r\n            this.urlChanges.push('replace: ' + url);\r\n        };\r\n        SpyLocation.prototype.forward = function () {\r\n            if (this._historyIndex < (this._history.length - 1)) {\r\n                this._historyIndex++;\r\n                this._subject.emit({ 'url': this.path(), 'state': this.getState(), 'pop': true });\r\n            }\r\n        };\r\n        SpyLocation.prototype.back = function () {\r\n            if (this._historyIndex > 0) {\r\n                this._historyIndex--;\r\n                this._subject.emit({ 'url': this.path(), 'state': this.getState(), 'pop': true });\r\n            }\r\n        };\r\n        SpyLocation.prototype.onUrlChange = function (fn) {\r\n            var _this = this;\r\n            this._urlChangeListeners.push(fn);\r\n            this.subscribe(function (v) { _this._notifyUrlChangeListeners(v.url, v.state); });\r\n        };\r\n        /** @internal */\r\n        SpyLocation.prototype._notifyUrlChangeListeners = function (url, state) {\r\n            if (url === void 0) { url = ''; }\r\n            this._urlChangeListeners.forEach(function (fn) { return fn(url, state); });\r\n        };\r\n        SpyLocation.prototype.subscribe = function (onNext, onThrow, onReturn) {\r\n            return this._subject.subscribe({ next: onNext, error: onThrow, complete: onReturn });\r\n        };\r\n        SpyLocation.prototype.normalize = function (url) { return null; };\r\n        SpyLocation = __decorate([\r\n            core.Injectable()\r\n        ], SpyLocation);\r\n        return SpyLocation;\r\n    }());\r\n    var LocationState = /** @class */ (function () {\r\n        function LocationState(path, query, state) {\r\n            this.path = path;\r\n            this.query = query;\r\n            this.state = state;\r\n        }\r\n        return LocationState;\r\n    }());\r\n\r\n    /**\r\n     * @license\r\n     * Copyright Google Inc. All Rights Reserved.\r\n     *\r\n     * Use of this source code is governed by an MIT-style license that can be\r\n     * found in the LICENSE file at https://angular.io/license\r\n     */\r\n    /**\r\n     * A mock implementation of {@link LocationStrategy} that allows tests to fire simulated\r\n     * location events.\r\n     *\r\n     * @publicApi\r\n     */\r\n    var MockLocationStrategy = /** @class */ (function (_super) {\r\n        __extends(MockLocationStrategy, _super);\r\n        function MockLocationStrategy() {\r\n            var _this = _super.call(this) || this;\r\n            _this.internalBaseHref = '/';\r\n            _this.internalPath = '/';\r\n            _this.internalTitle = '';\r\n            _this.urlChanges = [];\r\n            /** @internal */\r\n            _this._subject = new core.EventEmitter();\r\n            _this.stateChanges = [];\r\n            return _this;\r\n        }\r\n        MockLocationStrategy.prototype.simulatePopState = function (url) {\r\n            this.internalPath = url;\r\n            this._subject.emit(new _MockPopStateEvent(this.path()));\r\n        };\r\n        MockLocationStrategy.prototype.path = function (includeHash) {\r\n            if (includeHash === void 0) { includeHash = false; }\r\n            return this.internalPath;\r\n        };\r\n        MockLocationStrategy.prototype.prepareExternalUrl = function (internal) {\r\n            if (internal.startsWith('/') && this.internalBaseHref.endsWith('/')) {\r\n                return this.internalBaseHref + internal.substring(1);\r\n            }\r\n            return this.internalBaseHref + internal;\r\n        };\r\n        MockLocationStrategy.prototype.pushState = function (ctx, title, path, query) {\r\n            // Add state change to changes array\r\n            this.stateChanges.push(ctx);\r\n            this.internalTitle = title;\r\n            var url = path + (query.length > 0 ? ('?' + query) : '');\r\n            this.internalPath = url;\r\n            var externalUrl = this.prepareExternalUrl(url);\r\n            this.urlChanges.push(externalUrl);\r\n        };\r\n        MockLocationStrategy.prototype.replaceState = function (ctx, title, path, query) {\r\n            // Reset the last index of stateChanges to the ctx (state) object\r\n            this.stateChanges[(this.stateChanges.length || 1) - 1] = ctx;\r\n            this.internalTitle = title;\r\n            var url = path + (query.length > 0 ? ('?' + query) : '');\r\n            this.internalPath = url;\r\n            var externalUrl = this.prepareExternalUrl(url);\r\n            this.urlChanges.push('replace: ' + externalUrl);\r\n        };\r\n        MockLocationStrategy.prototype.onPopState = function (fn) { this._subject.subscribe({ next: fn }); };\r\n        MockLocationStrategy.prototype.getBaseHref = function () { return this.internalBaseHref; };\r\n        MockLocationStrategy.prototype.back = function () {\r\n            if (this.urlChanges.length > 0) {\r\n                this.urlChanges.pop();\r\n                this.stateChanges.pop();\r\n                var nextUrl = this.urlChanges.length > 0 ? this.urlChanges[this.urlChanges.length - 1] : '';\r\n                this.simulatePopState(nextUrl);\r\n            }\r\n        };\r\n        MockLocationStrategy.prototype.forward = function () { throw 'not implemented'; };\r\n        MockLocationStrategy.prototype.getState = function () { return this.stateChanges[(this.stateChanges.length || 1) - 1]; };\r\n        MockLocationStrategy = __decorate([\r\n            core.Injectable(),\r\n            __metadata(\"design:paramtypes\", [])\r\n        ], MockLocationStrategy);\r\n        return MockLocationStrategy;\r\n    }(common.LocationStrategy));\r\n    var _MockPopStateEvent = /** @class */ (function () {\r\n        function _MockPopStateEvent(newUrl) {\r\n            this.newUrl = newUrl;\r\n            this.pop = true;\r\n            this.type = 'popstate';\r\n        }\r\n        return _MockPopStateEvent;\r\n    }());\r\n\r\n    /**\r\n     * @license\r\n     * Copyright Google Inc. All Rights Reserved.\r\n     *\r\n     * Use of this source code is governed by an MIT-style license that can be\r\n     * found in the LICENSE file at https://angular.io/license\r\n     */\r\n    /**\r\n     * Parser from https://tools.ietf.org/html/rfc3986#appendix-B\r\n     * ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?\r\n     *  12            3  4          5       6  7        8 9\r\n     *\r\n     * Example: http://www.ics.uci.edu/pub/ietf/uri/#Related\r\n     *\r\n     * Results in:\r\n     *\r\n     * $1 = http:\r\n     * $2 = http\r\n     * $3 = //www.ics.uci.edu\r\n     * $4 = www.ics.uci.edu\r\n     * $5 = /pub/ietf/uri/\r\n     * $6 = <undefined>\r\n     * $7 = <undefined>\r\n     * $8 = #Related\r\n     * $9 = Related\r\n     */\r\n    var urlParse = /^(([^:\\/?#]+):)?(\\/\\/([^\\/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\r\n    function parseUrl(urlStr, baseHref) {\r\n        var verifyProtocol = /^((http[s]?|ftp):\\/\\/)/;\r\n        var serverBase;\r\n        // URL class requires full URL. If the URL string doesn't start with protocol, we need to add\r\n        // an arbitrary base URL which can be removed afterward.\r\n        if (!verifyProtocol.test(urlStr)) {\r\n            serverBase = 'http://empty.com/';\r\n        }\r\n        var parsedUrl;\r\n        try {\r\n            parsedUrl = new URL(urlStr, serverBase);\r\n        }\r\n        catch (e) {\r\n            var result = urlParse.exec(serverBase || '' + urlStr);\r\n            if (!result) {\r\n                throw new Error(\"Invalid URL: \" + urlStr + \" with base: \" + baseHref);\r\n            }\r\n            var hostSplit = result[4].split(':');\r\n            parsedUrl = {\r\n                protocol: result[1],\r\n                hostname: hostSplit[0],\r\n                port: hostSplit[1] || '',\r\n                pathname: result[5],\r\n                search: result[6],\r\n                hash: result[8],\r\n            };\r\n        }\r\n        if (parsedUrl.pathname && parsedUrl.pathname.indexOf(baseHref) === 0) {\r\n            parsedUrl.pathname = parsedUrl.pathname.substring(baseHref.length);\r\n        }\r\n        return {\r\n            hostname: !serverBase && parsedUrl.hostname || '',\r\n            protocol: !serverBase && parsedUrl.protocol || '',\r\n            port: !serverBase && parsedUrl.port || '',\r\n            pathname: parsedUrl.pathname || '/',\r\n            search: parsedUrl.search || '',\r\n            hash: parsedUrl.hash || '',\r\n        };\r\n    }\r\n    /**\r\n     * Provider for mock platform location config\r\n     *\r\n     * @publicApi\r\n     */\r\n    var MOCK_PLATFORM_LOCATION_CONFIG = new core.InjectionToken('MOCK_PLATFORM_LOCATION_CONFIG');\r\n    /**\r\n     * Mock implementation of URL state.\r\n     *\r\n     * @publicApi\r\n     */\r\n    var MockPlatformLocation = /** @class */ (function () {\r\n        function MockPlatformLocation(config) {\r\n            this.baseHref = '';\r\n            this.hashUpdate = new rxjs.Subject();\r\n            this.urlChanges = [{ hostname: '', protocol: '', port: '', pathname: '/', search: '', hash: '', state: null }];\r\n            if (config) {\r\n                this.baseHref = config.appBaseHref || '';\r\n                var parsedChanges = this.parseChanges(null, config.startUrl || 'http://<empty>/', this.baseHref);\r\n                this.urlChanges[0] = __assign({}, parsedChanges);\r\n            }\r\n        }\r\n        Object.defineProperty(MockPlatformLocation.prototype, \"hostname\", {\r\n            get: function () { return this.urlChanges[0].hostname; },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(MockPlatformLocation.prototype, \"protocol\", {\r\n            get: function () { return this.urlChanges[0].protocol; },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(MockPlatformLocation.prototype, \"port\", {\r\n            get: function () { return this.urlChanges[0].port; },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(MockPlatformLocation.prototype, \"pathname\", {\r\n            get: function () { return this.urlChanges[0].pathname; },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(MockPlatformLocation.prototype, \"search\", {\r\n            get: function () { return this.urlChanges[0].search; },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(MockPlatformLocation.prototype, \"hash\", {\r\n            get: function () { return this.urlChanges[0].hash; },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(MockPlatformLocation.prototype, \"state\", {\r\n            get: function () { return this.urlChanges[0].state; },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        MockPlatformLocation.prototype.getBaseHrefFromDOM = function () { return this.baseHref; };\r\n        MockPlatformLocation.prototype.onPopState = function (fn) {\r\n            // No-op: a state stack is not implemented, so\r\n            // no events will ever come.\r\n        };\r\n        MockPlatformLocation.prototype.onHashChange = function (fn) { this.hashUpdate.subscribe(fn); };\r\n        Object.defineProperty(MockPlatformLocation.prototype, \"href\", {\r\n            get: function () {\r\n                var url = this.protocol + \"//\" + this.hostname + (this.port ? ':' + this.port : '');\r\n                url += \"\" + (this.pathname === '/' ? '' : this.pathname) + this.search + this.hash;\r\n                return url;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(MockPlatformLocation.prototype, \"url\", {\r\n            get: function () { return \"\" + this.pathname + this.search + this.hash; },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        MockPlatformLocation.prototype.parseChanges = function (state, url, baseHref) {\r\n            if (baseHref === void 0) { baseHref = ''; }\r\n            // When the `history.state` value is stored, it is always copied.\r\n            state = JSON.parse(JSON.stringify(state));\r\n            return __assign({}, parseUrl(url, baseHref), { state: state });\r\n        };\r\n        MockPlatformLocation.prototype.replaceState = function (state, title, newUrl) {\r\n            var _a = this.parseChanges(state, newUrl), pathname = _a.pathname, search = _a.search, parsedState = _a.state, hash = _a.hash;\r\n            this.urlChanges[0] = __assign({}, this.urlChanges[0], { pathname: pathname, search: search, hash: hash, state: parsedState });\r\n        };\r\n        MockPlatformLocation.prototype.pushState = function (state, title, newUrl) {\r\n            var _a = this.parseChanges(state, newUrl), pathname = _a.pathname, search = _a.search, parsedState = _a.state, hash = _a.hash;\r\n            this.urlChanges.unshift(__assign({}, this.urlChanges[0], { pathname: pathname, search: search, hash: hash, state: parsedState }));\r\n        };\r\n        MockPlatformLocation.prototype.forward = function () { throw new Error('Not implemented'); };\r\n        MockPlatformLocation.prototype.back = function () {\r\n            var _this = this;\r\n            var oldUrl = this.url;\r\n            var oldHash = this.hash;\r\n            this.urlChanges.shift();\r\n            var newHash = this.hash;\r\n            if (oldHash !== newHash) {\r\n                scheduleMicroTask(function () { return _this.hashUpdate.next({\r\n                    type: 'hashchange', state: null, oldUrl: oldUrl, newUrl: _this.url\r\n                }); });\r\n            }\r\n        };\r\n        MockPlatformLocation.prototype.getState = function () { return this.state; };\r\n        MockPlatformLocation = __decorate([\r\n            core.Injectable(),\r\n            __param(0, core.Inject(MOCK_PLATFORM_LOCATION_CONFIG)), __param(0, core.Optional()),\r\n            __metadata(\"design:paramtypes\", [Object])\r\n        ], MockPlatformLocation);\r\n        return MockPlatformLocation;\r\n    }());\r\n    function scheduleMicroTask(cb) {\r\n        Promise.resolve(null).then(cb);\r\n    }\r\n\r\n    /**\r\n     * @license\r\n     * Copyright Google Inc. All Rights Reserved.\r\n     *\r\n     * Use of this source code is governed by an MIT-style license that can be\r\n     * found in the LICENSE file at https://angular.io/license\r\n     */\r\n\r\n    /**\r\n     * @license\r\n     * Copyright Google Inc. All Rights Reserved.\r\n     *\r\n     * Use of this source code is governed by an MIT-style license that can be\r\n     * found in the LICENSE file at https://angular.io/license\r\n     */\r\n    // This file only reexports content of the `src` folder. Keep it that way.\r\n\r\n    /**\r\n     * @license\r\n     * Copyright Google Inc. All Rights Reserved.\r\n     *\r\n     * Use of this source code is governed by an MIT-style license that can be\r\n     * found in the LICENSE file at https://angular.io/license\r\n     */\r\n\r\n    /**\r\n     * Generated bundle index. Do not edit.\r\n     */\r\n\r\n    exports.SpyLocation = SpyLocation;\r\n    exports.MockLocationStrategy = MockLocationStrategy;\r\n    exports.MOCK_PLATFORM_LOCATION_CONFIG = MOCK_PLATFORM_LOCATION_CONFIG;\r\n    exports.MockPlatformLocation = MockPlatformLocation;\r\n\r\n    Object.defineProperty(exports, '__esModule', { value: true });\r\n\r\n}));\r\n\r\n"]}